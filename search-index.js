var N = null;var searchIndex = {};
searchIndex["git2"]={"doc":"libgit2 bindings for Rust","items":[[3,"Blame","git2","Opaque structure to hold blame results.",N,N],[3,"BlameHunk","","Structure that represents a blame hunk.",N,N],[3,"BlameIter","","An iterator over the hunks in a blame.",N,N],[3,"BlameOptions","","Blame options",N,N],[3,"Blob","","A structure to represent a git [blob][1]",N,N],[3,"BlobWriter","","A structure to represent a git writestream for blobs",N,N],[3,"Branch","","A structure to represent a git [branch][1]",N,N],[3,"Branches","","An iterator over the branches inside of a repository.",N,N],[3,"Buf","","A structure to wrap an intermediate buffer used by libgit2.",N,N],[3,"Commit","","A structure to represent a git [commit][1]",N,N],[3,"Parents","","An iterator over the parent commits of a commit.",N,N],[3,"Config","","A structure representing a git configuration key/value store",N,N],[3,"ConfigEntry","","A struct representing a certain entry owned by a `Config`…",N,N],[3,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config`…",N,N],[3,"Cred","","A structure to represent git credentials in libgit2.",N,N],[3,"CredentialHelper","","Management of the gitcredentials(7) interface.",N,N],[12,"username","","A public field representing the currently discovered…",0,N],[3,"Describe","","The result of a `describe` operation on either an…",N,N],[3,"DescribeFormatOptions","","Options which can be used to customize how a description…",N,N],[3,"DescribeOptions","","Options which indicate how a `Describe` is created.",N,N],[3,"Diff","","The diff object that contains all individual file deltas.",N,N],[3,"DiffDelta","","Description of changes to one entry.",N,N],[3,"DiffFile","","Description of one side of a delta.",N,N],[3,"DiffOptions","","Structure describing options about how the diff should be…",N,N],[3,"Deltas","","An iterator over the diffs in a delta",N,N],[3,"DiffBinary","","Structure describing the binary contents of a diff.",N,N],[3,"DiffBinaryFile","","The contents of one of the files in a binary diff.",N,N],[3,"DiffLine","","Structure describing a line (or data span) of a diff.",N,N],[3,"DiffHunk","","Structure describing a hunk of a diff.",N,N],[3,"DiffStats","","Structure describing a hunk of a diff.",N,N],[3,"DiffFindOptions","","Control behavior of rename and copy detection",N,N],[3,"Error","","A structure to represent errors coming out of libgit2.",N,N],[3,"Index","","A structure to represent a git [index][1]",N,N],[3,"IndexConflict","","A structure to represent the information returned when a…",N,N],[12,"ancestor","","The ancestor index entry of the two conflicting index…",1,N],[12,"our","","The index entry originating from the user's copy of the…",1,N],[12,"their","","The index entry originating from the external repository.…",1,N],[3,"IndexConflicts","","An iterator over the conflicting entries in an index",N,N],[3,"IndexEntry","","A structure to represent an entry or a file inside of an…",N,N],[12,"ctime","","",2,N],[12,"mtime","","",2,N],[12,"dev","","",2,N],[12,"ino","","",2,N],[12,"mode","","",2,N],[12,"uid","","",2,N],[12,"gid","","",2,N],[12,"file_size","","",2,N],[12,"id","","",2,N],[12,"flags","","",2,N],[12,"flags_extended","","",2,N],[12,"path","","",2,N],[3,"IndexEntries","","An iterator over the entries in an index",N,N],[3,"AnnotatedCommit","","A structure to represent an annotated commit, the input to…",N,N],[3,"MergeOptions","","Options to specify when merging.",N,N],[3,"Note","","A structure representing a [note][note] in git.",N,N],[3,"Notes","","An iterator over all of the notes within a repository.",N,N],[3,"Object","","A structure to represent a git [object][1]",N,N],[3,"Oid","","Unique identity of any object (commit, tree, blob, tag).",N,N],[3,"PackBuilder","","A builder for creating a packfile",N,N],[3,"Pathspec","","Structure representing a compiled pathspec used for…",N,N],[3,"PathspecMatchList","","List of filenames matching a pathspec.",N,N],[3,"PathspecFailedEntries","","Iterator over the failed list of pathspec items that did…",N,N],[3,"PathspecDiffEntries","","Iterator over the matching diff deltas.",N,N],[3,"PathspecEntries","","Iterator over the matched paths in a pathspec.",N,N],[3,"Patch","","A structure representing the text changes in a single diff…",N,N],[3,"ProxyOptions","","Options which can be specified to various fetch operations.",N,N],[3,"Rebase","","Representation of a rebase",N,N],[3,"RebaseOptions","","Rebase options",N,N],[3,"RebaseOperation","","A rebase operation",N,N],[3,"Reference","","A structure to represent a git [reference][1].",N,N],[3,"References","","An iterator over the references in a repository.",N,N],[3,"ReferenceNames","","An iterator over the names of references in a repository.",N,N],[3,"Reflog","","A reference log of a git repository.",N,N],[3,"ReflogEntry","","An entry inside the reflog of a repository",N,N],[3,"ReflogIter","","An iterator over the entries inside of a reflog.",N,N],[3,"Refspec","","A structure to represent a git [refspec][1].",N,N],[3,"Remote","","A structure representing a [remote][1] of a git repository.",N,N],[3,"RemoteConnection","","Holds callbacks for a connection to a `Remote`.…",N,N],[3,"Refspecs","","An iterator over the refspecs that a remote contains.",N,N],[3,"RemoteHead","","Description of a reference advertised bya remote server,…",N,N],[3,"FetchOptions","","Options which can be specified to various fetch operations.",N,N],[3,"PushOptions","","Options to control the behavior of a git push.",N,N],[3,"RemoteCallbacks","","A structure to contain the callbacks which are invoked…",N,N],[3,"Progress","","Struct representing the progress by an in-flight transfer.",N,N],[3,"Repository","","An owned git repository, representing all state associated…",N,N],[3,"RepositoryInitOptions","","Options which can be used to configure how a repository is…",N,N],[3,"Revspec","","A revspec represents a range of revisions within a…",N,N],[3,"Revwalk","","A revwalk allows traversal of the commit graph defined by…",N,N],[3,"Signature","","A Signature is used to indicate authorship of various…",N,N],[3,"StatusOptions","","Options that can be provided to `repo.statuses()` to…",N,N],[3,"Statuses","","A container for a list of status information about a…",N,N],[3,"StatusIter","","An iterator over the statuses in a `Statuses` instance.",N,N],[3,"StatusEntry","","A structure representing an entry in the `Statuses`…",N,N],[3,"StashApplyOptions","","Stash application options structure",N,N],[3,"Submodule","","A structure to represent a git [submodule][1]",N,N],[3,"SubmoduleUpdateOptions","","Options to update a submodule.",N,N],[3,"Tag","","A structure to represent a git [tag][1]",N,N],[3,"Time","","Time in a signature",N,N],[3,"IndexTime","","Time structure used in a git index entry.",N,N],[3,"Tree","","A structure to represent a git [tree][1]",N,N],[3,"TreeEntry","","A structure representing an entry inside of a tree. An…",N,N],[3,"TreeIter","","An iterator over the entries in a tree.",N,N],[3,"TreeBuilder","","Constructor for in-memory trees",N,N],[3,"Odb","","A structure to represent a git object database",N,N],[3,"OdbObject","","An object from the Object Database.",N,N],[3,"OdbReader","","A structure to represent a git ODB rstream",N,N],[3,"OdbWriter","","A structure to represent a git ODB wstream",N,N],[3,"Sort","","Orderings that may be specified for Revwalk iteration.",N,N],[3,"CredentialType","","Types of credentials that can be requested by a credential…",N,N],[3,"IndexEntryFlag","","Flags for the `flags` field of an IndexEntry.",N,N],[3,"IndexEntryExtendedFlag","","Flags for the `extended_flags` field of an IndexEntry.",N,N],[3,"IndexAddOption","","Flags for APIs that add files matching pathspec",N,N],[3,"RepositoryOpenFlags","","Flags for `Repository::open_ext`",N,N],[3,"RevparseMode","","Flags for the return value of `Repository::revparse`",N,N],[3,"MergeAnalysis","","The results of `merge_analysis` indicating the merge…",N,N],[3,"MergePreference","","The user's stated preference for merges.",N,N],[3,"Status","","Status flags for a single file",N,N],[3,"RepositoryInitMode","","Mode options for RepositoryInitOptions",N,N],[3,"SubmoduleStatus","","Return codes for submodule status.",N,N],[3,"PathspecFlags","","...",N,N],[3,"CheckoutNotificationType","","Types of notifications emitted from checkouts.",N,N],[3,"DiffStatsFormat","","Formatting options for diff stats",N,N],[3,"StashApplyFlags","","",N,N],[3,"StashFlags","","",N,N],[4,"DiffBinaryKind","","When producing a binary diff, the binary data returned…",N,N],[13,"None","","There is no binary delta",3,N],[13,"Literal","","The binary data is the literal contents of the file",3,N],[13,"Delta","","The binary data is the delta from one side to the other",3,N],[4,"PackBuilderStage","","Stages that are reported by the `PackBuilder` progress…",N,N],[13,"AddingObjects","","Adding objects to the pack",4,N],[13,"Deltafication","","Deltafication of the pack",4,N],[4,"RebaseOperationType","","A rebase operation",N,N],[13,"Pick","","The given commit is to be cherry-picked. The client should…",5,N],[13,"Reword","","The given commit is to be cherry-picked, but the client…",5,N],[13,"Edit","","The given commit is to be cherry-picked, but the client…",5,N],[13,"Squash","","The given commit is to be squashed into the previous…",5,N],[13,"Fixup","","The given commit is to be squashed into the previous…",5,N],[13,"Exec","","No commit will be cherry-picked. The client should run the…",5,N],[4,"StatusShow","","Enumeration of possible methods of what can be shown…",N,N],[13,"Index","","Only gives status based on HEAD to index comparison, not…",6,N],[13,"Workdir","","Only gives status based on index to working directory…",6,N],[13,"IndexAndWorkdir","","The default, this roughly matches `git status --porcelain`…",6,N],[4,"TreeWalkMode","","A binary indicator of whether a tree walk should be…",N,N],[13,"PreOrder","","Runs the traversal in pre order.",7,N],[13,"PostOrder","","Runs the traversal in post order.",7,N],[4,"TreeWalkResult","","Possible return codes for tree walking callback functions.",N,N],[13,"Ok","","Continue with the traversal as normal.",8,N],[13,"Skip","","Skip the current node (in pre-order mode).",8,N],[13,"Abort","","Completely stop the traversal.",8,N],[4,"ErrorCode","","An enumeration of possible errors that can happen when…",N,N],[13,"GenericError","","Generic error",9,N],[13,"NotFound","","Requested object could not be found",9,N],[13,"Exists","","Object exists preventing operation",9,N],[13,"Ambiguous","","More than one object matches",9,N],[13,"BufSize","","Output buffer too short to hold data",9,N],[13,"User","","User-generated error",9,N],[13,"BareRepo","","Operation not allowed on bare repository",9,N],[13,"UnbornBranch","","HEAD refers to branch with no commits",9,N],[13,"Unmerged","","Merge in progress prevented operation",9,N],[13,"NotFastForward","","Reference was not fast-forwardable",9,N],[13,"InvalidSpec","","Name/ref spec was not in a valid format",9,N],[13,"Conflict","","Checkout conflicts prevented operation",9,N],[13,"Locked","","Lock file prevented operation",9,N],[13,"Modified","","Reference value does not match expected",9,N],[13,"Auth","","Authentication error",9,N],[13,"Certificate","","Server certificate is invalid",9,N],[13,"Applied","","Patch/merge has already been applied",9,N],[13,"Peel","","The requested peel operation is not possible",9,N],[13,"Eof","","Unexpected EOF",9,N],[13,"Invalid","","Invalid operation or input",9,N],[13,"Uncommitted","","Uncommitted changes in index prevented operation",9,N],[13,"Directory","","Operation was not valid for a directory,",9,N],[4,"ErrorClass","","An enumeration of possible categories of things that can…",N,N],[13,"None","","Uncategorized",10,N],[13,"NoMemory","","Out of memory or insufficient allocated space",10,N],[13,"Os","","Syscall or standard system library error",10,N],[13,"Invalid","","Invalid input",10,N],[13,"Reference","","Error resolving or manipulating a reference",10,N],[13,"Zlib","","ZLib failure",10,N],[13,"Repository","","Bad repository state",10,N],[13,"Config","","Bad configuration",10,N],[13,"Regex","","Regex failure",10,N],[13,"Odb","","Bad object",10,N],[13,"Index","","Invalid index data",10,N],[13,"Object","","Error creating or obtaining an object",10,N],[13,"Net","","Network error",10,N],[13,"Tag","","Error manpulating a tag",10,N],[13,"Tree","","Invalid value in tree",10,N],[13,"Indexer","","Hashing or packing error",10,N],[13,"Ssl","","Error from SSL",10,N],[13,"Submodule","","Error involing submodules",10,N],[13,"Thread","","Threading error",10,N],[13,"Stash","","Error manipulating a stash",10,N],[13,"Checkout","","Checkout failure",10,N],[13,"FetchHead","","Invalid FETCH_HEAD",10,N],[13,"Merge","","Merge failure",10,N],[13,"Ssh","","SSH failure",10,N],[13,"Filter","","Error manipulating filters",10,N],[13,"Revert","","Error reverting commit",10,N],[13,"Callback","","Error from a user callback",10,N],[13,"CherryPick","","Error cherry-picking commit",10,N],[13,"Describe","","Can't describe object",10,N],[13,"Rebase","","Error during rebase",10,N],[13,"Filesystem","","Filesystem-related error",10,N],[4,"RepositoryState","","A listing of the possible states that a repository can be…",N,N],[13,"Clean","","",11,N],[13,"Merge","","",11,N],[13,"Revert","","",11,N],[13,"RevertSequence","","",11,N],[13,"CherryPick","","",11,N],[13,"CherryPickSequence","","",11,N],[13,"Bisect","","",11,N],[13,"Rebase","","",11,N],[13,"RebaseInteractive","","",11,N],[13,"RebaseMerge","","",11,N],[13,"ApplyMailbox","","",11,N],[13,"ApplyMailboxOrRebase","","",11,N],[4,"Direction","","An enumeration of the possible directions for a remote.",N,N],[13,"Fetch","","Data will be fetched (read) from this remote.",12,N],[13,"Push","","Data will be pushed (written) to this remote.",12,N],[4,"ResetType","","An enumeration of the operations that can be performed for…",N,N],[13,"Soft","","Move the head to the given commit.",13,N],[13,"Mixed","","Soft plus reset the index to the commit.",13,N],[13,"Hard","","Mixed plus changes in the working tree are discarded.",13,N],[4,"ObjectType","","An enumeration all possible kinds objects may have.",N,N],[13,"Any","","Any kind of git object",14,N],[13,"Commit","","An object which corresponds to a git commit",14,N],[13,"Tree","","An object which corresponds to a git tree",14,N],[13,"Blob","","An object which corresponds to a git blob",14,N],[13,"Tag","","An object which corresponds to a git tag",14,N],[4,"ReferenceType","","An enumeration of all possile kinds of references.",N,N],[13,"Oid","","A reference which points at an object id.",15,N],[13,"Symbolic","","A reference which points at another reference.",15,N],[4,"BranchType","","An enumeration for the possible types of branches",N,N],[13,"Local","","A local branch not on a remote.",16,N],[13,"Remote","","A branch for a remote.",16,N],[4,"ConfigLevel","","An enumeration of the possible priority levels of a config…",N,N],[13,"ProgramData","","System-wide on Windows, for compatibility with portable git",17,N],[13,"System","","System-wide configuration file, e.g. /etc/gitconfig",17,N],[13,"XDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",17,N],[13,"Global","","User-specific configuration, e.g. ~/.gitconfig",17,N],[13,"Local","","Repository specific config, e.g. $PWD/.git/config",17,N],[13,"App","","Application specific configuration file",17,N],[13,"Highest","","Highest level available",17,N],[4,"FileFavor","","Merge file favor options for `MergeOptions` instruct the…",N,N],[13,"Normal","","When a region of a file is changed in both branches, a…",18,N],[13,"Ours","","When a region of a file is changed in both branches, the…",18,N],[13,"Theirs","","When a region of a file is changed in both branches, the…",18,N],[13,"Union","","When a region of a file is changed in both branches, the…",18,N],[4,"Delta","","What type of change is described by a `DiffDelta`?",N,N],[13,"Unmodified","","No changes",19,N],[13,"Added","","Entry does not exist in old version",19,N],[13,"Deleted","","Entry does not exist in new version",19,N],[13,"Modified","","Entry content changed between old and new",19,N],[13,"Renamed","","Entry was renamed between old and new",19,N],[13,"Copied","","Entry was copied from another old entry",19,N],[13,"Ignored","","Entry is ignored item in workdir",19,N],[13,"Untracked","","Entry is untracked item in workdir",19,N],[13,"Typechange","","Type of entry changed between old and new",19,N],[13,"Unreadable","","Entry is unreadable",19,N],[13,"Conflicted","","Entry in the index is conflicted",19,N],[4,"SubmoduleIgnore","","Submodule ignore values",N,N],[13,"Unspecified","","Use the submodule's configuration",20,N],[13,"None","","Any change or untracked file is considered dirty",20,N],[13,"Untracked","","Only dirty if tracked files have changed",20,N],[13,"Dirty","","Only dirty if HEAD has moved",20,N],[13,"All","","Never dirty",20,N],[4,"DiffFormat","","Possible output formats for diff data",N,N],[13,"Patch","","full git diff",21,N],[13,"PatchHeader","","just the headers of the patch",21,N],[13,"Raw","","like git diff --raw",21,N],[13,"NameOnly","","like git diff --name-only",21,N],[13,"NameStatus","","like git diff --name-status",21,N],[4,"AutotagOption","","Automatic tag following options.",N,N],[13,"Unspecified","","Use the setting from the remote's configuration",22,N],[13,"Auto","","Ask the server for tags pointing to objects we're already…",22,N],[13,"None","","Don't ask for any tags beyond the refspecs",22,N],[13,"All","","Ask for all the tags",22,N],[4,"FetchPrune","","Configuration for how pruning is done on a fetch",N,N],[13,"Unspecified","","Use the setting from the configuration",23,N],[13,"On","","Force pruning on",23,N],[13,"Off","","Force pruning off",23,N],[4,"StashApplyProgress","","",N,N],[13,"None","","None",24,N],[13,"LoadingStash","","Loading the stashed data from the object database",24,N],[13,"AnalyzeIndex","","The stored index is being analyzed",24,N],[13,"AnalyzeModified","","The modified files are being analyzed",24,N],[13,"AnalyzeUntracked","","The untracked and ignored files are being analyzed",24,N],[13,"CheckoutUntracked","","The untracked files are being written to disk",24,N],[13,"CheckoutModified","","The modified files are being written to disk",24,N],[13,"Done","","The stash was applied successfully",24,N],[5,"message_prettify","","Clean up a message, removing extraneous whitespace, and…",N,[[["t"],["option",["u8"]]],["result",["string","error"]]]],[0,"build","","Builder-pattern objects for configuration various git…",N,N],[3,"RepoBuilder","git2::build","A builder struct which is used to build configuration for…",N,N],[3,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository.",N,N],[4,"CloneLocal","","Options that can be passed to `RepoBuilder::clone_local`.",N,N],[13,"Auto","","Auto-detect (default)",25,N],[13,"Local","","Bypass the git-aware transport even for `file://` urls.",25,N],[13,"None","","Never bypass the git-aware transport",25,N],[13,"NoLinks","","Bypass the git-aware transport, but don't try to use…",25,N],[6,"RemoteCreate","","Type of callback passed to `RepoBuilder::remote_create`.",N,N],[6,"Progress","","Checkout progress notification callback.",N,N],[6,"Notify","","Checkout notifications callback.",N,N],[11,"new","","Creates a new repository builder with all of the default…",26,[[],["repobuilder"]]],[11,"bare","","Indicate whether the repository will be cloned as a bare…",26,[[["self"],["bool"]],["repobuilder"]]],[11,"branch","","Specify the name of the branch to check out after the clone.",26,[[["self"],["str"]],["repobuilder"]]],[11,"clone_local","","Configures options for bypassing the git-aware transport…",26,[[["self"],["clonelocal"]],["repobuilder"]]],[11,"with_checkout","","Configure the checkout which will be performed by…",26,[[["self"],["checkoutbuilder"]],["repobuilder"]]],[11,"fetch_options","","Options which control the fetch, including callbacks.",26,[[["self"],["fetchoptions"]],["repobuilder"]]],[11,"remote_create","","Configures a callback used to create the git remote, prior…",26,[[["self"],["f"]],["repobuilder"]]],[11,"clone","","Clone a remote repository.",26,[[["self"],["str"],["path"]],["result",["repository","error"]]]],[11,"new","","Creates a new builder for checkouts with all of its…",27,[[],["checkoutbuilder"]]],[11,"dry_run","","Indicate that this checkout should perform a dry run by…",27,[[["self"]],["checkoutbuilder"]]],[11,"force","","Take any action necessary to get the working directory to…",27,[[["self"]],["checkoutbuilder"]]],[11,"safe","","Indicate that the checkout should be performed safely,…",27,[[["self"]],["checkoutbuilder"]]],[11,"recreate_missing","","In safe mode, create files that don't exist.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"allow_conflicts","","In safe mode, apply safe file updates even when there are…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"remove_untracked","","Remove untracked files from the working dir.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"remove_ignored","","Remove ignored files from the working dir.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"update_only","","Only update the contents of files that already exist.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"update_index","","Prevents checkout from writing the updated files'…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"refresh","","Indicate whether the index and git attributes should be…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"skip_unmerged","","Skip files with unmerged index entries.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"use_ours","","Indicate whether the checkout should proceed on conflicts…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"use_theirs","","Indicate whether the checkout should proceed on conflicts…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"overwrite_ignored","","Indicate whether ignored files should be overwritten…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"conflict_style_merge","","Indicate whether a normal merge file should be written for…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"notify_on","","Specify for which notification types to invoke the…",27,[[["self"],["checkoutnotificationtype"]],["checkoutbuilder"]]],[11,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3…",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",27,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"dir_perm","","Set the mode with which new directories are created.",27,[[["self"],["i32"]],["checkoutbuilder"]]],[11,"file_perm","","Set the mode with which new files are created.",27,[[["self"],["i32"]],["checkoutbuilder"]]],[11,"path","","Add a path to be checked out.",27,[[["self"],["t"]],["checkoutbuilder"]]],[11,"target_dir","","Set the directory to check out to",27,[[["self"],["path"]],["checkoutbuilder"]]],[11,"ancestor_label","","The name of the common ancestor side of conflicts",27,[[["self"],["str"]],["checkoutbuilder"]]],[11,"our_label","","The name of the common our side of conflicts",27,[[["self"],["str"]],["checkoutbuilder"]]],[11,"their_label","","The name of the common their side of conflicts",27,[[["self"],["str"]],["checkoutbuilder"]]],[11,"progress","","Set a callback to receive notifications of checkout…",27,[[["self"],["f"]],["checkoutbuilder"]]],[11,"notify","","Set a callback to receive checkout notifications.",27,[[["self"],["f"]],["checkoutbuilder"]]],[11,"configure","","Configure a raw checkout options based on this…",27,[[["self"],["git_checkout_options"]]]],[0,"cert","git2","Certificate types which are passed to `CertificateCheck`…",N,N],[3,"Cert","git2::cert","A certificate for a remote connection, viewable as one of…",N,N],[3,"CertHostkey","","Hostkey information taken from libssh2",N,N],[3,"CertX509","","X.509 certificate information",N,N],[11,"as_hostkey","","Attempt to view this certificate as an SSH hostkey.",28,[[["self"]],["option",["certhostkey"]]]],[11,"as_x509","","Attempt to view this certificate as an X.509 certificate.",28,[[["self"]],["option",["certx509"]]]],[11,"hash_md5","","Returns the md5 hash of the hostkey, if available.",29,[[["self"]],["option"]]],[11,"hash_sha1","","Returns the SHA-1 hash of the hostkey, if available.",29,[[["self"]],["option"]]],[11,"data","","Return the X.509 certificate data as a byte slice",30,N],[0,"string_array","git2","Bindings to libgit2's raw `git_strarray` type",N,N],[3,"StringArray","git2::string_array","A string array structure used by libgit2",N,N],[3,"Iter","","A forward iterator over the strings of an array, casted to…",N,N],[3,"IterBytes","","A forward iterator over the strings of an array, casted to…",N,N],[11,"get","","Returns None if the i'th string is not utf8 or if i is out…",31,[[["self"],["usize"]],["option",["str"]]]],[11,"get_bytes","","Returns None if `i` is out of bounds.",31,[[["self"],["usize"]],["option"]]],[11,"iter","","Returns an iterator over the strings contained within this…",31,[[["self"]],["iter"]]],[11,"iter_bytes","","Returns an iterator over the strings contained within this…",31,[[["self"]],["iterbytes"]]],[11,"len","","Returns the number of strings in this array.",31,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if this array is empty.",31,[[["self"]],["bool"]]],[0,"oid_array","git2","Bindings to libgit2's raw `git_oidarray` type",N,N],[3,"OidArray","git2::oid_array","An oid array structure used by libgit2",N,N],[0,"transport","git2","Interfaces for adding custom transports to libgit2",N,N],[3,"Transport","git2::transport","A transport is a structure which knows how to transfer…",N,N],[4,"Service","","Actions that a smart transport can ask a subtransport to…",N,N],[13,"UploadPackLs","","",32,N],[13,"UploadPack","","",32,N],[13,"ReceivePackLs","","",32,N],[13,"ReceivePack","","",32,N],[5,"register","","Add a custom transport definition, to be used in addition…",N,[[["str"],["f"]],["result",["error"]]]],[8,"SmartSubtransport","","Interface used by smart transports.",N,N],[10,"action","","Indicates that this subtransport will be performing the…",33,[[["self"],["str"],["service"]],["result",["box","error"]]]],[10,"close","","Terminates a connection with the remote.",33,[[["self"]],["result",["error"]]]],[8,"SmartSubtransportStream","","An instance of a stream over which a smart transport will…",N,N],[11,"smart","","Creates a new transport which will use the \"smart\"…",34,[[["remote"],["bool"],["s"]],["result",["transport","error"]]]],[11,"len","git2","Gets the number of hunks that exist in the blame structure.",35,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` is there is no hunk in the blame structure.",35,[[["self"]],["bool"]]],[11,"get_index","","Gets the blame hunk at the given index.",35,[[["self"],["usize"]],["option",["blamehunk"]]]],[11,"get_line","","Gets the hunk that relates to the given line number in the…",35,[[["self"],["usize"]],["option",["blamehunk"]]]],[11,"iter","","Returns an iterator over the hunks in this blame.",35,[[["self"]],["blameiter"]]],[11,"final_commit_id","","Returns OID of the commit where this line was last changed",36,[[["self"]],["oid"]]],[11,"final_signature","","Returns signature of the commit.",36,[[["self"]],["signature"]]],[11,"final_start_line","","Returns line number where this hunk begins.",36,[[["self"]],["usize"]]],[11,"orig_commit_id","","Returns the OID of the commit where this hunk was found.",36,[[["self"]],["oid"]]],[11,"orig_signature","","Returns signature of the commit.",36,[[["self"]],["signature"]]],[11,"orig_start_line","","Returns line number where this hunk begins.",36,[[["self"]],["usize"]]],[11,"path","","Returns path to the file where this hunk originated.",36,[[["self"]],["option",["path"]]]],[11,"is_boundary","","Tests whether this hunk has been tracked to a boundary…",36,[[["self"]],["bool"]]],[11,"lines_in_hunk","","Returns number of lines in this hunk.",36,[[["self"]],["usize"]]],[11,"new","","Initialize options",37,[[],["blameoptions"]]],[11,"track_copies_same_file","","Track lines that have moved within a file.",37,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_same_commit_moves","","Track lines that have moved across files in the same commit.",37,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_same_commit_copies","","Track lines that have been copied from another file that…",37,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_any_commit_copies","","Track lines that have been copied from another file that…",37,[[["self"],["bool"]],["blameoptions"]]],[11,"first_parent","","Restrict the search of commits to those reachable…",37,[[["self"],["bool"]],["blameoptions"]]],[11,"newest_commit","","Setter for the id of the newest commit to consider.",37,[[["self"],["oid"]],["blameoptions"]]],[11,"oldest_commit","","Setter for the id of the oldest commit to consider.",37,[[["self"],["oid"]],["blameoptions"]]],[11,"id","","Get the id (SHA1) of a repository blob",38,[[["self"]],["oid"]]],[11,"is_binary","","Determine if the blob content is most certainly binary or…",38,[[["self"]],["bool"]]],[11,"content","","Get the content of this blob.",38,N],[11,"as_object","","Casts this Blob to be usable as an `Object`",38,[[["self"]],["object"]]],[11,"into_object","","Consumes Blob to be returned as an `Object`",38,[[["self"]],["object"]]],[11,"commit","","Finalize blob writing stream and write the blob to the…",39,[[["self"]],["result",["oid","error"]]]],[11,"wrap","","Creates Branch type from a Reference",40,[[["reference"]],["branch"]]],[11,"get","","Gain access to the reference that is this branch",40,[[["self"]],["reference"]]],[11,"into_reference","","Take ownership of the underlying reference.",40,[[["self"]],["reference"]]],[11,"delete","","Delete an existing branch reference.",40,[[["self"]],["result",["error"]]]],[11,"is_head","","Determine if the current local branch is pointed at by HEAD.",40,[[["self"]],["bool"]]],[11,"rename","","Move/rename an existing local branch reference.",40,[[["self"],["str"],["bool"]],["result",["branch","error"]]]],[11,"name","","Return the name of the given local or remote branch.",40,[[["self"]],["result",["option","error"]]]],[11,"name_bytes","","Return the name of the given local or remote branch.",40,[[["self"]],["result",["error"]]]],[11,"upstream","","Return the reference supporting the remote tracking…",40,[[["self"]],["result",["branch","error"]]]],[11,"set_upstream","","Set the upstream configuration for a given local branch.",40,[[["self"],["option",["str"]]],["result",["error"]]]],[11,"from_raw","","Creates a new iterator from the raw pointer given.",41,N],[11,"new","","Creates a new empty buffer.",42,[[],["buf"]]],[11,"as_str","","Attempt to view this buffer as a string slice.",42,[[["self"]],["option",["str"]]]],[11,"id","","Get the id (SHA1) of a repository commit",43,[[["self"]],["oid"]]],[11,"tree_id","","Get the id of the tree pointed to by this commit.",43,[[["self"]],["oid"]]],[11,"tree","","Get the tree pointed to by a commit.",43,[[["self"]],["result",["tree","error"]]]],[11,"raw","","Get access to the underlying raw pointer.",43,N],[11,"message","","Get the full message of a commit.",43,[[["self"]],["option",["str"]]]],[11,"message_bytes","","Get the full message of a commit as a byte slice.",43,N],[11,"message_encoding","","Get the encoding for the message of a commit, as a string…",43,[[["self"]],["option",["str"]]]],[11,"message_raw","","Get the full raw message of a commit.",43,[[["self"]],["option",["str"]]]],[11,"message_raw_bytes","","Get the full raw message of a commit.",43,N],[11,"raw_header","","Get the full raw text of the commit header.",43,[[["self"]],["option",["str"]]]],[11,"raw_header_bytes","","Get the full raw text of the commit header.",43,N],[11,"summary","","Get the short \"summary\" of the git commit message.",43,[[["self"]],["option",["str"]]]],[11,"summary_bytes","","Get the short \"summary\" of the git commit message.",43,[[["self"]],["option"]]],[11,"time","","Get the commit time (i.e. committer time) of a commit.",43,[[["self"]],["time"]]],[11,"parents","","Creates a new iterator over the parents of this commit.",43,[[["self"]],["parents"]]],[11,"parent_ids","","Creates a new iterator over the parents of this commit.",43,[[["self"]],["parentids"]]],[11,"author","","Get the author of this commit.",43,[[["self"]],["signature"]]],[11,"committer","","Get the committer of this commit.",43,[[["self"]],["signature"]]],[11,"amend","","Amend this existing commit with all non-`None` values",43,[[["self"],["option",["str"]],["option",["signature"]],["option",["signature"]],["option",["str"]],["option",["str"]],["option",["tree"]]],["result",["oid","error"]]]],[11,"parent_count","","Get the number of parents of this commit.",43,[[["self"]],["usize"]]],[11,"parent","","Get the specified parent of the commit.",43,[[["self"],["usize"]],["result",["commit","error"]]]],[11,"parent_id","","Get the specified parent id of the commit.",43,[[["self"],["usize"]],["result",["oid","error"]]]],[11,"as_object","","Casts this Commit to be usable as an `Object`",43,[[["self"]],["object"]]],[11,"into_object","","Consumes Commit to be returned as an `Object`",43,[[["self"]],["object"]]],[11,"new","","Allocate a new configuration object",44,[[],["result",["config","error"]]]],[11,"open","","Create a new config instance containing a single on-disk…",44,[[["path"]],["result",["config","error"]]]],[11,"open_default","","Open the global, XDG and system configuration files",44,[[],["result",["config","error"]]]],[11,"find_global","","Locate the path to the global configuration file",44,[[],["result",["pathbuf","error"]]]],[11,"find_system","","Locate the path to the system configuration file",44,[[],["result",["pathbuf","error"]]]],[11,"find_xdg","","Locate the path to the global xdg compatible configuration…",44,[[],["result",["pathbuf","error"]]]],[11,"add_file","","Add an on-disk config file instance to an existing config",44,[[["self"],["path"],["configlevel"],["bool"]],["result",["error"]]]],[11,"remove","","Delete a config variable from the config file with the…",44,[[["self"],["str"]],["result",["error"]]]],[11,"remove_multivar","","Remove multivar config variables in the config file with…",44,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"get_bool","","Get the value of a boolean config variable.",44,[[["self"],["str"]],["result",["bool","error"]]]],[11,"get_i32","","Get the value of an integer config variable.",44,[[["self"],["str"]],["result",["i32","error"]]]],[11,"get_i64","","Get the value of an integer config variable.",44,[[["self"],["str"]],["result",["i64","error"]]]],[11,"get_str","","Get the value of a string config variable.",44,[[["self"],["str"]],["result",["str","error"]]]],[11,"get_bytes","","Get the value of a string config variable as a byte slice.",44,[[["self"],["str"]],["result",["error"]]]],[11,"get_string","","Get the value of a string config variable as an owned…",44,[[["self"],["str"]],["result",["string","error"]]]],[11,"get_path","","Get the value of a path config variable as an owned .",44,[[["self"],["str"]],["result",["pathbuf","error"]]]],[11,"get_entry","","Get the ConfigEntry for a config variable.",44,[[["self"],["str"]],["result",["configentry","error"]]]],[11,"entries","","Iterate over all the config variables",44,[[["self"],["option",["str"]]],["result",["configentries","error"]]]],[11,"open_global","","Open the global/XDG configuration file according to git's…",44,[[["self"]],["result",["config","error"]]]],[11,"open_level","","Build a single-level focused config object from a…",44,[[["self"],["configlevel"]],["result",["config","error"]]]],[11,"set_bool","","Set the value of a boolean config variable in the config…",44,[[["self"],["str"],["bool"]],["result",["error"]]]],[11,"set_i32","","Set the value of an integer config variable in the config…",44,[[["self"],["str"],["i32"]],["result",["error"]]]],[11,"set_i64","","Set the value of an integer config variable in the config…",44,[[["self"],["str"],["i64"]],["result",["error"]]]],[11,"set_multivar","","Set the value of an multivar config variable in the config…",44,[[["self"],["str"],["str"],["str"]],["result",["error"]]]],[11,"set_str","","Set the value of a string config variable in the config…",44,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"snapshot","","Create a snapshot of the configuration",44,[[["self"]],["result",["config","error"]]]],[11,"parse_bool","","Parse a string as a bool. Interprets \"true\", \"yes\", \"on\",…",44,[[["s"]],["result",["bool","error"]]]],[11,"parse_i32","","Parse a string as an i32; handles suffixes like k, M, or…",44,[[["s"]],["result",["i32","error"]]]],[11,"parse_i64","","Parse a string as an i64; handles suffixes like k, M, or…",44,[[["s"]],["result",["i64","error"]]]],[11,"name","","Gets the name of this entry.",45,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Gets the name of this entry as a byte slice.",45,N],[11,"value","","Gets the value of this entry.",45,[[["self"]],["option",["str"]]]],[11,"value_bytes","","Gets the value of this entry as a byte slice.",45,N],[11,"level","","Gets the configuration level of this entry.",45,[[["self"]],["configlevel"]]],[11,"include_depth","","Depth of includes where this variable was found",45,[[["self"]],["u32"]]],[11,"default","","Create a \"default\" credential usable for Negotiate…",46,[[],["result",["cred","error"]]]],[11,"ssh_key_from_agent","","Create a new ssh key credential object used for querying…",46,[[["str"]],["result",["cred","error"]]]],[11,"ssh_key","","Create a new passphrase-protected ssh key credential object.",46,[[["str"],["option",["path"]],["path"],["option",["str"]]],["result",["cred","error"]]]],[11,"ssh_key_from_memory","","Create a new ssh key credential object reading the keys…",46,[[["str"],["option",["str"]],["str"],["option",["str"]]],["result",["cred","error"]]]],[11,"userpass_plaintext","","Create a new plain-text username and password credential…",46,[[["str"],["str"]],["result",["cred","error"]]]],[11,"credential_helper","","Attempt to read `credential.helper` according to…",46,[[["config"],["str"],["option",["str"]]],["result",["cred","error"]]]],[11,"username","","Create a credential to specify a username.",46,[[["str"]],["result",["cred","error"]]]],[11,"has_username","","Check whether a credential object contains username…",46,[[["self"]],["bool"]]],[11,"credtype","","Return the type of credentials that this object represents.",46,[[["self"]],["git_credtype_t"]]],[11,"unwrap","","Unwrap access to the underlying raw pointer, canceling the…",46,N],[11,"new","","Create a new credential helper object which will be used…",0,[[["str"]],["credentialhelper"]]],[11,"username","","Set the username that this credential helper will query…",0,[[["self"],["option",["str"]]],["credentialhelper"]]],[11,"config","","Query the specified configuration object to discover…",0,[[["self"],["config"]],["credentialhelper"]]],[11,"execute","","Execute this helper, attempting to discover a…",0,[[["self"]],["option"]]],[11,"format","","Prints this describe result, returning the result as a…",47,[[["self"],["option",["describeformatoptions"]]],["result",["string","error"]]]],[11,"new","","Creates a new blank set of formatting options for a…",48,[[],["describeformatoptions"]]],[11,"abbreviated_size","","Sets the size of the abbreviated commit id to use.",48,[[["self"],["u32"]],["self"]]],[11,"always_use_long_format","","Sets whether or not the long format is used even when a…",48,[[["self"],["bool"]],["self"]]],[11,"dirty_suffix","","If the workdir is dirty and this is set, this string will…",48,[[["self"],["str"]],["self"]]],[11,"new","","Creates a new blank set of formatting options for a…",49,[[],["describeoptions"]]],[11,"max_candidates_tags","","",49,[[["self"],["u32"]],["self"]]],[11,"describe_tags","","Sets the reference lookup strategy",49,[[["self"]],["self"]]],[11,"describe_all","","Sets the reference lookup strategy",49,[[["self"]],["self"]]],[11,"only_follow_first_parent","","Indicates when calculating the distance from the matching…",49,[[["self"],["bool"]],["self"]]],[11,"show_commit_oid_as_fallback","","If no matching tag or reference is found whether a…",49,[[["self"],["bool"]],["self"]]],[11,"pattern","","",49,[[["self"],["str"]],["self"]]],[11,"merge","","Merge one diff into another.",50,[[["self"],["diff"]],["result",["error"]]]],[11,"deltas","","Returns an iterator over the deltas in this diff.",50,[[["self"]],["deltas"]]],[11,"get_delta","","Return the diff delta for an entry in the diff list.",50,[[["self"],["usize"]],["option",["diffdelta"]]]],[11,"is_sorted_icase","","Check if deltas are sorted case sensitively or…",50,[[["self"]],["bool"]]],[11,"print","","Iterate over a diff generating formatted text output.",50,[[["self"],["diffformat"],["f"]],["result",["error"]]]],[11,"foreach","","Loop over all deltas in a diff issuing callbacks.",50,[[["self"],["fnmut"],["option",["fnmut"]],["option",["fnmut"]],["option",["fnmut"]]],["result",["error"]]]],[11,"stats","","Accumulate diff statistics for all patches.",50,[[["self"]],["result",["diffstats","error"]]]],[11,"find_similar","","Transform a diff marking file renames, copies, etc.",50,[[["self"],["option",["difffindoptions"]]],["result",["error"]]]],[11,"nfiles","","Returns the number of files in this delta.",51,[[["self"]],["u16"]]],[11,"status","","Returns the status of this entry",51,[[["self"]],["delta"]]],[11,"old_file","","Return the file which represents the \"from\" side of the…",51,[[["self"]],["difffile"]]],[11,"new_file","","Return the file which represents the \"to\" side of the diff.",51,[[["self"]],["difffile"]]],[11,"id","","Returns the Oid of this item.",52,[[["self"]],["oid"]]],[11,"path_bytes","","Returns the path, in bytes, of the entry relative to the…",52,[[["self"]],["option"]]],[11,"path","","Returns the path of the entry relative to the working…",52,[[["self"]],["option",["path"]]]],[11,"size","","Returns the size of this entry, in bytes",52,[[["self"]],["u64"]]],[11,"new","","Creates a new set of empty diff options.",53,[[],["diffoptions"]]],[11,"reverse","","Flag indicating whether the sides of the diff will be…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_ignored","","Flag indicating whether ignored files are included.",53,[[["self"],["bool"]],["diffoptions"]]],[11,"recurse_ignored_dirs","","Flag indicating whether ignored directories are traversed…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_untracked","","Flag indicating whether untracked files are in the diff",53,[[["self"],["bool"]],["diffoptions"]]],[11,"recurse_untracked_dirs","","Flag indicating whether untracked directories are deeply…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unmodified","","Flag indicating whether unmodified files are in the diff.",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_typechange","","If entrabled, then Typechange delta records are generated.",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_typechange_trees","","Event with `include_typechange`, the tree treturned…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_filemode","","Flag indicating whether file mode changes are ignored.",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_submodules","","Flag indicating whether all submodules should be treated…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_case","","Flag indicating whether case insensitive filenames should…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"disable_pathspec_match","","If pathspecs are specified, this flag means that they…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"skip_binary_check","","Disable updating the `binary` flag in delta records. This…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"enable_fast_untracked_dirs","","When diff finds an untracked directory, to match the…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"update_index","","When diff finds a file in the working directory with stat…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unreadable","","Include unreadable files in the diff",53,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unreadable_as_untracked","","Include unreadable files in the diff",53,[[["self"],["bool"]],["diffoptions"]]],[11,"force_text","","Treat all files as text, disabling binary attributes and…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"force_binary","","Treat all files as binary, disabling text diffs",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace","","Ignore all whitespace",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace_change","","Ignore changes in the amount of whitespace",53,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace_eol","","Ignore whitespace at tend of line",53,[[["self"],["bool"]],["diffoptions"]]],[11,"show_untracked_content","","When generating patch text, include the content of…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"show_unmodified","","When generating output, include the names of unmodified…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"patience","","Use the \"patience diff\" algorithm",53,[[["self"],["bool"]],["diffoptions"]]],[11,"minimal","","Take extra time to find the minimal diff",53,[[["self"],["bool"]],["diffoptions"]]],[11,"show_binary","","Include the necessary deflate/delta information so that…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"indent_heuristic","","Use a heuristic that takes indentation and whitespace into…",53,[[["self"],["bool"]],["diffoptions"]]],[11,"context_lines","","Set the number of unchanged lines that define the boundary…",53,[[["self"],["u32"]],["diffoptions"]]],[11,"interhunk_lines","","Set the maximum number of unchanged lines between hunk…",53,[[["self"],["u32"]],["diffoptions"]]],[11,"id_abbrev","","The default value for this is `core.abbrev` or 7 if unset.",53,[[["self"],["u16"]],["diffoptions"]]],[11,"max_size","","Maximum size (in bytes) above which a blob will be marked…",53,[[["self"],["i64"]],["diffoptions"]]],[11,"old_prefix","","The virtual \"directory\" to prefix old file names with in…",53,[[["self"],["t"]],["diffoptions"]]],[11,"new_prefix","","The virtual \"directory\" to prefix new file names with in…",53,[[["self"],["t"]],["diffoptions"]]],[11,"pathspec","","Add to the array of paths/fnmatch patterns to constrain…",53,[[["self"],["t"]],["diffoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",53,N],[11,"old_lineno","","Line number in old file or `None` for added line",54,[[["self"]],["option",["u32"]]]],[11,"new_lineno","","Line number in new file or `None` for deleted line",54,[[["self"]],["option",["u32"]]]],[11,"num_lines","","Number of newline characters in content",54,[[["self"]],["u32"]]],[11,"content_offset","","Offset in the original file to the content",54,[[["self"]],["i64"]]],[11,"content","","Content of this line as bytes.",54,N],[11,"origin","","Sigil showing the origin of this `DiffLine`.",54,[[["self"]],["char"]]],[11,"old_start","","Starting line number in old_file",55,[[["self"]],["u32"]]],[11,"old_lines","","Number of lines in old_file",55,[[["self"]],["u32"]]],[11,"new_start","","Starting line number in new_file",55,[[["self"]],["u32"]]],[11,"new_lines","","Number of lines in new_file",55,[[["self"]],["u32"]]],[11,"header","","Header text",55,N],[11,"files_changed","","Get the total number of files chaned in a diff.",56,[[["self"]],["usize"]]],[11,"insertions","","Get the total number of insertions in a diff",56,[[["self"]],["usize"]]],[11,"deletions","","Get the total number of deletions in a diff",56,[[["self"]],["usize"]]],[11,"to_buf","","Print diff statistics to a Buf",56,[[["self"],["diffstatsformat"],["usize"]],["result",["buf","error"]]]],[11,"contains_data","","Returns whether there is data in this binary structure or…",57,[[["self"]],["bool"]]],[11,"old_file","","The contents of the old file.",57,[[["self"]],["diffbinaryfile"]]],[11,"new_file","","The contents of the new file.",57,[[["self"]],["diffbinaryfile"]]],[11,"kind","","The type of binary data for this file",58,[[["self"]],["diffbinarykind"]]],[11,"data","","The binary data, deflated",58,N],[11,"inflated_len","","The length of the binary data after inflation",58,[[["self"]],["usize"]]],[11,"new","","Creates a new set of empty diff find options.",59,[[],["difffindoptions"]]],[11,"by_config","","Reset all flags back to their unset state, indicating that…",59,[[["self"]],["difffindoptions"]]],[11,"renames","","Look for renames?",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"renames_from_rewrites","","Consider old side of modified for renames?",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"copies","","Look for copies?",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"copies_from_unmodified","","Consider unmodified as copy sources?",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"rewrites","","Mark significant rewrites for split.",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"break_rewrites","","Actually split large rewrites into delete/add pairs",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"for_untracked","","Find renames/copies for untracked items in working…",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"all","","Turn on all finding features.",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"ignore_leading_whitespace","","Measure similarity ignoring leading whitespace (default)",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"ignore_whitespace","","Measure similarity ignoring all whitespace",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"dont_ignore_whitespace","","Measure similarity including all data",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"exact_match_only","","Measure similarity only by comparing SHAs (fast and cheap)",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"break_rewrites_for_renames_only","","Do not break rewrites unless they contribute to a rename.",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"remove_unmodified","","Remove any unmodified deltas after find_similar is done.",59,[[["self"],["bool"]],["difffindoptions"]]],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",59,[[["self"],["u16"]],["difffindoptions"]]],[11,"rename_from_rewrite_threshold","","Similarity of modified to be glegible rename source…",59,[[["self"],["u16"]],["difffindoptions"]]],[11,"copy_threshold","","Similarity to consider a file copy (default 50)",59,[[["self"],["u16"]],["difffindoptions"]]],[11,"break_rewrite_threshold","","Similarity to split modify into delete/add pair (default 60)",59,[[["self"],["u16"]],["difffindoptions"]]],[11,"rename_limit","","Maximum similarity sources to examine for a file (somewhat…",59,[[["self"],["usize"]],["difffindoptions"]]],[11,"last_error","","Returns the last error that happened with the code…",60,[[["c_int"]],["option",["error"]]]],[11,"from_str","","Creates a new error from the given string as the error.",60,[[["str"]],["error"]]],[11,"code","","Return the error code associated with this error.",60,[[["self"]],["errorcode"]]],[11,"class","","Return the error class associated with this error.",60,[[["self"]],["errorclass"]]],[11,"raw_code","","Return the raw error code associated with this error.",60,[[["self"]],["git_error_code"]]],[11,"raw_class","","Return the raw error class associated with this error.",60,[[["self"]],["git_error_t"]]],[11,"message","","Return the message associated with this error",60,[[["self"]],["str"]]],[11,"new","","Creates a new in-memory index.",61,[[],["result",["index","error"]]]],[11,"open","","Create a new bare Git index object as a memory…",61,[[["path"]],["result",["index","error"]]]],[11,"add","","Add or update an index entry from an in-memory struct",61,[[["self"],["indexentry"]],["result",["error"]]]],[11,"add_frombuffer","","Add or update an index entry from a buffer in memory",61,N],[11,"add_path","","Add or update an index entry from a file on disk",61,[[["self"],["path"]],["result",["error"]]]],[11,"add_all","","Add or update index entries matching files in the working…",61,[[["self"],["i"],["indexaddoption"],["option",["indexmatchedpath"]]],["result",["error"]]]],[11,"clear","","Clear the contents (all the entries) of an index object.",61,[[["self"]],["result",["error"]]]],[11,"len","","Get the count of entries currently in the index",61,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` is there is no entry in the index",61,[[["self"]],["bool"]]],[11,"get","","Get one of the entries in the index by its position.",61,[[["self"],["usize"]],["option",["indexentry"]]]],[11,"iter","","Get an iterator over the entries in this index.",61,[[["self"]],["indexentries"]]],[11,"conflicts","","Get an iterator over the index entries that have conflicts",61,[[["self"]],["result",["indexconflicts","error"]]]],[11,"get_path","","Get one of the entries in the index by its path.",61,[[["self"],["path"],["i32"]],["option",["indexentry"]]]],[11,"has_conflicts","","Does this index have conflicts?",61,[[["self"]],["bool"]]],[11,"path","","Get the full path to the index file on disk.",61,[[["self"]],["option",["path"]]]],[11,"read","","Update the contents of an existing index object in memory…",61,[[["self"],["bool"]],["result",["error"]]]],[11,"read_tree","","Read a tree into the index file with stats",61,[[["self"],["tree"]],["result",["error"]]]],[11,"remove","","Remove an entry from the index",61,[[["self"],["path"],["i32"]],["result",["error"]]]],[11,"remove_path","","Remove an index entry corresponding to a file on disk.",61,[[["self"],["path"]],["result",["error"]]]],[11,"remove_dir","","Remove all entries from the index under a given directory.",61,[[["self"],["path"],["i32"]],["result",["error"]]]],[11,"remove_all","","Remove all matching index entries.",61,[[["self"],["i"],["option",["indexmatchedpath"]]],["result",["error"]]]],[11,"update_all","","Update all index entries to match the working directory",61,[[["self"],["i"],["option",["indexmatchedpath"]]],["result",["error"]]]],[11,"write","","Write an existing index object from memory back to disk…",61,[[["self"]],["result",["error"]]]],[11,"write_tree","","Write the index as a tree.",61,[[["self"]],["result",["oid","error"]]]],[11,"write_tree_to","","Write the index as a tree to the given repository",61,[[["self"],["repository"]],["result",["oid","error"]]]],[11,"id","","Gets the commit ID that the given git_annotated_commit…",62,[[["self"]],["oid"]]],[11,"new","","Creates a default set of merge options.",63,[[],["mergeoptions"]]],[11,"find_renames","","Detect file renames",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"fail_on_conflict","","If a conflict occurs, exit immediately instead of…",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"skip_reuc","","Do not write the REUC extension on the generated index",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"no_recursive","","If the commits being merged have multiple merge bases, do…",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",63,[[["self"],["u32"]],["mergeoptions"]]],[11,"target_limit","","Maximum similarity sources to examine for renames (default…",63,[[["self"],["u32"]],["mergeoptions"]]],[11,"recursion_limit","","Maximum number of times to merge common ancestors to build…",63,[[["self"],["u32"]],["mergeoptions"]]],[11,"file_favor","","Specify a side to favor for resolving conflicts",63,[[["self"],["filefavor"]],["mergeoptions"]]],[11,"standard_style","","Create standard conflicted merge files",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"diff3_style","","Create diff3-style file",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"simplify_alnum","","Condense non-alphanumeric regions for simplified diff file",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace","","Ignore all whitespace",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace_change","","Ignore changes in amount of whitespace",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace_eol","","Ignore whitespace at end of line",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"patience","","Use the \"patience diff\" algorithm",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"minimal","","Take extra time to find minimal diff",63,[[["self"],["bool"]],["mergeoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",63,N],[11,"author","","Get the note author",64,[[["self"]],["signature"]]],[11,"committer","","Get the note committer",64,[[["self"]],["signature"]]],[11,"message_bytes","","Get the note message, in bytes.",64,N],[11,"message","","Get the note message as a string, returning `None` if it…",64,[[["self"]],["option",["str"]]]],[11,"id","","Get the note object's id",64,[[["self"]],["oid"]]],[11,"id","","Get the id (SHA1) of a repository object",65,[[["self"]],["oid"]]],[11,"kind","","Get the object type of an object.",65,[[["self"]],["option",["objecttype"]]]],[11,"peel","","Recursively peel an object until an object of the…",65,[[["self"],["objecttype"]],["result",["object","error"]]]],[11,"peel_to_blob","","Recursively peel an object until a blob is found",65,[[["self"]],["result",["blob","error"]]]],[11,"peel_to_commit","","Recursively peel an object until a commit is found",65,[[["self"]],["result",["commit","error"]]]],[11,"peel_to_tag","","Recursively peel an object until a tag is found",65,[[["self"]],["result",["tag","error"]]]],[11,"peel_to_tree","","Recursively peel an object until a tree is found",65,[[["self"]],["result",["tree","error"]]]],[11,"short_id","","Get a short abbreviated OID string for the object",65,[[["self"]],["result",["buf","error"]]]],[11,"as_commit","","Attempt to view this object as a commit.",65,[[["self"]],["option",["commit"]]]],[11,"into_commit","","Attempt to consume this object and return a commit.",65,[[["self"]],["result",["commit","object"]]]],[11,"as_tag","","Attempt to view this object as a tag.",65,[[["self"]],["option",["tag"]]]],[11,"into_tag","","Attempt to consume this object and return a tag.",65,[[["self"]],["result",["tag","object"]]]],[11,"as_tree","","Attempt to view this object as a tree.",65,[[["self"]],["option",["tree"]]]],[11,"into_tree","","Attempt to consume this object and return a tree.",65,[[["self"]],["result",["tree","object"]]]],[11,"as_blob","","Attempt to view this object as a blob.",65,[[["self"]],["option",["blob"]]]],[11,"into_blob","","Attempt to consume this object and return a blob.",65,[[["self"]],["result",["blob","object"]]]],[11,"describe","","Describes a commit",65,[[["self"],["describeoptions"]],["result",["describe","error"]]]],[11,"new","","Creates an object database without any backends.",66,[[],["result",["odb","error"]]]],[11,"reader","","Create object database reading stream.",66,[[["self"],["oid"]],["result",["error"]]]],[11,"writer","","Create object database writing stream.",66,[[["self"],["usize"],["objecttype"]],["result",["odbwriter","error"]]]],[11,"foreach","","Iterate over all objects in the object database.s",66,[[["self"],["c"]],["result",["error"]]]],[11,"read","","Read an object from the database.",66,[[["self"],["oid"]],["result",["odbobject","error"]]]],[11,"read_header","","Reads the header of an object from the database without…",66,[[["self"],["oid"]],["result",["error"]]]],[11,"write","","Write an object to the database.",66,N],[11,"exists","","Checks if the object database has an object.",66,[[["self"],["oid"]],["bool"]]],[11,"exists_prefix","","Potentially finds an object that starts with the given…",66,[[["self"],["oid"],["usize"]],["result",["oid","error"]]]],[11,"refresh","","Refresh the object database. This should never be needed,…",66,[[["self"]],["result",["error"]]]],[11,"add_disk_alternate","","Adds an alternate disk backend to the object database.",66,[[["self"],["str"]],["result",["error"]]]],[11,"kind","","Get the object type.",67,[[["self"]],["objecttype"]]],[11,"len","","Get the object size.",67,[[["self"]],["usize"]]],[11,"data","","Get the object data.",67,N],[11,"id","","Get the object id.",67,[[["self"]],["oid"]]],[11,"finalize","","Finish writing to an ODB stream",68,[[["self"]],["result",["oid","error"]]]],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",69,[[["str"]],["result",["oid","error"]]]],[11,"from_bytes","","Parse a raw object id into an Oid structure.",69,N],[11,"zero","","Creates an all zero Oid structure.",69,[[],["oid"]]],[11,"hash_object","","Hashes the provided data as an object of the provided…",69,N],[11,"hash_file","","Hashes the content of the provided file as an object of…",69,[[["objecttype"],["p"]],["result",["oid","error"]]]],[11,"as_bytes","","View this OID as a byte-slice 20 bytes in length.",69,N],[11,"is_zero","","Test if this OID is all zeros.",69,[[["self"]],["bool"]]],[11,"insert_object","","Insert a single object. For an optimal pack it's mandatory…",70,[[["self"],["oid"],["option",["str"]]],["result",["error"]]]],[11,"insert_tree","","Insert a root tree object. This will add the tree as well…",70,[[["self"],["oid"]],["result",["error"]]]],[11,"insert_commit","","Insert a commit object. This will add a commit as well as…",70,[[["self"],["oid"]],["result",["error"]]]],[11,"insert_walk","","Insert objects as given by the walk. Those commits and all…",70,[[["self"],["revwalk"]],["result",["error"]]]],[11,"insert_recursive","","Recursively insert an object and its referenced objects.…",70,[[["self"],["oid"],["option",["str"]]],["result",["error"]]]],[11,"write_buf","","Write the contents of the packfile to an in-memory buffer.…",70,[[["self"],["buf"]],["result",["error"]]]],[11,"foreach","","Create the new pack and pass each object to the callback.",70,[[["self"],["f"]],["result",["error"]]]],[11,"set_progress_callback","","`progress` will be called with progress information during…",70,[[["self"],["f"]],["result",["error"]]]],[11,"unset_progress_callback","","Remove the current progress callback. See…",70,[[["self"]],["result",["error"]]]],[11,"object_count","","Get the total number of objects the packbuilder will write…",70,[[["self"]],["usize"]]],[11,"written","","Get the number of objects the packbuilder has already…",70,[[["self"]],["usize"]]],[11,"hash","","Get the packfile's hash. A packfile's name is derived from…",70,[[["self"]],["option",["oid"]]]],[11,"new","","Creates a new pathspec from a list of specs to match…",71,[[["i"]],["result",["pathspec","error"]]]],[11,"match_diff","","Match a pathspec against files in a diff.",71,[[["self"],["diff"],["pathspecflags"]],["result",["pathspecmatchlist","error"]]]],[11,"match_tree","","Match a pathspec against files in a tree.",71,[[["self"],["tree"],["pathspecflags"]],["result",["pathspecmatchlist","error"]]]],[11,"match_index","","This matches the pathspec against the files in the…",71,[[["self"],["index"],["pathspecflags"]],["result",["pathspecmatchlist","error"]]]],[11,"match_workdir","","Match a pathspec against the working directory of a…",71,[[["self"],["repository"],["pathspecflags"]],["result",["pathspecmatchlist","error"]]]],[11,"matches_path","","Try to match a path against a pathspec",71,[[["self"],["path"],["pathspecflags"]],["bool"]]],[11,"entries","","Returns an iterator over the matching filenames in this…",72,[[["self"]],["pathspecentries"]]],[11,"entry","","Get a matching filename by position.",72,[[["self"],["usize"]],["option"]]],[11,"diff_entries","","Returns an iterator over the matching diff entries in this…",72,[[["self"]],["pathspecdiffentries"]]],[11,"diff_entry","","Get a matching diff delta by position.",72,[[["self"],["usize"]],["option",["diffdelta"]]]],[11,"failed_entries","","Returns an iterator over the non-matching entries in this…",72,[[["self"]],["pathspecfailedentries"]]],[11,"failed_entry","","Get an original pathspec string that had no matches.",72,[[["self"],["usize"]],["option"]]],[11,"from_diff","","Return a Patch for one file in a Diff.",73,[[["diff"],["usize"]],["result",["option","error"]]]],[11,"from_blobs","","Generate a Patch by diffing two blobs.",73,[[["blob"],["option",["path"]],["blob"],["option",["path"]],["option",["diffoptions"]]],["result",["patch","error"]]]],[11,"from_blob_and_buffer","","Generate a Patch by diffing a blob and a buffer.",73,N],[11,"from_buffers","","Generate a Patch by diffing two buffers.",73,N],[11,"delta","","Get the DiffDelta associated with the Patch.",73,[[["self"]],["diffdelta"]]],[11,"num_hunks","","Get the number of hunks in the Patch.",73,[[["self"]],["usize"]]],[11,"line_stats","","Get the number of lines of context, additions, and…",73,[[["self"]],["result",["error"]]]],[11,"hunk","","Get a DiffHunk and its total line count from the Patch.",73,[[["self"],["usize"]],["result",["error"]]]],[11,"num_lines_in_hunk","","Get the number of lines in a hunk.",73,[[["self"],["usize"]],["result",["usize","error"]]]],[11,"line_in_hunk","","Get a DiffLine from a hunk of the Patch.",73,[[["self"],["usize"],["usize"]],["result",["diffline","error"]]]],[11,"size","","Get the size of a Patch's diff data in bytes.",73,[[["self"],["bool"],["bool"],["bool"]],["usize"]]],[11,"print","","Print the Patch to text via a callback.",73,[[["self"],["fnmut"]],["result",["error"]]]],[11,"to_buf","","Get the Patch text as a Buf.",73,[[["self"]],["result",["buf","error"]]]],[11,"new","","Creates a new set of proxy options ready to be configured.",74,[[],["proxyoptions"]]],[11,"auto","","Try to auto-detect the proxy from the git configuration.",74,[[["self"]],["self"]]],[11,"url","","Specify the exact URL of the proxy to use.",74,[[["self"],["str"]],["self"]]],[11,"new","","Creates a new default set of rebase options.",75,[[],["rebaseoptions"]]],[11,"quiet","","Used by `Repository::rebase`, this will instruct other…",75,[[["self"],["bool"]],["rebaseoptions"]]],[11,"inmemory","","Used by `Repository::rebase`, this will begin an in-memory…",75,[[["self"],["bool"]],["rebaseoptions"]]],[11,"rewrite_notes_ref","","Used by `finish()`, this is the name of the notes…",75,[[["self"],["str"]],["rebaseoptions"]]],[11,"merge_options","","Options to control how trees are merged during `next()`.",75,[[["self"],["mergeoptions"]],["rebaseoptions"]]],[11,"checkout_options","","Options to control how files are written during…",75,[[["self"],["checkoutbuilder"]],["rebaseoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",75,N],[11,"len","","Gets the count of rebase operations that are to be applied.",76,[[["self"]],["usize"]]],[11,"nth","","Gets the rebase operation specified by the given index.",76,[[["self"],["usize"]],["option",["rebaseoperation"]]]],[11,"operation_current","","Gets the index of the rebase operation that is currently…",76,[[["self"]],["option",["usize"]]]],[11,"inmemory_index","","Gets the index produced by the last operation, which is…",76,[[["self"]],["result",["index","error"]]]],[11,"commit","","Commits the current patch. You must have resolved any…",76,[[["self"],["signature"],["signature"],["str"]],["result",["oid","error"]]]],[11,"abort","","Aborts a rebase that is currently in progress, resetting…",76,[[["self"]],["result",["error"]]]],[11,"finish","","Finishes a rebase that is currently in progress once all…",76,[[["self"],["signature"]],["result",["error"]]]],[11,"from_raw","","Convert from the int into an enum. Returns None if invalid.",5,[[["git_rebase_operation_t"]],["option",["rebaseoperationtype"]]]],[11,"kind","","The type of rebase operation",77,[[["self"]],["option",["rebaseoperationtype"]]]],[11,"id","","The commit ID being cherry-picked. This will be populated…",77,[[["self"]],["oid"]]],[11,"exec","","The executable the user has requested be run. This will…",77,[[["self"]],["option",["str"]]]],[11,"is_valid_name","","Ensure the reference name is well-formed.",78,[[["str"]],["bool"]]],[11,"raw","","Get access to the underlying raw pointer.",78,N],[11,"delete","","Delete an existing reference.",78,[[["self"]],["result",["error"]]]],[11,"is_branch","","Check if a reference is a local branch.",78,[[["self"]],["bool"]]],[11,"is_note","","Check if a reference is a note.",78,[[["self"]],["bool"]]],[11,"is_remote","","Check if a reference is a remote tracking branch",78,[[["self"]],["bool"]]],[11,"is_tag","","Check if a reference is a tag",78,[[["self"]],["bool"]]],[11,"kind","","Get the reference type of a reference.",78,[[["self"]],["option",["referencetype"]]]],[11,"name","","Get the full name of a reference.",78,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Get the full name of a reference.",78,N],[11,"shorthand","","Get the full shorthand of a reference.",78,[[["self"]],["option",["str"]]]],[11,"shorthand_bytes","","Get the full shorthand of a reference.",78,N],[11,"target","","Get the OID pointed to by a direct reference.",78,[[["self"]],["option",["oid"]]]],[11,"target_peel","","Return the peeled OID target of this reference.",78,[[["self"]],["option",["oid"]]]],[11,"symbolic_target","","Get full name to the reference pointed to by a symbolic…",78,[[["self"]],["option",["str"]]]],[11,"symbolic_target_bytes","","Get full name to the reference pointed to by a symbolic…",78,[[["self"]],["option"]]],[11,"resolve","","Resolve a symbolic reference to a direct reference.",78,[[["self"]],["result",["reference","error"]]]],[11,"peel","","Peel a reference to an object",78,[[["self"],["objecttype"]],["result",["object","error"]]]],[11,"peel_to_blob","","Peel a reference to a blob",78,[[["self"]],["result",["blob","error"]]]],[11,"peel_to_commit","","Peel a reference to a commit",78,[[["self"]],["result",["commit","error"]]]],[11,"peel_to_tree","","Peel a reference to a tree",78,[[["self"]],["result",["tree","error"]]]],[11,"peel_to_tag","","Peel a reference to a tag",78,[[["self"]],["result",["tag","error"]]]],[11,"rename","","Rename an existing reference.",78,[[["self"],["str"],["bool"],["str"]],["result",["reference","error"]]]],[11,"set_target","","Conditionally create a new reference with the same name as…",78,[[["self"],["oid"],["str"]],["result",["reference","error"]]]],[11,"names","","Consumes a `References` iterator to create an iterator…",79,[[["self"]],["referencenames"]]],[11,"append","","Add a new entry to the in-memory reflog.",80,[[["self"],["oid"],["signature"],["option",["str"]]],["result",["error"]]]],[11,"remove","","Remove an entry from the reflog by its index",80,[[["self"],["usize"],["bool"]],["result",["error"]]]],[11,"get","","Lookup an entry by its index",80,[[["self"],["usize"]],["option",["reflogentry"]]]],[11,"len","","Get the number of log entries in a reflog",80,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` is there is no log entry in a reflog",80,[[["self"]],["bool"]]],[11,"iter","","Get an iterator to all entries inside of this reflog",80,[[["self"]],["reflogiter"]]],[11,"write","","Write an existing in-memory reflog object back to disk…",80,[[["self"]],["result",["error"]]]],[11,"committer","","Get the committer of this entry",81,[[["self"]],["signature"]]],[11,"id_new","","Get the new oid",81,[[["self"]],["oid"]]],[11,"id_old","","Get the old oid",81,[[["self"]],["oid"]]],[11,"message","","Get the log message, returning `None` on invalid UTF-8.",81,[[["self"]],["option",["str"]]]],[11,"message_bytes","","Get the log message as a byte array.",81,[[["self"]],["option"]]],[11,"direction","","Get the refspec's direction.",82,[[["self"]],["direction"]]],[11,"dst","","Get the destination specifier.",82,[[["self"]],["option",["str"]]]],[11,"dst_bytes","","Get the destination specifier, in bytes.",82,N],[11,"dst_matches","","Check if a refspec's destination descriptor matches a…",82,[[["self"],["str"]],["bool"]]],[11,"src","","Get the source specifier.",82,[[["self"]],["option",["str"]]]],[11,"src_bytes","","Get the source specifier, in bytes.",82,N],[11,"src_matches","","Check if a refspec's source descriptor matches a reference",82,[[["self"],["str"]],["bool"]]],[11,"is_force","","Get the force update setting.",82,[[["self"]],["bool"]]],[11,"str","","Get the refspec's string.",82,[[["self"]],["option",["str"]]]],[11,"bytes","","Get the refspec's string as a byte array",82,N],[11,"is_valid_name","","Ensure the remote name is well-formed.",83,[[["str"]],["bool"]]],[11,"name","","Get the remote's name.",83,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Get the remote's name, in bytes.",83,[[["self"]],["option"]]],[11,"url","","Get the remote's url.",83,[[["self"]],["option",["str"]]]],[11,"url_bytes","","Get the remote's url as a byte array.",83,N],[11,"pushurl","","Get the remote's pushurl.",83,[[["self"]],["option",["str"]]]],[11,"pushurl_bytes","","Get the remote's pushurl as a byte array.",83,[[["self"]],["option"]]],[11,"connect","","Open a connection to a remote.",83,[[["self"],["direction"]],["result",["error"]]]],[11,"connect_auth","","Open a connection to a remote with callbacks and proxy…",83,[[["self"],["direction"],["option",["remotecallbacks"]],["option",["proxyoptions"]]],["result",["remoteconnection","error"]]]],[11,"connected","","Check whether the remote is connected",83,[[["self"]],["bool"]]],[11,"disconnect","","Disconnect from the remote",83,[[["self"]]]],[11,"download","","Download and index the packfile",83,N],[11,"refspecs","","Get the number of refspecs for a remote",83,[[["self"]],["refspecs"]]],[11,"get_refspec","","Get the `nth` refspec from this remote.",83,[[["self"],["usize"]],["option",["refspec"]]]],[11,"fetch","","Download new data and update tips",83,N],[11,"update_tips","","Update the tips to the new state",83,[[["self"],["option",["remotecallbacks"]],["bool"],["autotagoption"],["option",["str"]]],["result",["error"]]]],[11,"push","","Perform a push",83,N],[11,"stats","","Get the statistics structure that is filled in by the…",83,[[["self"]],["progress"]]],[11,"list","","Get the remote repository's reference advertisement list.",83,[[["self"]],["result",["error"]]]],[11,"fetch_refspecs","","Get the remote's list of fetch refspecs",83,[[["self"]],["result",["stringarray","error"]]]],[11,"push_refspecs","","Get the remote's list of push refspecs",83,[[["self"]],["result",["stringarray","error"]]]],[11,"is_local","","Flag if this is available locally.",84,[[["self"]],["bool"]]],[11,"oid","","",84,[[["self"]],["oid"]]],[11,"loid","","",84,[[["self"]],["oid"]]],[11,"name","","",84,[[["self"]],["str"]]],[11,"symref_target","","",84,[[["self"]],["option",["str"]]]],[11,"new","","Creates a new blank set of fetch options",85,[[],["fetchoptions"]]],[11,"remote_callbacks","","Set the callbacks to use for the fetch operation.",85,[[["self"],["remotecallbacks"]],["self"]]],[11,"proxy_options","","Set the proxy options to use for the fetch operation.",85,[[["self"],["proxyoptions"]],["self"]]],[11,"prune","","Set whether to perform a prune after the fetch.",85,[[["self"],["fetchprune"]],["self"]]],[11,"update_fetchhead","","Set whether to write the results to FETCH_HEAD.",85,[[["self"],["bool"]],["self"]]],[11,"download_tags","","Set how to behave regarding tags on the remote, such as…",85,[[["self"],["autotagoption"]],["self"]]],[11,"new","","Creates a new blank set of push options",86,[[],["pushoptions"]]],[11,"remote_callbacks","","Set the callbacks to use for the fetch operation.",86,[[["self"],["remotecallbacks"]],["self"]]],[11,"proxy_options","","Set the proxy options to use for the fetch operation.",86,[[["self"],["proxyoptions"]],["self"]]],[11,"packbuilder_parallelism","","If the transport being used to push to the remote requires…",86,[[["self"],["u32"]],["self"]]],[11,"connected","","Check whether the remote is (still) connected",87,[[["self"]],["bool"]]],[11,"list","","Get the remote repository's reference advertisement list.",87,[[["self"]],["result",["error"]]]],[11,"new","","Creates a new set of empty callbacks",88,[[],["remotecallbacks"]]],[11,"credentials","","The callback through which to fetch credentials if required.",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"transfer_progress","","The callback through which progress is monitored.",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"sideband_progress","","Textual progress from the remote.",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"update_tips","","Each time a reference is updated locally, the callback…",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"certificate_check","","If certificate verification fails, then this callback will…",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"push_update_reference","","Set a callback to get invoked for each updated reference…",88,[[["self"],["f"]],["remotecallbacks"]]],[11,"total_objects","","Number of objects in the packfile being downloaded",89,[[["self"]],["usize"]]],[11,"indexed_objects","","Received objects that have been hashed",89,[[["self"]],["usize"]]],[11,"received_objects","","Objects which have been downloaded",89,[[["self"]],["usize"]]],[11,"local_objects","","Locally-available objects that have been injected in order…",89,[[["self"]],["usize"]]],[11,"total_deltas","","Number of deltas in the packfile being downloaded",89,[[["self"]],["usize"]]],[11,"indexed_deltas","","Received deltas that have been hashed.",89,[[["self"]],["usize"]]],[11,"received_bytes","","Size of the packfile received up to now",89,[[["self"]],["usize"]]],[11,"to_owned","","Convert this to an owned version of `Progress`.",89,[[["self"]],["progress"]]],[11,"open","","Attempt to open an already-existing repository at `path`.",90,[[["p"]],["result",["repository","error"]]]],[11,"open_bare","","Attempt to open an already-existing bare repository at…",90,[[["p"]],["result",["repository","error"]]]],[11,"open_from_env","","Find and open an existing repository, respecting git…",90,[[],["result",["repository","error"]]]],[11,"open_ext","","Find and open an existing repository, with additional…",90,[[["p"],["repositoryopenflags"],["i"]],["result",["repository","error"]]]],[11,"discover","","Attempt to open an already-existing repository at or above…",90,[[["p"]],["result",["repository","error"]]]],[11,"init","","Creates a new repository in the specified folder.",90,[[["p"]],["result",["repository","error"]]]],[11,"init_bare","","Creates a new `--bare` repository in the specified folder.",90,[[["p"]],["result",["repository","error"]]]],[11,"init_opts","","Creates a new repository in the specified folder with the…",90,[[["p"],["repositoryinitoptions"]],["result",["repository","error"]]]],[11,"clone","","Clone a remote repository.",90,[[["str"],["p"]],["result",["repository","error"]]]],[11,"clone_recurse","","Clone a remote repository, initialize and update its…",90,[[["str"],["p"]],["result",["repository","error"]]]],[11,"from_odb","","Attempt to wrap an object database as a repository.",90,[[["odb"]],["result",["repository","error"]]]],[11,"revparse","","Execute a rev-parse operation against the `spec` listed.",90,[[["self"],["str"]],["result",["revspec","error"]]]],[11,"revparse_single","","Find a single object, as specified by a revision string.",90,[[["self"],["str"]],["result",["object","error"]]]],[11,"revparse_ext","","Find a single object and intermediate reference by a…",90,[[["self"],["str"]],["result",["error"]]]],[11,"is_bare","","Tests whether this repository is a bare repository or not.",90,[[["self"]],["bool"]]],[11,"is_shallow","","Tests whether this repository is a shallow clone.",90,[[["self"]],["bool"]]],[11,"is_worktree","","Tests whether this repository is a worktree.",90,[[["self"]],["bool"]]],[11,"is_empty","","Tests whether this repository is empty.",90,[[["self"]],["result",["bool","error"]]]],[11,"path","","Returns the path to the `.git` folder for normal…",90,[[["self"]],["path"]]],[11,"state","","Returns the current state of this repository",90,[[["self"]],["repositorystate"]]],[11,"workdir","","Get the path of the working directory for this repository.",90,[[["self"]],["option",["path"]]]],[11,"set_workdir","","Set the path to the working directory for this repository.",90,[[["self"],["path"],["bool"]],["result",["error"]]]],[11,"namespace","","Get the currently active namespace for this repository.",90,[[["self"]],["option",["str"]]]],[11,"namespace_bytes","","Get the currently active namespace for this repository as…",90,[[["self"]],["option"]]],[11,"set_namespace","","Set the active namespace for this repository.",90,[[["self"],["str"]],["result",["error"]]]],[11,"set_namespace_bytes","","Set the active namespace for this repository as a byte…",90,N],[11,"remove_namespace","","Remove the active namespace for this repository.",90,[[["self"]],["result",["error"]]]],[11,"message","","Retrieves the Git merge message. Remember to remove the…",90,[[["self"]],["result",["string","error"]]]],[11,"remove_message","","Remove the Git merge message.",90,[[["self"]],["result",["error"]]]],[11,"remotes","","List all remotes for a given repository",90,[[["self"]],["result",["stringarray","error"]]]],[11,"find_remote","","Get the information for a particular remote",90,[[["self"],["str"]],["result",["remote","error"]]]],[11,"remote","","Add a remote with the default fetch refspec to the…",90,[[["self"],["str"],["str"]],["result",["remote","error"]]]],[11,"remote_anonymous","","Create an anonymous remote",90,[[["self"],["str"]],["result",["remote","error"]]]],[11,"remote_rename","","Give a remote a new name",90,[[["self"],["str"],["str"]],["result",["stringarray","error"]]]],[11,"remote_delete","","Delete an existing persisted remote.",90,[[["self"],["str"]],["result",["error"]]]],[11,"remote_add_fetch","","Add a fetch refspec to the remote's configuration",90,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"remote_add_push","","Add a push refspec to the remote's configuration.",90,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"remote_set_url","","Set the remote's url in the configuration",90,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"remote_set_pushurl","","Set the remote's url for pushing in the configuration.",90,[[["self"],["str"],["option",["str"]]],["result",["error"]]]],[11,"reset","","Sets the current head to the specified object and…",90,[[["self"],["object"],["resettype"],["option",["checkoutbuilder"]]],["result",["error"]]]],[11,"reset_default","","Updates some entries in the index from the target commit…",90,[[["self"],["option",["object"]],["i"]],["result",["error"]]]],[11,"head","","Retrieve and resolve the reference pointed at by HEAD.",90,[[["self"]],["result",["reference","error"]]]],[11,"set_head","","Make the repository HEAD point to the specified reference.",90,[[["self"],["str"]],["result",["error"]]]],[11,"head_detached","","Determines whether the repository HEAD is detached.",90,[[["self"]],["result",["bool","error"]]]],[11,"set_head_detached","","Make the repository HEAD directly point to the commit.",90,[[["self"],["oid"]],["result",["error"]]]],[11,"references","","Create an iterator for the repo's references",90,[[["self"]],["result",["references","error"]]]],[11,"references_glob","","Create an iterator for the repo's references that match…",90,[[["self"],["str"]],["result",["references","error"]]]],[11,"submodules","","Load all submodules for this repository and return them.",90,[[["self"]],["result",["vec","error"]]]],[11,"statuses","","Gather file status information and populate the returned…",90,[[["self"],["option",["statusoptions"]]],["result",["statuses","error"]]]],[11,"status_should_ignore","","Test if the ignore rules apply to a given file.",90,[[["self"],["path"]],["result",["bool","error"]]]],[11,"status_file","","Get file status for a single file.",90,[[["self"],["path"]],["result",["status","error"]]]],[11,"branches","","Create an iterator which loops over the requested branches.",90,[[["self"],["option",["branchtype"]]],["result",["branches","error"]]]],[11,"index","","Get the Index file for this repository.",90,[[["self"]],["result",["index","error"]]]],[11,"set_index","","Set the Index file for this repository.",90,[[["self"],["index"]]]],[11,"config","","Get the configuration file for this repository.",90,[[["self"]],["result",["config","error"]]]],[11,"blob","","Write an in-memory buffer to the ODB as a blob.",90,N],[11,"blob_path","","Read a file from the filesystem and write its content to…",90,[[["self"],["path"]],["result",["oid","error"]]]],[11,"blob_writer","","Create a stream to write blob",90,[[["self"],["option",["path"]]],["result",["blobwriter","error"]]]],[11,"find_blob","","Lookup a reference to one of the objects in a repository.",90,[[["self"],["oid"]],["result",["blob","error"]]]],[11,"odb","","Get the object database for this repository",90,[[["self"]],["result",["odb","error"]]]],[11,"branch","","Create a new branch pointing at a target commit",90,[[["self"],["str"],["commit"],["bool"]],["result",["branch","error"]]]],[11,"find_branch","","Lookup a branch by its name in a repository.",90,[[["self"],["str"],["branchtype"]],["result",["branch","error"]]]],[11,"commit","","Create new commit in the repository",90,N],[11,"commit_signed","","Create a commit object from the given buffer and signature",90,[[["self"],["str"],["str"],["option",["str"]]],["result",["oid","error"]]]],[11,"extract_signature","","Extract the signature from a commit",90,[[["self"],["oid"],["option",["str"]]],["result",["error"]]]],[11,"find_commit","","Lookup a reference to one of the commits in a repository.",90,[[["self"],["oid"]],["result",["commit","error"]]]],[11,"find_annotated_commit","","Creates a `AnnotatedCommit` from the given commit id.",90,[[["self"],["oid"]],["result",["annotatedcommit","error"]]]],[11,"find_object","","Lookup a reference to one of the objects in a repository.",90,[[["self"],["oid"],["option",["objecttype"]]],["result",["object","error"]]]],[11,"reference","","Create a new direct reference.",90,[[["self"],["str"],["oid"],["bool"],["str"]],["result",["reference","error"]]]],[11,"reference_matching","","Conditionally create new direct reference.",90,[[["self"],["str"],["oid"],["bool"],["oid"],["str"]],["result",["reference","error"]]]],[11,"reference_symbolic","","Create a new symbolic reference.",90,[[["self"],["str"],["str"],["bool"],["str"]],["result",["reference","error"]]]],[11,"reference_symbolic_matching","","Create a new symbolic reference.",90,[[["self"],["str"],["str"],["bool"],["str"],["str"]],["result",["reference","error"]]]],[11,"find_reference","","Lookup a reference to one of the objects in a repository.",90,[[["self"],["str"]],["result",["reference","error"]]]],[11,"refname_to_id","","Lookup a reference by name and resolve immediately to OID.",90,[[["self"],["str"]],["result",["oid","error"]]]],[11,"reference_to_annotated_commit","","Creates a git_annotated_commit from the given reference.",90,[[["self"],["reference"]],["result",["annotatedcommit","error"]]]],[11,"signature","","Create a new action signature with default user and now…",90,[[["self"]],["result",["signature","error"]]]],[11,"submodule","","Set up a new git submodule for checkout.",90,[[["self"],["str"],["path"],["bool"]],["result",["submodule","error"]]]],[11,"find_submodule","","Lookup submodule information by name or path.",90,[[["self"],["str"]],["result",["submodule","error"]]]],[11,"submodule_status","","Get the status for a submodule.",90,[[["self"],["str"],["submoduleignore"]],["result",["submodulestatus","error"]]]],[11,"find_tree","","Lookup a reference to one of the objects in a repository.",90,[[["self"],["oid"]],["result",["tree","error"]]]],[11,"treebuilder","","Create a new TreeBuilder, optionally initialized with the…",90,[[["self"],["option",["tree"]]],["result",["treebuilder","error"]]]],[11,"tag","","Create a new tag in the repository from an object",90,[[["self"],["str"],["object"],["signature"],["str"],["bool"]],["result",["oid","error"]]]],[11,"tag_lightweight","","Create a new lightweight tag pointing at a target object",90,[[["self"],["str"],["object"],["bool"]],["result",["oid","error"]]]],[11,"find_tag","","Lookup a tag object from the repository.",90,[[["self"],["oid"]],["result",["tag","error"]]]],[11,"tag_delete","","Delete an existing tag reference.",90,[[["self"],["str"]],["result",["error"]]]],[11,"tag_names","","Get a list with all the tags in the repository.",90,[[["self"],["option",["str"]]],["result",["stringarray","error"]]]],[11,"checkout_head","","Updates files in the index and the working tree to match…",90,[[["self"],["option",["checkoutbuilder"]]],["result",["error"]]]],[11,"checkout_index","","Updates files in the working tree to match the content of…",90,[[["self"],["option",["index"]],["option",["checkoutbuilder"]]],["result",["error"]]]],[11,"checkout_tree","","Updates files in the index and working tree to match the…",90,[[["self"],["object"],["option",["checkoutbuilder"]]],["result",["error"]]]],[11,"merge","","Merges the given commit(s) into HEAD, writing the results…",90,N],[11,"merge_commits","","Merge two commits, producing an index that reflects the…",90,[[["self"],["commit"],["commit"],["option",["mergeoptions"]]],["result",["index","error"]]]],[11,"merge_trees","","Merge two trees, producing an index that reflects the…",90,[[["self"],["tree"],["tree"],["tree"],["option",["mergeoptions"]]],["result",["index","error"]]]],[11,"cleanup_state","","Remove all the metadata associated with an ongoing command…",90,[[["self"]],["result",["error"]]]],[11,"merge_analysis","","Analyzes the given branch(es) and determines the…",90,N],[11,"rebase","","Initializes a rebase operation to rebase the changes in…",90,[[["self"],["option",["annotatedcommit"]],["option",["annotatedcommit"]],["option",["annotatedcommit"]],["option",["rebaseoptions"]]],["result",["rebase","error"]]]],[11,"open_rebase","","Opens an existing rebase that was previously started by…",90,[[["self"],["option",["rebaseoptions"]]],["result",["rebase","error"]]]],[11,"note","","Add a note for an object",90,[[["self"],["signature"],["signature"],["option",["str"]],["oid"],["str"],["bool"]],["result",["oid","error"]]]],[11,"note_default_ref","","Get the default notes reference for this repository",90,[[["self"]],["result",["string","error"]]]],[11,"notes","","Creates a new iterator for notes in this repository.",90,[[["self"],["option",["str"]]],["result",["notes","error"]]]],[11,"find_note","","Read the note for an object.",90,[[["self"],["option",["str"]],["oid"]],["result",["note","error"]]]],[11,"note_delete","","Remove the note for an object.",90,[[["self"],["oid"],["option",["str"]],["signature"],["signature"]],["result",["error"]]]],[11,"revwalk","","Create a revwalk that can be used to traverse the commit…",90,[[["self"]],["result",["revwalk","error"]]]],[11,"blame_file","","Get the blame for a single file.",90,[[["self"],["path"],["option",["blameoptions"]]],["result",["blame","error"]]]],[11,"merge_base","","Find a merge base between two commits",90,[[["self"],["oid"],["oid"]],["result",["oid","error"]]]],[11,"merge_bases","","Find all merge bases between two commits",90,[[["self"],["oid"],["oid"]],["result",["oidarray","error"]]]],[11,"graph_ahead_behind","","Count the number of unique commits between two commit…",90,[[["self"],["oid"],["oid"]],["result",["error"]]]],[11,"graph_descendant_of","","Determine if a commit is the descendant of another commit",90,[[["self"],["oid"],["oid"]],["result",["bool","error"]]]],[11,"reflog","","Read the reflog for the given reference",90,[[["self"],["str"]],["result",["reflog","error"]]]],[11,"reflog_delete","","Delete the reflog for the given reference",90,[[["self"],["str"]],["result",["error"]]]],[11,"reflog_rename","","Rename a reflog",90,[[["self"],["str"],["str"]],["result",["error"]]]],[11,"reference_has_log","","Check if the given reference has a reflog.",90,[[["self"],["str"]],["result",["bool","error"]]]],[11,"reference_ensure_log","","Ensure that the given reference has a reflog.",90,[[["self"],["str"]],["result",["error"]]]],[11,"describe","","Describes a commit",90,[[["self"],["describeoptions"]],["result",["describe","error"]]]],[11,"diff_tree_to_tree","","Create a diff with the difference between two tree objects.",90,[[["self"],["option",["tree"]],["option",["tree"]],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"diff_tree_to_index","","Create a diff between a tree and repository index.",90,[[["self"],["option",["tree"]],["option",["index"]],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"diff_index_to_index","","Create a diff between two index objects.",90,[[["self"],["index"],["index"],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"diff_index_to_workdir","","Create a diff between the repository index and the workdir…",90,[[["self"],["option",["index"]],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"diff_tree_to_workdir","","Create a diff between a tree and the working directory.",90,[[["self"],["option",["tree"]],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"diff_tree_to_workdir_with_index","","Create a diff between a tree and the working directory…",90,[[["self"],["option",["tree"]],["option",["diffoptions"]]],["result",["diff","error"]]]],[11,"packbuilder","","Create a PackBuilder",90,[[["self"]],["result",["packbuilder","error"]]]],[11,"stash_save","","Save the local modifications to a new stash.",90,[[["self"],["signature"],["str"],["option",["stashflags"]]],["result",["oid","error"]]]],[11,"stash_apply","","Apply a single stashed state from the stash list.",90,[[["self"],["usize"],["option",["stashapplyoptions"]]],["result",["error"]]]],[11,"stash_foreach","","Loop over all the stashed states and issue a callback for…",90,[[["self"],["c"]],["result",["error"]]]],[11,"stash_drop","","Remove a single stashed state from the stash list.",90,[[["self"],["usize"]],["result",["error"]]]],[11,"stash_pop","","Apply a single stashed state from the stash list and…",90,[[["self"],["usize"],["option",["stashapplyoptions"]]],["result",["error"]]]],[11,"add_ignore_rule","","Add ignore rules for a repository.",90,[[["self"],["str"]],["result",["error"]]]],[11,"clear_ignore_rules","","Clear ignore rules that were explicitly added.",90,[[["self"]],["result",["error"]]]],[11,"is_path_ignored","","Test if the ignore rules apply to a given path.",90,[[["self"],["p"]],["result",["bool","error"]]]],[11,"new","","Creates a default set of initialization options.",91,[[],["repositoryinitoptions"]]],[11,"bare","","Create a bare repository with no working directory.",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"no_reinit","","Return an error if the repository path appears to already…",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"no_dotgit_dir","","Normally a '/.git/' will be appended to the repo path for…",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mkdir","","Make the repo path (and workdir path) as needed. The…",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mkpath","","Recursively make all components of the repo and workdir…",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mode","","Set to one of the `RepositoryInit` constants, or a custom…",91,[[["self"],["repositoryinitmode"]],["repositoryinitoptions"]]],[11,"external_template","","Enable or disable using external templates.",91,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"workdir_path","","The path do the working directory.",91,[[["self"],["path"]],["repositoryinitoptions"]]],[11,"description","","If set, this will be used to initialize the \"description\"…",91,[[["self"],["str"]],["repositoryinitoptions"]]],[11,"template_path","","When the `external_template` option is set, this is the…",91,[[["self"],["path"]],["repositoryinitoptions"]]],[11,"initial_head","","The name of the head to point HEAD at.",91,[[["self"],["str"]],["repositoryinitoptions"]]],[11,"origin_url","","If set, then after the rest of the repository…",91,[[["self"],["str"]],["repositoryinitoptions"]]],[11,"raw","","Creates a set of raw init options to be used with…",91,[[["self"]],["git_repository_init_options"]]],[11,"from_objects","","Assembles a new revspec from the from/to components.",92,[[["option",["object"]],["option",["object"]],["revparsemode"]],["revspec"]]],[11,"from","","Access the `from` range of this revspec.",92,[[["self"]],["option",["object"]]]],[11,"to","","Access the `to` range of this revspec.",92,[[["self"]],["option",["object"]]]],[11,"mode","","Returns the intent of the revspec.",92,[[["self"]],["revparsemode"]]],[11,"reset","","Reset a revwalk to allow re-configuring it.",93,[[["self"]]]],[11,"set_sorting","","Set the order in which commits are visited.",93,[[["self"],["sort"]]]],[11,"simplify_first_parent","","Simplify the history by first-parent",93,[[["self"]]]],[11,"push","","Mark a commit to start traversal from.",93,[[["self"],["oid"]],["result",["error"]]]],[11,"push_head","","Push the repository's HEAD",93,[[["self"]],["result",["error"]]]],[11,"push_glob","","Push matching references",93,[[["self"],["str"]],["result",["error"]]]],[11,"push_range","","Push and hide the respective endpoints of the given range.",93,[[["self"],["str"]],["result",["error"]]]],[11,"push_ref","","Push the OID pointed to by a reference",93,[[["self"],["str"]],["result",["error"]]]],[11,"hide","","Mark a commit as not of interest to this revwalk.",93,[[["self"],["oid"]],["result",["error"]]]],[11,"hide_head","","Hide the repository's HEAD",93,[[["self"]],["result",["error"]]]],[11,"hide_glob","","Hide matching references.",93,[[["self"],["str"]],["result",["error"]]]],[11,"hide_ref","","Hide the OID pointed to by a reference.",93,[[["self"],["str"]],["result",["error"]]]],[11,"now","","Create a new action signature with a timestamp of 'now'.",94,[[["str"],["str"]],["result",["signature","error"]]]],[11,"new","","Create a new action signature.",94,[[["str"],["str"],["time"]],["result",["signature","error"]]]],[11,"name","","Gets the name on the signature.",94,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Gets the name on the signature as a byte slice.",94,N],[11,"email","","Gets the email on the signature.",94,[[["self"]],["option",["str"]]]],[11,"email_bytes","","Gets the email on the signature as a byte slice.",94,N],[11,"when","","Get the `when` of this signature.",94,[[["self"]],["time"]]],[11,"to_owned","","Convert a signature of any lifetime into an owned…",94,[[["self"]],["signature"]]],[11,"new","","Creates a new blank set of status options.",95,[[],["statusoptions"]]],[11,"show","","Select the files on which to report status.",95,[[["self"],["statusshow"]],["statusoptions"]]],[11,"pathspec","","Add a path pattern to match (using fnmatch-style matching).",95,[[["self"],["t"]],["statusoptions"]]],[11,"include_untracked","","Flag whether untracked files will be included.",95,[[["self"],["bool"]],["statusoptions"]]],[11,"include_ignored","","Flag whether ignored files will be included.",95,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unmodified","","Flag to include unmodified files.",95,[[["self"],["bool"]],["statusoptions"]]],[11,"exclude_submodules","","Flag that submodules should be skipped.",95,[[["self"],["bool"]],["statusoptions"]]],[11,"recurse_untracked_dirs","","Flag that all files in untracked directories should be…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"disable_pathspec_match","","Indicates that the given paths should be treated as…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"recurse_ignored_dirs","","Indicates that the contents of ignored directories should…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_head_to_index","","Indicates that rename detection should be processed…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_index_to_workdir","","Indicates that rename detection should be run between the…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"sort_case_sensitively","","Override the native case sensitivity for the file system…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"sort_case_insensitively","","Override the native case sensitivity for the file system…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_from_rewrites","","Indicates that rename detection should include rewritten…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"no_refresh","","Bypasses the default status behavior of doing a \"soft\"…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"update_index","","Refresh the stat cache in the index for files are…",95,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unreadable","","",95,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unreadable_as_untracked","","",95,[[["self"],["bool"]],["statusoptions"]]],[11,"raw","","Get a pointer to the inner list of status options.",95,N],[11,"get","","Gets a status entry from this list at the specified index.",96,[[["self"],["usize"]],["option",["statusentry"]]]],[11,"len","","Gets the count of status entries in this list.",96,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is no status entry in this list.",96,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the statuses in this list.",96,[[["self"]],["statusiter"]]],[11,"path_bytes","","Access the bytes for this entry's corresponding pathname",97,N],[11,"path","","Access this entry's path name as a string.",97,[[["self"]],["option",["str"]]]],[11,"status","","Access the status flags for this file",97,[[["self"]],["status"]]],[11,"head_to_index","","Access detailed information about the differences between…",97,[[["self"]],["option",["diffdelta"]]]],[11,"index_to_workdir","","Access detailed information about the differences between…",97,[[["self"]],["option",["diffdelta"]]]],[11,"branch","","Get the submodule's branch.",98,[[["self"]],["option",["str"]]]],[11,"branch_bytes","","Get the branch for the submodule.",98,[[["self"]],["option"]]],[11,"url","","Get the submodule's url.",98,[[["self"]],["option",["str"]]]],[11,"opt_url_bytes","","Get the url for the submodule.",98,[[["self"]],["option"]]],[11,"name","","Get the submodule's name.",98,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Get the name for the submodule.",98,N],[11,"path","","Get the path for the submodule.",98,[[["self"]],["path"]]],[11,"head_id","","Get the OID for the submodule in the current HEAD tree.",98,[[["self"]],["option",["oid"]]]],[11,"index_id","","Get the OID for the submodule in the index.",98,[[["self"]],["option",["oid"]]]],[11,"workdir_id","","Get the OID for the submodule in the current working…",98,[[["self"]],["option",["oid"]]]],[11,"init","","Copy submodule info into \".git/config\" file.",98,[[["self"],["bool"]],["result",["error"]]]],[11,"open","","Open the repository for a submodule.",98,[[["self"]],["result",["repository","error"]]]],[11,"reload","","Reread submodule info from config, index, and HEAD.",98,[[["self"],["bool"]],["result",["error"]]]],[11,"sync","","Copy submodule remote info into submodule repo.",98,[[["self"]],["result",["error"]]]],[11,"add_to_index","","Add current submodule HEAD commit to index of superproject.",98,[[["self"],["bool"]],["result",["error"]]]],[11,"add_finalize","","Resolve the setup of a new git submodule.",98,[[["self"]],["result",["error"]]]],[11,"update","","Update submodule.",98,[[["self"],["bool"],["option",["submoduleupdateoptions"]]],["result",["error"]]]],[11,"new","","Return default options.",99,[[],["self"]]],[11,"checkout","","Set checkout options.",99,[[["self"],["checkoutbuilder"]],["self"]]],[11,"fetch","","Set fetch options and allow fetching.",99,[[["self"],["fetchoptions"]],["self"]]],[11,"allow_fetch","","Allow or disallow fetching.",99,[[["self"],["bool"]],["self"]]],[11,"new","","Creates a default set of merge options.",100,[[],["stashapplyoptions"]]],[11,"reinstantiate_index","","Set stash application flag to…",100,[[["self"]],["stashapplyoptions"]]],[11,"checkout_options","","Options to use when writing files to the working directory",100,[[["self"],["checkoutbuilder"]],["stashapplyoptions"]]],[11,"progress_cb","","Optional callback to notify the consumer of application…",100,[[["self"],["c"]],["stashapplyoptions"]]],[11,"raw","","Pointer to a raw git_stash_apply_options",100,[[["self"]],["git_stash_apply_options"]]],[11,"id","","Get the id (SHA1) of a repository tag",101,[[["self"]],["oid"]]],[11,"message","","Get the message of a tag",101,[[["self"]],["option",["str"]]]],[11,"message_bytes","","Get the message of a tag",101,[[["self"]],["option"]]],[11,"name","","Get the name of a tag",101,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Get the name of a tag",101,N],[11,"peel","","Recursively peel a tag until a non tag git_object is found",101,[[["self"]],["result",["object","error"]]]],[11,"tagger","","Get the tagger (author) of a tag",101,[[["self"]],["option",["signature"]]]],[11,"target","","Get the tagged object of a tag",101,[[["self"]],["result",["object","error"]]]],[11,"target_id","","Get the OID of the tagged object of a tag",101,[[["self"]],["oid"]]],[11,"target_type","","Get the OID of the tagged object of a tag",101,[[["self"]],["option",["objecttype"]]]],[11,"as_object","","Casts this Tag to be usable as an `Object`",101,[[["self"]],["object"]]],[11,"into_object","","Consumes Tag to be returned as an `Object`",101,[[["self"]],["object"]]],[11,"new","","Creates a new time structure from its components.",102,[[["i64"],["i32"]],["time"]]],[11,"seconds","","Return the time, in seconds, from epoch",102,[[["self"]],["i64"]]],[11,"offset_minutes","","Return the timezone offset, in minutes",102,[[["self"]],["i32"]]],[11,"sign","","Return whether the offset was positive or negative.…",102,[[["self"]],["char"]]],[11,"new","","Creates a new time structure from its components.",103,[[["i32"],["u32"]],["indextime"]]],[11,"seconds","","Returns the number of seconds in the second component of…",103,[[["self"]],["i32"]]],[11,"nanoseconds","","Returns the nanosecond component of this time.",103,[[["self"]],["u32"]]],[11,"id","","Get the id (SHA1) of a repository object",104,[[["self"]],["oid"]]],[11,"len","","Get the number of entries listed in this tree.",104,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is not entry",104,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the entries in this tree.",104,[[["self"]],["treeiter"]]],[11,"walk","","Traverse the entries in a tree and its subtrees in post or…",104,[[["self"],["treewalkmode"],["c"]],["result",["error"]]]],[11,"get_id","","Lookup a tree entry by SHA value.",104,[[["self"],["oid"]],["option",["treeentry"]]]],[11,"get","","Lookup a tree entry by its position in the tree",104,[[["self"],["usize"]],["option",["treeentry"]]]],[11,"get_name","","Lookup a tree entry by its filename",104,[[["self"],["str"]],["option",["treeentry"]]]],[11,"get_path","","Retrieve a tree entry contained in a tree or in any of its…",104,[[["self"],["path"]],["result",["treeentry","error"]]]],[11,"as_object","","Casts this Tree to be usable as an `Object`",104,[[["self"]],["object"]]],[11,"into_object","","Consumes Commit to be returned as an `Object`",104,[[["self"]],["object"]]],[11,"id","","Get the id of the object pointed by the entry",105,[[["self"]],["oid"]]],[11,"name","","Get the filename of a tree entry",105,[[["self"]],["option",["str"]]]],[11,"name_bytes","","Get the filename of a tree entry",105,N],[11,"to_object","","Convert a tree entry to the object it points to.",105,[[["self"],["repository"]],["result",["object","error"]]]],[11,"kind","","Get the type of the object pointed by the entry",105,[[["self"]],["option",["objecttype"]]]],[11,"filemode","","Get the UNIX file attributes of a tree entry",105,[[["self"]],["i32"]]],[11,"filemode_raw","","Get the raw UNIX file attributes of a tree entry",105,[[["self"]],["i32"]]],[11,"to_owned","","Convert this entry of any lifetime into an owned signature…",105,[[["self"]],["treeentry"]]],[11,"clear","","Clear all the entries in the builder",106,[[["self"]]]],[11,"len","","Get the number of entries",106,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is no entry",106,[[["self"]],["bool"]]],[11,"get","","Get en entry from the builder from its filename",106,[[["self"],["p"]],["result",["option","error"]]]],[11,"insert","","Add or update an entry in the builder",106,[[["self"],["p"],["oid"],["i32"]],["result",["treeentry","error"]]]],[11,"remove","","Remove an entry from the builder by its filename",106,[[["self"],["p"]],["result",["error"]]]],[11,"filter","","Selectively remove entries from the tree",106,[[["self"],["f"]]]],[11,"write","","Write the contents of the TreeBuilder as a Tree object and…",106,[[["self"]],["result",["oid","error"]]]],[6,"IndexMatchedPath","","A callback function to filter index matches.",N,N],[6,"Credentials","","Callback used to acquire credentials for when a remote is…",N,N],[6,"TransferProgress","","Callback to be invoked while a transfer is in progress.",N,N],[6,"TransportMessage","","Callback for receiving messages delivered by the transport.",N,N],[6,"UpdateTips","","Callback for whenever a reference is updated locally.",N,N],[6,"StashCb","","This is a callback function you can provide to iterate…",N,N],[6,"StashApplyProgressCb","","Stash application progress notification function.",N,N],[17,"DEFAULT_COMMENT_CHAR","","The default comment character for `message_prettify` ('#')",N,N],[8,"IntoCString","","A class of types that can be converted to C strings.",N,N],[10,"into_c_string","","Consume this container, converting it into a CString",107,[[["self"]],["result",["cstring","error"]]]],[18,"NONE","","Sort the repository contents in no particular ordering.",108,N],[18,"TOPOLOGICAL","","Sort the repository contents in topological order…",108,N],[18,"TIME","","Sort the repository contents by commit time.",108,N],[18,"REVERSE","","Iterate through the repository contents in reverse order.",108,N],[11,"empty","","Returns an empty set of flags.",108,[[],["sort"]]],[11,"all","","Returns the set containing all flags.",108,[[],["sort"]]],[11,"bits","","Returns the raw value of the flags currently stored.",108,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",108,[[["u32"]],["option",["sort"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",108,[[["u32"]],["sort"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",108,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",108,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",108,[[["self"],["sort"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",108,[[["self"],["sort"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",108,[[["self"],["sort"]]]],[11,"remove","","Removes the specified flags in-place.",108,[[["self"],["sort"]]]],[11,"toggle","","Toggles the specified flags in-place.",108,[[["self"],["sort"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",108,[[["self"],["sort"],["bool"]]]],[11,"is_none","","",108,[[["self"]],["bool"]]],[11,"is_topological","","",108,[[["self"]],["bool"]]],[11,"is_time","","",108,[[["self"]],["bool"]]],[11,"is_reverse","","",108,[[["self"]],["bool"]]],[18,"USER_PASS_PLAINTEXT","","",109,N],[18,"SSH_KEY","","",109,N],[18,"SSH_MEMORY","","",109,N],[18,"SSH_CUSTOM","","",109,N],[18,"DEFAULT","","",109,N],[18,"SSH_INTERACTIVE","","",109,N],[18,"USERNAME","","",109,N],[11,"empty","","Returns an empty set of flags.",109,[[],["credentialtype"]]],[11,"all","","Returns the set containing all flags.",109,[[],["credentialtype"]]],[11,"bits","","Returns the raw value of the flags currently stored.",109,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",109,[[["u32"]],["option",["credentialtype"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",109,[[["u32"]],["credentialtype"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",109,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",109,[[["self"],["credentialtype"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",109,[[["self"],["credentialtype"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",109,[[["self"],["credentialtype"]]]],[11,"remove","","Removes the specified flags in-place.",109,[[["self"],["credentialtype"]]]],[11,"toggle","","Toggles the specified flags in-place.",109,[[["self"],["credentialtype"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",109,[[["self"],["credentialtype"],["bool"]]]],[11,"is_user_pass_plaintext","","",109,[[["self"]],["bool"]]],[11,"is_ssh_key","","",109,[[["self"]],["bool"]]],[11,"is_ssh_memory","","",109,[[["self"]],["bool"]]],[11,"is_ssh_custom","","",109,[[["self"]],["bool"]]],[11,"is_default","","",109,[[["self"]],["bool"]]],[11,"is_ssh_interactive","","",109,[[["self"]],["bool"]]],[11,"is_username","","",109,[[["self"]],["bool"]]],[18,"EXTENDED","","Set when the `extended_flags` field is valid.",110,N],[18,"VALID","","\"Assume valid\" flag",110,N],[11,"empty","","Returns an empty set of flags.",110,[[],["indexentryflag"]]],[11,"all","","Returns the set containing all flags.",110,[[],["indexentryflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",110,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",110,[[["u16"]],["option",["indexentryflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",110,[[["u16"]],["indexentryflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",110,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",110,[[["self"],["indexentryflag"]]]],[11,"remove","","Removes the specified flags in-place.",110,[[["self"],["indexentryflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",110,[[["self"],["indexentryflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",110,[[["self"],["indexentryflag"],["bool"]]]],[11,"is_extended","","",110,[[["self"]],["bool"]]],[11,"is_valid","","",110,[[["self"]],["bool"]]],[18,"INTENT_TO_ADD","","An \"intent to add\" entry from \"git add -N\"",111,N],[18,"SKIP_WORKTREE","","Skip the associated worktree file, for sparse checkouts",111,N],[18,"EXTENDED2","","Reserved for a future on-disk extended flag",111,N],[18,"UPDATE","","",111,N],[18,"REMOVE","","",111,N],[18,"UPTODATE","","",111,N],[18,"ADDED","","",111,N],[18,"HASHED","","",111,N],[18,"UNHASHED","","",111,N],[18,"WT_REMOVE","","",111,N],[18,"CONFLICTED","","",111,N],[18,"UNPACKED","","",111,N],[18,"NEW_SKIP_WORKTREE","","",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["indexentryextendedflag"]]],[11,"all","","Returns the set containing all flags.",111,[[],["indexentryextendedflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",111,[[["u16"]],["option",["indexentryextendedflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",111,[[["u16"]],["indexentryextendedflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["indexentryextendedflag"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["indexentryextendedflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["indexentryextendedflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",111,[[["self"],["indexentryextendedflag"],["bool"]]]],[11,"is_intent_to_add","","",111,[[["self"]],["bool"]]],[11,"is_skip_worktree","","",111,[[["self"]],["bool"]]],[11,"is_extended2","","",111,[[["self"]],["bool"]]],[11,"is_update","","",111,[[["self"]],["bool"]]],[11,"is_remove","","",111,[[["self"]],["bool"]]],[11,"is_up_to_date","","",111,[[["self"]],["bool"]]],[11,"is_added","","",111,[[["self"]],["bool"]]],[11,"is_hashed","","",111,[[["self"]],["bool"]]],[11,"is_unhashed","","",111,[[["self"]],["bool"]]],[11,"is_wt_remove","","",111,[[["self"]],["bool"]]],[11,"is_conflicted","","",111,[[["self"]],["bool"]]],[11,"is_unpacked","","",111,[[["self"]],["bool"]]],[11,"is_new_skip_worktree","","",111,[[["self"]],["bool"]]],[18,"DEFAULT","","",112,N],[18,"FORCE","","",112,N],[18,"DISABLE_PATHSPEC_MATCH","","",112,N],[18,"CHECK_PATHSPEC","","",112,N],[11,"empty","","Returns an empty set of flags.",112,[[],["indexaddoption"]]],[11,"all","","Returns the set containing all flags.",112,[[],["indexaddoption"]]],[11,"bits","","Returns the raw value of the flags currently stored.",112,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",112,[[["u32"]],["option",["indexaddoption"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",112,[[["u32"]],["indexaddoption"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",112,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",112,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",112,[[["self"],["indexaddoption"]]]],[11,"remove","","Removes the specified flags in-place.",112,[[["self"],["indexaddoption"]]]],[11,"toggle","","Toggles the specified flags in-place.",112,[[["self"],["indexaddoption"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",112,[[["self"],["indexaddoption"],["bool"]]]],[11,"is_default","","",112,[[["self"]],["bool"]]],[11,"is_force","","",112,[[["self"]],["bool"]]],[11,"is_disable_pathspec_match","","",112,[[["self"]],["bool"]]],[11,"is_check_pathspec","","",112,[[["self"]],["bool"]]],[18,"NO_SEARCH","","Only open the specified path; don't walk upward searching.",113,N],[18,"CROSS_FS","","Search across filesystem boundaries.",113,N],[18,"BARE","","Force opening as bare repository, and defer loading its…",113,N],[18,"NO_DOTGIT","","Don't try appending `/.git` to the specified repository…",113,N],[18,"FROM_ENV","","Respect environment variables like `$GIT_DIR`.",113,N],[11,"empty","","Returns an empty set of flags.",113,[[],["repositoryopenflags"]]],[11,"all","","Returns the set containing all flags.",113,[[],["repositoryopenflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",113,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",113,[[["u32"]],["option",["repositoryopenflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",113,[[["u32"]],["repositoryopenflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",113,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",113,[[["self"],["repositoryopenflags"]]]],[11,"remove","","Removes the specified flags in-place.",113,[[["self"],["repositoryopenflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",113,[[["self"],["repositoryopenflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",113,[[["self"],["repositoryopenflags"],["bool"]]]],[11,"is_no_search","","",113,[[["self"]],["bool"]]],[11,"is_cross_fs","","",113,[[["self"]],["bool"]]],[11,"is_bare","","",113,[[["self"]],["bool"]]],[11,"is_no_dotgit","","",113,[[["self"]],["bool"]]],[11,"is_from_env","","",113,[[["self"]],["bool"]]],[18,"SINGLE","","The spec targeted a single object",114,N],[18,"RANGE","","The spec targeted a range of commits",114,N],[18,"MERGE_BASE","","The spec used the `...` operator, which invokes special…",114,N],[11,"empty","","Returns an empty set of flags.",114,[[],["revparsemode"]]],[11,"all","","Returns the set containing all flags.",114,[[],["revparsemode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",114,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",114,[[["u32"]],["option",["revparsemode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",114,[[["u32"]],["revparsemode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",114,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",114,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",114,[[["self"],["revparsemode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",114,[[["self"],["revparsemode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",114,[[["self"],["revparsemode"]]]],[11,"remove","","Removes the specified flags in-place.",114,[[["self"],["revparsemode"]]]],[11,"toggle","","Toggles the specified flags in-place.",114,[[["self"],["revparsemode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",114,[[["self"],["revparsemode"],["bool"]]]],[11,"is_no_single","","",114,[[["self"]],["bool"]]],[11,"is_range","","",114,[[["self"]],["bool"]]],[11,"is_merge_base","","",114,[[["self"]],["bool"]]],[18,"ANALYSIS_NONE","","No merge is possible.",115,N],[18,"ANALYSIS_NORMAL","","A \"normal\" merge; both HEAD and the given merge input have…",115,N],[18,"ANALYSIS_UP_TO_DATE","","All given merge inputs are reachable from HEAD, meaning…",115,N],[18,"ANALYSIS_FASTFORWARD","","The given merge input is a fast-forward from HEAD and no…",115,N],[18,"ANALYSIS_UNBORN","","The HEAD of the current repository is \"unborn\" and does…",115,N],[11,"empty","","Returns an empty set of flags.",115,[[],["mergeanalysis"]]],[11,"all","","Returns the set containing all flags.",115,[[],["mergeanalysis"]]],[11,"bits","","Returns the raw value of the flags currently stored.",115,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",115,[[["u32"]],["option",["mergeanalysis"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",115,[[["u32"]],["mergeanalysis"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",115,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",115,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",115,[[["self"],["mergeanalysis"]]]],[11,"remove","","Removes the specified flags in-place.",115,[[["self"],["mergeanalysis"]]]],[11,"toggle","","Toggles the specified flags in-place.",115,[[["self"],["mergeanalysis"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",115,[[["self"],["mergeanalysis"],["bool"]]]],[11,"is_none","","",115,[[["self"]],["bool"]]],[11,"is_normal","","",115,[[["self"]],["bool"]]],[11,"is_up_to_date","","",115,[[["self"]],["bool"]]],[11,"is_fast_forward","","",115,[[["self"]],["bool"]]],[11,"is_unborn","","",115,[[["self"]],["bool"]]],[18,"NONE","","No configuration was found that suggests a preferred…",116,N],[18,"NO_FAST_FORWARD","","There is a `merge.ff=false` configuration setting,…",116,N],[18,"FASTFORWARD_ONLY","","There is a `merge.ff=only` configuration setting,…",116,N],[11,"empty","","Returns an empty set of flags.",116,[[],["mergepreference"]]],[11,"all","","Returns the set containing all flags.",116,[[],["mergepreference"]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",116,[[["u32"]],["option",["mergepreference"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",116,[[["u32"]],["mergepreference"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",116,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",116,[[["self"],["mergepreference"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",116,[[["self"],["mergepreference"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["self"],["mergepreference"]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["self"],["mergepreference"]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["self"],["mergepreference"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",116,[[["self"],["mergepreference"],["bool"]]]],[11,"is_none","","",116,[[["self"]],["bool"]]],[11,"is_no_fast_forward","","",116,[[["self"]],["bool"]]],[11,"is_fastforward_only","","",116,[[["self"]],["bool"]]],[11,"str","","Convert an object type to its string representation.",14,[[["self"]],["str"]]],[11,"is_loose","","Determine if the given git_otype is a valid loose object…",14,[[["self"]],["bool"]]],[11,"from_raw","","Convert a raw git_otype to an ObjectType",14,[[["git_otype"]],["option",["objecttype"]]]],[11,"raw","","Convert this kind into its raw representation",14,[[["self"]],["git_otype"]]],[11,"from_str","","Convert a string object type representation to its object…",14,[[["str"]],["option",["objecttype"]]]],[11,"str","","Convert an object type to its string representation.",15,[[["self"]],["str"]]],[11,"from_raw","","Convert a raw git_ref_t to a ReferenceType.",15,[[["git_ref_t"]],["option",["referencetype"]]]],[11,"from_raw","","Converts a raw configuration level to a ConfigLevel",17,[[["git_config_level_t"]],["configlevel"]]],[18,"CURRENT","","",117,N],[18,"INDEX_NEW","","",117,N],[18,"INDEX_MODIFIED","","",117,N],[18,"INDEX_DELETED","","",117,N],[18,"INDEX_RENAMED","","",117,N],[18,"INDEX_TYPECHANGE","","",117,N],[18,"WT_NEW","","",117,N],[18,"WT_MODIFIED","","",117,N],[18,"WT_DELETED","","",117,N],[18,"WT_TYPECHANGE","","",117,N],[18,"WT_RENAMED","","",117,N],[18,"IGNORED","","",117,N],[18,"CONFLICTED","","",117,N],[11,"empty","","Returns an empty set of flags.",117,[[],["status"]]],[11,"all","","Returns the set containing all flags.",117,[[],["status"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",117,[[["u32"]],["option",["status"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",117,[[["u32"]],["status"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",117,[[["self"],["status"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",117,[[["self"],["status"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["self"],["status"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["self"],["status"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["self"],["status"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",117,[[["self"],["status"],["bool"]]]],[11,"is_index_new","","",117,[[["self"]],["bool"]]],[11,"is_index_modified","","",117,[[["self"]],["bool"]]],[11,"is_index_deleted","","",117,[[["self"]],["bool"]]],[11,"is_index_renamed","","",117,[[["self"]],["bool"]]],[11,"is_index_typechange","","",117,[[["self"]],["bool"]]],[11,"is_wt_new","","",117,[[["self"]],["bool"]]],[11,"is_wt_modified","","",117,[[["self"]],["bool"]]],[11,"is_wt_deleted","","",117,[[["self"]],["bool"]]],[11,"is_wt_typechange","","",117,[[["self"]],["bool"]]],[11,"is_wt_renamed","","",117,[[["self"]],["bool"]]],[11,"is_ignored","","",117,[[["self"]],["bool"]]],[11,"is_conflicted","","",117,[[["self"]],["bool"]]],[18,"SHARED_UMASK","","Use permissions configured by umask - the default",118,N],[18,"SHARED_GROUP","","Use `--shared=group` behavior, chmod'ing the new repo to…",118,N],[18,"SHARED_ALL","","Use `--shared=all` behavior, adding world readability.",118,N],[11,"empty","","Returns an empty set of flags.",118,[[],["repositoryinitmode"]]],[11,"all","","Returns the set containing all flags.",118,[[],["repositoryinitmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",118,[[["u32"]],["option",["repositoryinitmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",118,[[["u32"]],["repositoryinitmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["repositoryinitmode"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["repositoryinitmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["repositoryinitmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",118,[[["self"],["repositoryinitmode"],["bool"]]]],[11,"is_shared_umask","","",118,[[["self"]],["bool"]]],[11,"is_shared_group","","",118,[[["self"]],["bool"]]],[11,"is_shared_all","","",118,[[["self"]],["bool"]]],[18,"IN_HEAD","","",119,N],[18,"IN_INDEX","","",119,N],[18,"IN_CONFIG","","",119,N],[18,"IN_WD","","",119,N],[18,"INDEX_ADDED","","",119,N],[18,"INDEX_DELETED","","",119,N],[18,"INDEX_MODIFIED","","",119,N],[18,"WD_UNINITIALIZED","","",119,N],[18,"WD_ADDED","","",119,N],[18,"WD_DELETED","","",119,N],[18,"WD_MODIFIED","","",119,N],[18,"WD_INDEX_MODIFIED","","",119,N],[18,"WD_WD_MODIFIED","","",119,N],[18,"WD_UNTRACKED","","",119,N],[11,"empty","","Returns an empty set of flags.",119,[[],["submodulestatus"]]],[11,"all","","Returns the set containing all flags.",119,[[],["submodulestatus"]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",119,[[["u32"]],["option",["submodulestatus"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",119,[[["u32"]],["submodulestatus"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",119,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["self"],["submodulestatus"]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["self"],["submodulestatus"]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["self"],["submodulestatus"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",119,[[["self"],["submodulestatus"],["bool"]]]],[11,"is_in_head","","",119,[[["self"]],["bool"]]],[11,"is_in_index","","",119,[[["self"]],["bool"]]],[11,"is_in_config","","",119,[[["self"]],["bool"]]],[11,"is_in_wd","","",119,[[["self"]],["bool"]]],[11,"is_index_added","","",119,[[["self"]],["bool"]]],[11,"is_index_deleted","","",119,[[["self"]],["bool"]]],[11,"is_index_modified","","",119,[[["self"]],["bool"]]],[11,"is_wd_uninitialized","","",119,[[["self"]],["bool"]]],[11,"is_wd_added","","",119,[[["self"]],["bool"]]],[11,"is_wd_deleted","","",119,[[["self"]],["bool"]]],[11,"is_wd_modified","","",119,[[["self"]],["bool"]]],[11,"is_wd_wd_modified","","",119,[[["self"]],["bool"]]],[11,"is_wd_untracked","","",119,[[["self"]],["bool"]]],[18,"DEFAULT","","Use the default pathspec matching configuration.",120,N],[18,"IGNORE_CASE","","Force matching to ignore case, otherwise matching will use…",120,N],[18,"USE_CASE","","Force case sensitive matches, otherwise match will use the…",120,N],[18,"NO_GLOB","","Disable glob patterns and just use simple string…",120,N],[18,"NO_MATCH_ERROR","","Means that match functions return the error code…",120,N],[18,"FIND_FAILURES","","Means that the list returned should track which patterns…",120,N],[18,"FAILURES_ONLY","","Means that the list returned does not need to keep the…",120,N],[11,"empty","","Returns an empty set of flags.",120,[[],["pathspecflags"]]],[11,"all","","Returns the set containing all flags.",120,[[],["pathspecflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",120,[[["u32"]],["option",["pathspecflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",120,[[["u32"]],["pathspecflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",120,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["self"],["pathspecflags"]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["self"],["pathspecflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["self"],["pathspecflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",120,[[["self"],["pathspecflags"],["bool"]]]],[11,"is_default","","",120,[[["self"]],["bool"]]],[11,"is_ignore_case","","",120,[[["self"]],["bool"]]],[11,"is_use_case","","",120,[[["self"]],["bool"]]],[11,"is_no_glob","","",120,[[["self"]],["bool"]]],[11,"is_no_match_error","","",120,[[["self"]],["bool"]]],[11,"is_find_failures","","",120,[[["self"]],["bool"]]],[11,"is_failures_only","","",120,[[["self"]],["bool"]]],[18,"CONFLICT","","Notification about a conflict.",121,N],[18,"DIRTY","","Notification about a dirty file.",121,N],[18,"UPDATED","","Notification about an updated file.",121,N],[18,"UNTRACKED","","Notification about an untracked file.",121,N],[18,"IGNORED","","Notification about an ignored file.",121,N],[11,"empty","","Returns an empty set of flags.",121,[[],["checkoutnotificationtype"]]],[11,"all","","Returns the set containing all flags.",121,[[],["checkoutnotificationtype"]]],[11,"bits","","Returns the raw value of the flags currently stored.",121,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",121,[[["u32"]],["option",["checkoutnotificationtype"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",121,[[["u32"]],["checkoutnotificationtype"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",121,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"remove","","Removes the specified flags in-place.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"toggle","","Toggles the specified flags in-place.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",121,[[["self"],["checkoutnotificationtype"],["bool"]]]],[11,"is_conflict","","",121,[[["self"]],["bool"]]],[11,"is_dirty","","",121,[[["self"]],["bool"]]],[11,"is_updated","","",121,[[["self"]],["bool"]]],[11,"is_untracked","","",121,[[["self"]],["bool"]]],[11,"is_ignored","","",121,[[["self"]],["bool"]]],[18,"NONE","","Don't generate any stats",122,N],[18,"FULL","","Equivalent of `--stat` in git",122,N],[18,"SHORT","","Equivalent of `--shortstat` in git",122,N],[18,"NUMBER","","Equivalent of `--numstat` in git",122,N],[18,"INCLUDE_SUMMARY","","Extended header information such as creations, renames and…",122,N],[11,"empty","","Returns an empty set of flags.",122,[[],["diffstatsformat"]]],[11,"all","","Returns the set containing all flags.",122,[[],["diffstatsformat"]]],[11,"bits","","Returns the raw value of the flags currently stored.",122,[[["self"]],["git_diff_stats_format_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",122,[[["git_diff_stats_format_t"]],["option",["diffstatsformat"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",122,[[["git_diff_stats_format_t"]],["diffstatsformat"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",122,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",122,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",122,[[["self"],["diffstatsformat"]]]],[11,"remove","","Removes the specified flags in-place.",122,[[["self"],["diffstatsformat"]]]],[11,"toggle","","Toggles the specified flags in-place.",122,[[["self"],["diffstatsformat"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",122,[[["self"],["diffstatsformat"],["bool"]]]],[11,"is_none","","",122,[[["self"]],["bool"]]],[11,"is_full","","",122,[[["self"]],["bool"]]],[11,"is_short","","",122,[[["self"]],["bool"]]],[11,"is_number","","",122,[[["self"]],["bool"]]],[11,"is_include_summary","","",122,[[["self"]],["bool"]]],[18,"DEFAULT","","",123,N],[18,"REINSTATE_INDEX","","Try to reinstate not only the working tree's changes, but…",123,N],[11,"empty","","Returns an empty set of flags.",123,[[],["stashapplyflags"]]],[11,"all","","Returns the set containing all flags.",123,[[],["stashapplyflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",123,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",123,[[["u32"]],["option",["stashapplyflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",123,[[["u32"]],["stashapplyflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",123,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",123,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",123,[[["self"],["stashapplyflags"]]]],[11,"remove","","Removes the specified flags in-place.",123,[[["self"],["stashapplyflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",123,[[["self"],["stashapplyflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",123,[[["self"],["stashapplyflags"],["bool"]]]],[11,"is_default","","",123,[[["self"]],["bool"]]],[11,"is_reinstate_index","","",123,[[["self"]],["bool"]]],[18,"DEFAULT","","",124,N],[18,"KEEP_INDEX","","All changes already added to the index are left intact in…",124,N],[18,"INCLUDE_UNTRACKED","","All untracked files are also stashed and then cleaned up…",124,N],[18,"INCLUDE_IGNORED","","All ignored files are also stashed and then cleaned up…",124,N],[11,"empty","","Returns an empty set of flags.",124,[[],["stashflags"]]],[11,"all","","Returns the set containing all flags.",124,[[],["stashflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",124,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",124,[[["u32"]],["option",["stashflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",124,[[["u32"]],["stashflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",124,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",124,[[["self"],["stashflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",124,[[["self"],["stashflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",124,[[["self"],["stashflags"]]]],[11,"remove","","Removes the specified flags in-place.",124,[[["self"],["stashflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",124,[[["self"],["stashflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",124,[[["self"],["stashflags"],["bool"]]]],[11,"is_default","","",124,[[["self"]],["bool"]]],[11,"is_keep_index","","",124,[[["self"]],["bool"]]],[11,"is_include_untracked","","",124,[[["self"]],["bool"]]],[11,"is_include_ignored","","",124,[[["self"]],["bool"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_iter","","",125,[[["self"]],["i"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_iter","","",126,[[["self"]],["i"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_iter","","",128,[[["self"]],["i"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",129,[[["self"]],["i"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",130,[[["self"]],["i"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_iter","","",131,[[["self"]],["i"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_iter","","",132,[[["self"]],["i"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into_iter","","",133,[[["self"]],["i"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into_iter","","",134,[[["self"]],["i"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_iter","","",76,[[["self"]],["i"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_iter","","",79,[[["self"]],["i"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_iter","","",135,[[["self"]],["i"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_iter","","",136,[[["self"]],["i"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_iter","","",137,[[["self"]],["i"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_iter","","",93,[[["self"]],["i"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_iter","","",138,[[["self"]],["i"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_iter","","",139,[[["self"]],["i"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","git2::build","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","git2::cert","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","git2::string_array","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_iter","","",141,[[["self"]],["i"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into_iter","","",142,[[["self"]],["i"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","git2::oid_array","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","git2::transport","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"next","git2::string_array","",141,[[["self"]],["option",["option"]]]],[11,"size_hint","","",141,N],[11,"next","","",142,[[["self"]],["option"]]],[11,"size_hint","","",142,N],[11,"next","git2","",125,[[["self"]],["option",["blamehunk"]]]],[11,"size_hint","","",125,N],[11,"next","","",41,[[["self"]],["option",["result"]]]],[11,"next","","",126,[[["self"]],["option",["commit"]]]],[11,"size_hint","","",126,N],[11,"next","","",128,[[["self"]],["option",["diffdelta"]]]],[11,"size_hint","","",128,N],[11,"next","","",130,[[["self"]],["option",["indexentry"]]]],[11,"next","","",129,[[["self"]],["option",["result"]]]],[11,"next","","",131,[[["self"]],["option",["result"]]]],[11,"next","","",134,[[["self"]],["option"]]],[11,"size_hint","","",134,N],[11,"next","","",133,[[["self"]],["option",["diffdelta"]]]],[11,"size_hint","","",133,N],[11,"next","","",132,[[["self"]],["option"]]],[11,"size_hint","","",132,N],[11,"next","","Performs the next rebase operation and returns the…",76,[[["self"]],["option",["result"]]]],[11,"next","","",79,[[["self"]],["option",["result"]]]],[11,"next","","",135,[[["self"]],["option",["result"]]]],[11,"next","","",136,[[["self"]],["option",["reflogentry"]]]],[11,"size_hint","","",136,N],[11,"next","","",137,[[["self"]],["option",["refspec"]]]],[11,"size_hint","","",137,N],[11,"next","","",93,[[["self"]],["option",["result"]]]],[11,"next","","",138,[[["self"]],["option",["statusentry"]]]],[11,"size_hint","","",138,N],[11,"next","","",139,[[["self"]],["option",["treeentry"]]]],[11,"size_hint","","",139,N],[11,"eq","","",9,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",10,[[["self"],["errorclass"]],["bool"]]],[11,"eq","","",11,[[["self"],["repositorystate"]],["bool"]]],[11,"eq","","",14,[[["self"],["objecttype"]],["bool"]]],[11,"eq","","",15,[[["self"],["referencetype"]],["bool"]]],[11,"eq","","",16,[[["self"],["branchtype"]],["bool"]]],[11,"eq","","",17,[[["self"],["configlevel"]],["bool"]]],[11,"eq","","",18,[[["self"],["filefavor"]],["bool"]]],[11,"eq","","",108,[[["self"],["sort"]],["bool"]]],[11,"ne","","",108,[[["self"],["sort"]],["bool"]]],[11,"eq","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"ne","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"eq","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"ne","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"eq","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"ne","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"eq","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"ne","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"eq","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"ne","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"eq","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"ne","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"eq","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"ne","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"eq","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"ne","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"eq","","",60,[[["self"],["error"]],["bool"]]],[11,"ne","","",60,[[["self"],["error"]],["bool"]]],[11,"eq","","",69,[[["self"],["oid"]],["bool"]]],[11,"eq","","",5,[[["self"],["rebaseoperationtype"]],["bool"]]],[11,"eq","","",78,[[["self"],["reference"]],["bool"]]],[11,"eq","","",102,[[["self"],["time"]],["bool"]]],[11,"ne","","",102,[[["self"],["time"]],["bool"]]],[11,"eq","","",103,[[["self"],["indextime"]],["bool"]]],[11,"ne","","",103,[[["self"],["indextime"]],["bool"]]],[11,"eq","","",105,[[["self"],["treeentry"]],["bool"]]],[11,"eq","","",117,[[["self"],["status"]],["bool"]]],[11,"ne","","",117,[[["self"],["status"]],["bool"]]],[11,"eq","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"ne","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"eq","","",19,[[["self"],["delta"]],["bool"]]],[11,"eq","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"ne","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"eq","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"ne","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"eq","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"ne","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"eq","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"ne","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"eq","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"ne","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"eq","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"ne","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"next_back","git2::string_array","",141,[[["self"]],["option",["option"]]]],[11,"next_back","","",142,[[["self"]],["option"]]],[11,"next_back","git2","",125,[[["self"]],["option",["blamehunk"]]]],[11,"next_back","","",126,[[["self"]],["option",["commit"]]]],[11,"next_back","","",128,[[["self"]],["option",["diffdelta"]]]],[11,"next_back","","",134,[[["self"]],["option"]]],[11,"next_back","","",133,[[["self"]],["option",["diffdelta"]]]],[11,"next_back","","",132,[[["self"]],["option"]]],[11,"next_back","","",136,[[["self"]],["option",["reflogentry"]]]],[11,"next_back","","",137,[[["self"]],["option",["refspec"]]]],[11,"next_back","","",138,[[["self"]],["option",["statusentry"]]]],[11,"next_back","","",139,[[["self"]],["option",["treeentry"]]]],[11,"as_ref","","",69,N],[11,"default","","",109,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","git2::build","",26,[[],["self"]]],[11,"default","","",27,[[],["self"]]],[11,"default","git2","",37,[[],["self"]]],[11,"default","","",42,[[],["self"]]],[11,"default","","",48,[[],["self"]]],[11,"default","","",49,[[],["self"]]],[11,"default","","",53,[[],["self"]]],[11,"default","","",59,[[],["self"]]],[11,"default","","",63,[[],["self"]]],[11,"default","","",74,[[],["proxyoptions"]]],[11,"default","","",75,[[],["self"]]],[11,"default","","",85,[[],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"cmp","","",108,[[["self"],["sort"]],["ordering"]]],[11,"cmp","","",109,[[["self"],["credentialtype"]],["ordering"]]],[11,"cmp","","",110,[[["self"],["indexentryflag"]],["ordering"]]],[11,"cmp","","",111,[[["self"],["indexentryextendedflag"]],["ordering"]]],[11,"cmp","","",112,[[["self"],["indexaddoption"]],["ordering"]]],[11,"cmp","","",113,[[["self"],["repositoryopenflags"]],["ordering"]]],[11,"cmp","","",114,[[["self"],["revparsemode"]],["ordering"]]],[11,"cmp","","",115,[[["self"],["mergeanalysis"]],["ordering"]]],[11,"cmp","","",116,[[["self"],["mergepreference"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["oid"]],["ordering"]]],[11,"cmp","","",78,[[["self"],["reference"]],["ordering"]]],[11,"cmp","","",102,[[["self"],["time"]],["ordering"]]],[11,"cmp","","",103,[[["self"],["indextime"]],["ordering"]]],[11,"cmp","","",105,[[["self"],["treeentry"]],["ordering"]]],[11,"cmp","","",117,[[["self"],["status"]],["ordering"]]],[11,"cmp","","",118,[[["self"],["repositoryinitmode"]],["ordering"]]],[11,"cmp","","",119,[[["self"],["submodulestatus"]],["ordering"]]],[11,"cmp","","",120,[[["self"],["pathspecflags"]],["ordering"]]],[11,"cmp","","",121,[[["self"],["checkoutnotificationtype"]],["ordering"]]],[11,"cmp","","",122,[[["self"],["diffstatsformat"]],["ordering"]]],[11,"cmp","","",123,[[["self"],["stashapplyflags"]],["ordering"]]],[11,"cmp","","",124,[[["self"],["stashflags"]],["ordering"]]],[11,"clone","","",9,[[["self"]],["errorcode"]]],[11,"clone","","",10,[[["self"]],["errorclass"]]],[11,"clone","","",11,[[["self"]],["repositorystate"]]],[11,"clone","","",12,[[["self"]],["direction"]]],[11,"clone","","",13,[[["self"]],["resettype"]]],[11,"clone","","",14,[[["self"]],["objecttype"]]],[11,"clone","","",15,[[["self"]],["referencetype"]]],[11,"clone","","",16,[[["self"]],["branchtype"]]],[11,"clone","","",17,[[["self"]],["configlevel"]]],[11,"clone","","",18,[[["self"]],["filefavor"]]],[11,"clone","","",108,[[["self"]],["sort"]]],[11,"clone","","",109,[[["self"]],["credentialtype"]]],[11,"clone","","",110,[[["self"]],["indexentryflag"]]],[11,"clone","","",111,[[["self"]],["indexentryextendedflag"]]],[11,"clone","","",112,[[["self"]],["indexaddoption"]]],[11,"clone","","",113,[[["self"]],["repositoryopenflags"]]],[11,"clone","","",114,[[["self"]],["revparsemode"]]],[11,"clone","","",115,[[["self"]],["mergeanalysis"]]],[11,"clone","","",116,[[["self"]],["mergepreference"]]],[11,"clone","git2::build","",25,[[["self"]],["clonelocal"]]],[11,"clone","git2::transport","",32,[[["self"]],["service"]]],[11,"clone","git2","",38,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["diffbinarykind"]]],[11,"clone","","",65,[[["self"]],["object"]]],[11,"clone","","",69,[[["self"]],["oid"]]],[11,"clone","","",83,[[["self"]],["remote"]]],[11,"clone","","",94,[[["self"]],["signature"]]],[11,"clone","","",6,[[["self"]],["statusshow"]]],[11,"clone","","",101,[[["self"]],["self"]]],[11,"clone","","",102,[[["self"]],["time"]]],[11,"clone","","",103,[[["self"]],["indextime"]]],[11,"clone","","",104,[[["self"]],["self"]]],[11,"clone","","",105,[[["self"]],["treeentry"]]],[11,"clone","","",117,[[["self"]],["status"]]],[11,"clone","","",118,[[["self"]],["repositoryinitmode"]]],[11,"clone","","",19,[[["self"]],["delta"]]],[11,"clone","","",119,[[["self"]],["submodulestatus"]]],[11,"clone","","",120,[[["self"]],["pathspecflags"]]],[11,"clone","","",121,[[["self"]],["checkoutnotificationtype"]]],[11,"clone","","",21,[[["self"]],["diffformat"]]],[11,"clone","","",122,[[["self"]],["diffstatsformat"]]],[11,"clone","","",123,[[["self"]],["stashapplyflags"]]],[11,"clone","","",124,[[["self"]],["stashflags"]]],[11,"extend","","",108,[[["self"],["t"]]]],[11,"extend","","",109,[[["self"],["t"]]]],[11,"extend","","",110,[[["self"],["t"]]]],[11,"extend","","",111,[[["self"],["t"]]]],[11,"extend","","",112,[[["self"],["t"]]]],[11,"extend","","",113,[[["self"],["t"]]]],[11,"extend","","",114,[[["self"],["t"]]]],[11,"extend","","",115,[[["self"],["t"]]]],[11,"extend","","",116,[[["self"],["t"]]]],[11,"extend","","",117,[[["self"],["t"]]]],[11,"extend","","",118,[[["self"],["t"]]]],[11,"extend","","",119,[[["self"],["t"]]]],[11,"extend","","",120,[[["self"],["t"]]]],[11,"extend","","",121,[[["self"],["t"]]]],[11,"extend","","",122,[[["self"],["t"]]]],[11,"extend","","",123,[[["self"],["t"]]]],[11,"extend","","",124,[[["self"],["t"]]]],[11,"from","","",60,[[["nulerror"]],["error"]]],[11,"from","","",60,[[["joinpathserror"]],["error"]]],[11,"drop","git2::string_array","",31,[[["self"]]]],[11,"drop","git2::oid_array","",143,[[["self"]]]],[11,"drop","git2::transport","",34,[[["self"]]]],[11,"drop","git2","",35,[[["self"]]]],[11,"drop","","",38,[[["self"]]]],[11,"drop","","",39,[[["self"]]]],[11,"drop","","",41,[[["self"]]]],[11,"drop","","",42,[[["self"]]]],[11,"drop","","",43,[[["self"]]]],[11,"drop","","",44,[[["self"]]]],[11,"drop","","",127,[[["self"]]]],[11,"drop","","",45,[[["self"]]]],[11,"drop","","",46,[[["self"]]]],[11,"drop","","",47,[[["self"]]]],[11,"drop","","",50,[[["self"]]]],[11,"drop","","",56,[[["self"]]]],[11,"drop","","",61,[[["self"]]]],[11,"drop","","",129,[[["self"]]]],[11,"drop","","",62,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","","",131,[[["self"]]]],[11,"drop","","",65,[[["self"]]]],[11,"drop","","",66,[[["self"]]]],[11,"drop","","",67,[[["self"]]]],[11,"drop","","",140,[[["self"]]]],[11,"drop","","",68,[[["self"]]]],[11,"drop","","",70,[[["self"]]]],[11,"drop","","",71,[[["self"]]]],[11,"drop","","",72,[[["self"]]]],[11,"drop","","",73,[[["self"]]]],[11,"drop","","",76,[[["self"]]]],[11,"drop","","",78,[[["self"]]]],[11,"drop","","",79,[[["self"]]]],[11,"drop","","",80,[[["self"]]]],[11,"drop","","",83,[[["self"]]]],[11,"drop","","",87,[[["self"]]]],[11,"drop","","",90,[[["self"]]]],[11,"drop","","",93,[[["self"]]]],[11,"drop","","",94,[[["self"]]]],[11,"drop","","",96,[[["self"]]]],[11,"drop","","",98,[[["self"]]]],[11,"drop","","",101,[[["self"]]]],[11,"drop","","",104,[[["self"]]]],[11,"drop","","",105,[[["self"]]]],[11,"drop","","",106,[[["self"]]]],[11,"into","","",8,[[["self"]],["i32"]]],[11,"into","","",7,[[["self"]],["git_treewalk_mode"]]],[11,"partial_cmp","","",108,[[["self"],["sort"]],["option",["ordering"]]]],[11,"lt","","",108,[[["self"],["sort"]],["bool"]]],[11,"le","","",108,[[["self"],["sort"]],["bool"]]],[11,"gt","","",108,[[["self"],["sort"]],["bool"]]],[11,"ge","","",108,[[["self"],["sort"]],["bool"]]],[11,"partial_cmp","","",109,[[["self"],["credentialtype"]],["option",["ordering"]]]],[11,"lt","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"le","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"gt","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"ge","","",109,[[["self"],["credentialtype"]],["bool"]]],[11,"partial_cmp","","",110,[[["self"],["indexentryflag"]],["option",["ordering"]]]],[11,"lt","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"le","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"gt","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"ge","","",110,[[["self"],["indexentryflag"]],["bool"]]],[11,"partial_cmp","","",111,[[["self"],["indexentryextendedflag"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"le","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"gt","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"ge","","",111,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"partial_cmp","","",112,[[["self"],["indexaddoption"]],["option",["ordering"]]]],[11,"lt","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"le","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"gt","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"ge","","",112,[[["self"],["indexaddoption"]],["bool"]]],[11,"partial_cmp","","",113,[[["self"],["repositoryopenflags"]],["option",["ordering"]]]],[11,"lt","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"le","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"gt","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"ge","","",113,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"partial_cmp","","",114,[[["self"],["revparsemode"]],["option",["ordering"]]]],[11,"lt","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"le","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"gt","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"ge","","",114,[[["self"],["revparsemode"]],["bool"]]],[11,"partial_cmp","","",115,[[["self"],["mergeanalysis"]],["option",["ordering"]]]],[11,"lt","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"le","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"gt","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"ge","","",115,[[["self"],["mergeanalysis"]],["bool"]]],[11,"partial_cmp","","",116,[[["self"],["mergepreference"]],["option",["ordering"]]]],[11,"lt","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"le","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"gt","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"ge","","",116,[[["self"],["mergepreference"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["oid"]],["option",["ordering"]]]],[11,"partial_cmp","","",78,[[["self"],["reference"]],["option",["ordering"]]]],[11,"partial_cmp","","",102,[[["self"],["time"]],["option",["ordering"]]]],[11,"partial_cmp","","",103,[[["self"],["indextime"]],["option",["ordering"]]]],[11,"partial_cmp","","",105,[[["self"],["treeentry"]],["option",["ordering"]]]],[11,"partial_cmp","","",117,[[["self"],["status"]],["option",["ordering"]]]],[11,"lt","","",117,[[["self"],["status"]],["bool"]]],[11,"le","","",117,[[["self"],["status"]],["bool"]]],[11,"gt","","",117,[[["self"],["status"]],["bool"]]],[11,"ge","","",117,[[["self"],["status"]],["bool"]]],[11,"partial_cmp","","",118,[[["self"],["repositoryinitmode"]],["option",["ordering"]]]],[11,"lt","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"le","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"gt","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"ge","","",118,[[["self"],["repositoryinitmode"]],["bool"]]],[11,"partial_cmp","","",119,[[["self"],["submodulestatus"]],["option",["ordering"]]]],[11,"lt","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"le","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"gt","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"ge","","",119,[[["self"],["submodulestatus"]],["bool"]]],[11,"partial_cmp","","",120,[[["self"],["pathspecflags"]],["option",["ordering"]]]],[11,"lt","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"le","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"gt","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"ge","","",120,[[["self"],["pathspecflags"]],["bool"]]],[11,"partial_cmp","","",121,[[["self"],["checkoutnotificationtype"]],["option",["ordering"]]]],[11,"lt","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"le","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"gt","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"ge","","",121,[[["self"],["checkoutnotificationtype"]],["bool"]]],[11,"partial_cmp","","",122,[[["self"],["diffstatsformat"]],["option",["ordering"]]]],[11,"lt","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"le","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"gt","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"ge","","",122,[[["self"],["diffstatsformat"]],["bool"]]],[11,"partial_cmp","","",123,[[["self"],["stashapplyflags"]],["option",["ordering"]]]],[11,"lt","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"le","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"gt","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"ge","","",123,[[["self"],["stashapplyflags"]],["bool"]]],[11,"partial_cmp","","",124,[[["self"],["stashflags"]],["option",["ordering"]]]],[11,"lt","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"le","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"gt","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"ge","","",124,[[["self"],["stashflags"]],["bool"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","git2::oid_array","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","git2","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Hex-encode this Oid into a formatter.",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"deref","git2::oid_array","",143,N],[11,"deref","git2","",42,N],[11,"hash","","",108,N],[11,"hash","","",109,N],[11,"hash","","",110,N],[11,"hash","","",111,N],[11,"hash","","",112,N],[11,"hash","","",113,N],[11,"hash","","",114,N],[11,"hash","","",115,N],[11,"hash","","",116,N],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",117,N],[11,"hash","","",118,N],[11,"hash","","",119,N],[11,"hash","","",120,N],[11,"hash","","",121,N],[11,"hash","","",122,N],[11,"hash","","",123,N],[11,"hash","","",124,N],[11,"sub","","Returns the set difference of the two sets of flags.",108,[[["self"],["sort"]],["sort"]]],[11,"sub","","Returns the set difference of the two sets of flags.",109,[[["self"],["credentialtype"]],["credentialtype"]]],[11,"sub","","Returns the set difference of the two sets of flags.",110,[[["self"],["indexentryflag"]],["indexentryflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["self"],["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",112,[[["self"],["indexaddoption"]],["indexaddoption"]]],[11,"sub","","Returns the set difference of the two sets of flags.",113,[[["self"],["repositoryopenflags"]],["repositoryopenflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",114,[[["self"],["revparsemode"]],["revparsemode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",115,[[["self"],["mergeanalysis"]],["mergeanalysis"]]],[11,"sub","","Returns the set difference of the two sets of flags.",116,[[["self"],["mergepreference"]],["mergepreference"]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["self"],["status"]],["status"]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["self"],["repositoryinitmode"]],["repositoryinitmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["self"],["submodulestatus"]],["submodulestatus"]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["self"],["pathspecflags"]],["pathspecflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",121,[[["self"],["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"sub","","Returns the set difference of the two sets of flags.",122,[[["self"],["diffstatsformat"]],["diffstatsformat"]]],[11,"sub","","Returns the set difference of the two sets of flags.",123,[[["self"],["stashapplyflags"]],["stashapplyflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",124,[[["self"],["stashflags"]],["stashflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",108,[[["self"],["sort"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",109,[[["self"],["credentialtype"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",110,[[["self"],["indexentryflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,[[["self"],["indexentryextendedflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",112,[[["self"],["indexaddoption"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",113,[[["self"],["repositoryopenflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",114,[[["self"],["revparsemode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",115,[[["self"],["mergeanalysis"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",116,[[["self"],["mergepreference"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["self"],["status"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["self"],["repositoryinitmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["self"],["submodulestatus"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["self"],["pathspecflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",122,[[["self"],["diffstatsformat"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",123,[[["self"],["stashapplyflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",124,[[["self"],["stashflags"]]]],[11,"not","","Returns the complement of this set of flags.",108,[[["self"]],["sort"]]],[11,"not","","Returns the complement of this set of flags.",109,[[["self"]],["credentialtype"]]],[11,"not","","Returns the complement of this set of flags.",110,[[["self"]],["indexentryflag"]]],[11,"not","","Returns the complement of this set of flags.",111,[[["self"]],["indexentryextendedflag"]]],[11,"not","","Returns the complement of this set of flags.",112,[[["self"]],["indexaddoption"]]],[11,"not","","Returns the complement of this set of flags.",113,[[["self"]],["repositoryopenflags"]]],[11,"not","","Returns the complement of this set of flags.",114,[[["self"]],["revparsemode"]]],[11,"not","","Returns the complement of this set of flags.",115,[[["self"]],["mergeanalysis"]]],[11,"not","","Returns the complement of this set of flags.",116,[[["self"]],["mergepreference"]]],[11,"not","","Returns the complement of this set of flags.",117,[[["self"]],["status"]]],[11,"not","","Returns the complement of this set of flags.",118,[[["self"]],["repositoryinitmode"]]],[11,"not","","Returns the complement of this set of flags.",119,[[["self"]],["submodulestatus"]]],[11,"not","","Returns the complement of this set of flags.",120,[[["self"]],["pathspecflags"]]],[11,"not","","Returns the complement of this set of flags.",121,[[["self"]],["checkoutnotificationtype"]]],[11,"not","","Returns the complement of this set of flags.",122,[[["self"]],["diffstatsformat"]]],[11,"not","","Returns the complement of this set of flags.",123,[[["self"]],["stashapplyflags"]]],[11,"not","","Returns the complement of this set of flags.",124,[[["self"]],["stashflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",108,[[["self"],["sort"]],["sort"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",109,[[["self"],["credentialtype"]],["credentialtype"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",110,[[["self"],["indexentryflag"]],["indexentryflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["self"],["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",112,[[["self"],["indexaddoption"]],["indexaddoption"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",113,[[["self"],["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",114,[[["self"],["revparsemode"]],["revparsemode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",115,[[["self"],["mergeanalysis"]],["mergeanalysis"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",116,[[["self"],["mergepreference"]],["mergepreference"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["self"],["status"]],["status"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["self"],["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["self"],["submodulestatus"]],["submodulestatus"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["self"],["pathspecflags"]],["pathspecflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",121,[[["self"],["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",122,[[["self"],["diffstatsformat"]],["diffstatsformat"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",123,[[["self"],["stashapplyflags"]],["stashapplyflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",124,[[["self"],["stashflags"]],["stashflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",108,[[["self"],["sort"]],["sort"]]],[11,"bitor","","Returns the union of the two sets of flags.",109,[[["self"],["credentialtype"]],["credentialtype"]]],[11,"bitor","","Returns the union of the two sets of flags.",110,[[["self"],["indexentryflag"]],["indexentryflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["self"],["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",112,[[["self"],["indexaddoption"]],["indexaddoption"]]],[11,"bitor","","Returns the union of the two sets of flags.",113,[[["self"],["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",114,[[["self"],["revparsemode"]],["revparsemode"]]],[11,"bitor","","Returns the union of the two sets of flags.",115,[[["self"],["mergeanalysis"]],["mergeanalysis"]]],[11,"bitor","","Returns the union of the two sets of flags.",116,[[["self"],["mergepreference"]],["mergepreference"]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["self"],["status"]],["status"]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["self"],["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["self"],["submodulestatus"]],["submodulestatus"]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["self"],["pathspecflags"]],["pathspecflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",121,[[["self"],["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitor","","Returns the union of the two sets of flags.",122,[[["self"],["diffstatsformat"]],["diffstatsformat"]]],[11,"bitor","","Returns the union of the two sets of flags.",123,[[["self"],["stashapplyflags"]],["stashapplyflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",124,[[["self"],["stashflags"]],["stashflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",108,[[["self"],["sort"]],["sort"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",109,[[["self"],["credentialtype"]],["credentialtype"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",110,[[["self"],["indexentryflag"]],["indexentryflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",111,[[["self"],["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",112,[[["self"],["indexaddoption"]],["indexaddoption"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",113,[[["self"],["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",114,[[["self"],["revparsemode"]],["revparsemode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",115,[[["self"],["mergeanalysis"]],["mergeanalysis"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",116,[[["self"],["mergepreference"]],["mergepreference"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",117,[[["self"],["status"]],["status"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",118,[[["self"],["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",119,[[["self"],["submodulestatus"]],["submodulestatus"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",120,[[["self"],["pathspecflags"]],["pathspecflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",121,[[["self"],["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",122,[[["self"],["diffstatsformat"]],["diffstatsformat"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",123,[[["self"],["stashapplyflags"]],["stashapplyflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",124,[[["self"],["stashflags"]],["stashflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",108,[[["self"],["sort"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",109,[[["self"],["credentialtype"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",110,[[["self"],["indexentryflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,[[["self"],["indexentryextendedflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",112,[[["self"],["indexaddoption"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",113,[[["self"],["repositoryopenflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",114,[[["self"],["revparsemode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",115,[[["self"],["mergeanalysis"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",116,[[["self"],["mergepreference"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["self"],["status"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["self"],["repositoryinitmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["self"],["submodulestatus"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["self"],["pathspecflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",122,[[["self"],["diffstatsformat"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",123,[[["self"],["stashapplyflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",124,[[["self"],["stashflags"]]]],[11,"bitor_assign","","Adds the set of flags.",108,[[["self"],["sort"]]]],[11,"bitor_assign","","Adds the set of flags.",109,[[["self"],["credentialtype"]]]],[11,"bitor_assign","","Adds the set of flags.",110,[[["self"],["indexentryflag"]]]],[11,"bitor_assign","","Adds the set of flags.",111,[[["self"],["indexentryextendedflag"]]]],[11,"bitor_assign","","Adds the set of flags.",112,[[["self"],["indexaddoption"]]]],[11,"bitor_assign","","Adds the set of flags.",113,[[["self"],["repositoryopenflags"]]]],[11,"bitor_assign","","Adds the set of flags.",114,[[["self"],["revparsemode"]]]],[11,"bitor_assign","","Adds the set of flags.",115,[[["self"],["mergeanalysis"]]]],[11,"bitor_assign","","Adds the set of flags.",116,[[["self"],["mergepreference"]]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["self"],["status"]]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["self"],["repositoryinitmode"]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["self"],["submodulestatus"]]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["self"],["pathspecflags"]]]],[11,"bitor_assign","","Adds the set of flags.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"bitor_assign","","Adds the set of flags.",122,[[["self"],["diffstatsformat"]]]],[11,"bitor_assign","","Adds the set of flags.",123,[[["self"],["stashapplyflags"]]]],[11,"bitor_assign","","Adds the set of flags.",124,[[["self"],["stashflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",108,[[["self"],["sort"]]]],[11,"bitxor_assign","","Toggles the set of flags.",109,[[["self"],["credentialtype"]]]],[11,"bitxor_assign","","Toggles the set of flags.",110,[[["self"],["indexentryflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",111,[[["self"],["indexentryextendedflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",112,[[["self"],["indexaddoption"]]]],[11,"bitxor_assign","","Toggles the set of flags.",113,[[["self"],["repositoryopenflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",114,[[["self"],["revparsemode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",115,[[["self"],["mergeanalysis"]]]],[11,"bitxor_assign","","Toggles the set of flags.",116,[[["self"],["mergepreference"]]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["self"],["status"]]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["self"],["repositoryinitmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["self"],["submodulestatus"]]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["self"],["pathspecflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",121,[[["self"],["checkoutnotificationtype"]]]],[11,"bitxor_assign","","Toggles the set of flags.",122,[[["self"],["diffstatsformat"]]]],[11,"bitxor_assign","","Toggles the set of flags.",123,[[["self"],["stashapplyflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",124,[[["self"],["stashflags"]]]],[11,"deref_mut","","",42,N],[11,"from_iter","","",108,[[["t"]],["sort"]]],[11,"from_iter","","",109,[[["t"]],["credentialtype"]]],[11,"from_iter","","",110,[[["t"]],["indexentryflag"]]],[11,"from_iter","","",111,[[["t"]],["indexentryextendedflag"]]],[11,"from_iter","","",112,[[["t"]],["indexaddoption"]]],[11,"from_iter","","",113,[[["t"]],["repositoryopenflags"]]],[11,"from_iter","","",114,[[["t"]],["revparsemode"]]],[11,"from_iter","","",115,[[["t"]],["mergeanalysis"]]],[11,"from_iter","","",116,[[["t"]],["mergepreference"]]],[11,"from_iter","","",117,[[["t"]],["status"]]],[11,"from_iter","","",118,[[["t"]],["repositoryinitmode"]]],[11,"from_iter","","",119,[[["t"]],["submodulestatus"]]],[11,"from_iter","","",120,[[["t"]],["pathspecflags"]]],[11,"from_iter","","",121,[[["t"]],["checkoutnotificationtype"]]],[11,"from_iter","","",122,[[["t"]],["diffstatsformat"]]],[11,"from_iter","","",123,[[["t"]],["stashapplyflags"]]],[11,"from_iter","","",124,[[["t"]],["stashflags"]]],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",69,[[["str"]],["result",["oid","error"]]]],[11,"read","","",140,N],[11,"write","","",39,N],[11,"flush","","",39,[[["self"]],["result"]]],[11,"write","","",68,N],[11,"flush","","",68,[[["self"]],["result"]]],[11,"description","","",60,[[["self"]],["str"]]]],"paths":[[3,"CredentialHelper"],[3,"IndexConflict"],[3,"IndexEntry"],[4,"DiffBinaryKind"],[4,"PackBuilderStage"],[4,"RebaseOperationType"],[4,"StatusShow"],[4,"TreeWalkMode"],[4,"TreeWalkResult"],[4,"ErrorCode"],[4,"ErrorClass"],[4,"RepositoryState"],[4,"Direction"],[4,"ResetType"],[4,"ObjectType"],[4,"ReferenceType"],[4,"BranchType"],[4,"ConfigLevel"],[4,"FileFavor"],[4,"Delta"],[4,"SubmoduleIgnore"],[4,"DiffFormat"],[4,"AutotagOption"],[4,"FetchPrune"],[4,"StashApplyProgress"],[4,"CloneLocal"],[3,"RepoBuilder"],[3,"CheckoutBuilder"],[3,"Cert"],[3,"CertHostkey"],[3,"CertX509"],[3,"StringArray"],[4,"Service"],[8,"SmartSubtransport"],[3,"Transport"],[3,"Blame"],[3,"BlameHunk"],[3,"BlameOptions"],[3,"Blob"],[3,"BlobWriter"],[3,"Branch"],[3,"Branches"],[3,"Buf"],[3,"Commit"],[3,"Config"],[3,"ConfigEntry"],[3,"Cred"],[3,"Describe"],[3,"DescribeFormatOptions"],[3,"DescribeOptions"],[3,"Diff"],[3,"DiffDelta"],[3,"DiffFile"],[3,"DiffOptions"],[3,"DiffLine"],[3,"DiffHunk"],[3,"DiffStats"],[3,"DiffBinary"],[3,"DiffBinaryFile"],[3,"DiffFindOptions"],[3,"Error"],[3,"Index"],[3,"AnnotatedCommit"],[3,"MergeOptions"],[3,"Note"],[3,"Object"],[3,"Odb"],[3,"OdbObject"],[3,"OdbWriter"],[3,"Oid"],[3,"PackBuilder"],[3,"Pathspec"],[3,"PathspecMatchList"],[3,"Patch"],[3,"ProxyOptions"],[3,"RebaseOptions"],[3,"Rebase"],[3,"RebaseOperation"],[3,"Reference"],[3,"References"],[3,"Reflog"],[3,"ReflogEntry"],[3,"Refspec"],[3,"Remote"],[3,"RemoteHead"],[3,"FetchOptions"],[3,"PushOptions"],[3,"RemoteConnection"],[3,"RemoteCallbacks"],[3,"Progress"],[3,"Repository"],[3,"RepositoryInitOptions"],[3,"Revspec"],[3,"Revwalk"],[3,"Signature"],[3,"StatusOptions"],[3,"Statuses"],[3,"StatusEntry"],[3,"Submodule"],[3,"SubmoduleUpdateOptions"],[3,"StashApplyOptions"],[3,"Tag"],[3,"Time"],[3,"IndexTime"],[3,"Tree"],[3,"TreeEntry"],[3,"TreeBuilder"],[8,"IntoCString"],[3,"Sort"],[3,"CredentialType"],[3,"IndexEntryFlag"],[3,"IndexEntryExtendedFlag"],[3,"IndexAddOption"],[3,"RepositoryOpenFlags"],[3,"RevparseMode"],[3,"MergeAnalysis"],[3,"MergePreference"],[3,"Status"],[3,"RepositoryInitMode"],[3,"SubmoduleStatus"],[3,"PathspecFlags"],[3,"CheckoutNotificationType"],[3,"DiffStatsFormat"],[3,"StashApplyFlags"],[3,"StashFlags"],[3,"BlameIter"],[3,"Parents"],[3,"ConfigEntries"],[3,"Deltas"],[3,"IndexConflicts"],[3,"IndexEntries"],[3,"Notes"],[3,"PathspecFailedEntries"],[3,"PathspecDiffEntries"],[3,"PathspecEntries"],[3,"ReferenceNames"],[3,"ReflogIter"],[3,"Refspecs"],[3,"StatusIter"],[3,"TreeIter"],[3,"OdbReader"],[3,"Iter"],[3,"IterBytes"],[3,"OidArray"]]};
searchIndex["git2_curl"]={"doc":"A crate for using libcurl as a backend for HTTP git…","items":[[5,"register","git2_curl","Register the libcurl backend for HTTP requests made by…",N,[[["easy"]]]]],"paths":[]};
searchIndex["libgit2_sys"]={"doc":"","items":[[3,"git_revspec","libgit2_sys","",N,N],[12,"from","","",0,N],[12,"to","","",0,N],[12,"flags","","",0,N],[3,"git_error","","",N,N],[12,"message","","",1,N],[12,"klass","","",1,N],[3,"git_oid","","",N,N],[12,"id","","",2,N],[3,"git_strarray","","",N,N],[12,"strings","","",3,N],[12,"count","","",3,N],[3,"git_oidarray","","",N,N],[12,"ids","","",4,N],[12,"count","","",4,N],[3,"git_signature","","",N,N],[12,"name","","",5,N],[12,"email","","",5,N],[12,"when","","",5,N],[3,"git_time","","",N,N],[12,"time","","",6,N],[12,"offset","","",6,N],[12,"sign","","",6,N],[3,"git_clone_options","","",N,N],[12,"version","","",7,N],[12,"checkout_opts","","",7,N],[12,"fetch_opts","","",7,N],[12,"bare","","",7,N],[12,"local","","",7,N],[12,"checkout_branch","","",7,N],[12,"repository_cb","","",7,N],[12,"repository_cb_payload","","",7,N],[12,"remote_cb","","",7,N],[12,"remote_cb_payload","","",7,N],[3,"git_checkout_options","","",N,N],[12,"version","","",8,N],[12,"checkout_strategy","","",8,N],[12,"disable_filters","","",8,N],[12,"dir_mode","","",8,N],[12,"file_mode","","",8,N],[12,"file_open_flags","","",8,N],[12,"notify_flags","","",8,N],[12,"notify_cb","","",8,N],[12,"notify_payload","","",8,N],[12,"progress_cb","","",8,N],[12,"progress_payload","","",8,N],[12,"paths","","",8,N],[12,"baseline","","",8,N],[12,"baseline_index","","",8,N],[12,"target_directory","","",8,N],[12,"ancestor_label","","",8,N],[12,"our_label","","",8,N],[12,"their_label","","",8,N],[12,"perfdata_cb","","",8,N],[12,"perfdata_payload","","",8,N],[3,"git_checkout_perfdata","","",N,N],[12,"mkdir_calls","","",9,N],[12,"stat_calls","","",9,N],[12,"chmod_calls","","",9,N],[3,"git_remote_callbacks","","",N,N],[12,"version","","",10,N],[12,"sideband_progress","","",10,N],[12,"completion","","",10,N],[12,"credentials","","",10,N],[12,"certificate_check","","",10,N],[12,"transfer_progress","","",10,N],[12,"update_tips","","",10,N],[12,"pack_progress","","",10,N],[12,"push_transfer_progress","","",10,N],[12,"push_update_reference","","",10,N],[12,"push_negotiation","","",10,N],[12,"transport","","",10,N],[12,"payload","","",10,N],[3,"git_fetch_options","","",N,N],[12,"version","","",11,N],[12,"callbacks","","",11,N],[12,"prune","","",11,N],[12,"update_fetchhead","","",11,N],[12,"download_tags","","",11,N],[12,"proxy_opts","","",11,N],[12,"custom_headers","","",11,N],[3,"git_push_update","","",N,N],[12,"src_refname","","",12,N],[12,"dst_refname","","",12,N],[12,"src","","",12,N],[12,"dst","","",12,N],[3,"git_cert","","",N,N],[12,"cert_type","","",13,N],[3,"git_cert_hostkey","","",N,N],[12,"parent","","",14,N],[12,"kind","","",14,N],[12,"hash_md5","","",14,N],[12,"hash_sha1","","",14,N],[3,"git_cert_x509","","",N,N],[12,"parent","","",15,N],[12,"data","","",15,N],[12,"len","","",15,N],[3,"git_transfer_progress","","",N,N],[12,"total_objects","","",16,N],[12,"indexed_objects","","",16,N],[12,"received_objects","","",16,N],[12,"local_objects","","",16,N],[12,"total_deltas","","",16,N],[12,"indexed_deltas","","",16,N],[12,"received_bytes","","",16,N],[3,"git_diff_file","","",N,N],[12,"id","","",17,N],[12,"path","","",17,N],[12,"size","","",17,N],[12,"flags","","",17,N],[12,"mode","","",17,N],[3,"git_status_options","","",N,N],[12,"version","","",18,N],[12,"show","","",18,N],[12,"flags","","",18,N],[12,"pathspec","","",18,N],[12,"baseline","","",18,N],[3,"git_diff_delta","","",N,N],[12,"status","","",19,N],[12,"flags","","",19,N],[12,"similarity","","",19,N],[12,"nfiles","","",19,N],[12,"old_file","","",19,N],[12,"new_file","","",19,N],[3,"git_status_entry","","",N,N],[12,"status","","",20,N],[12,"head_to_index","","",20,N],[12,"index_to_workdir","","",20,N],[3,"git_buf","","",N,N],[12,"ptr","","",21,N],[12,"asize","","",21,N],[12,"size","","",21,N],[3,"git_blame_options","","",N,N],[12,"version","","",22,N],[12,"flags","","",22,N],[12,"min_match_characters","","",22,N],[12,"newest_commit","","",22,N],[12,"oldest_commit","","",22,N],[12,"min_line","","",22,N],[12,"max_line","","",22,N],[3,"git_blame_hunk","","",N,N],[12,"lines_in_hunk","","",23,N],[12,"final_commit_id","","",23,N],[12,"final_start_line_number","","",23,N],[12,"final_signature","","",23,N],[12,"orig_commit_id","","",23,N],[12,"orig_path","","",23,N],[12,"orig_start_line_number","","",23,N],[12,"orig_signature","","",23,N],[12,"boundary","","",23,N],[3,"git_index_entry","","",N,N],[12,"ctime","","",24,N],[12,"mtime","","",24,N],[12,"dev","","",24,N],[12,"ino","","",24,N],[12,"mode","","",24,N],[12,"uid","","",24,N],[12,"gid","","",24,N],[12,"file_size","","",24,N],[12,"id","","",24,N],[12,"flags","","",24,N],[12,"flags_extended","","",24,N],[12,"path","","",24,N],[3,"git_index_time","","",N,N],[12,"seconds","","",25,N],[12,"nanoseconds","","",25,N],[3,"git_config_entry","","",N,N],[12,"name","","",26,N],[12,"value","","",26,N],[12,"include_depth","","",26,N],[12,"level","","",26,N],[12,"free","","",26,N],[12,"payload","","",26,N],[3,"git_submodule_update_options","","",N,N],[12,"version","","",27,N],[12,"checkout_opts","","",27,N],[12,"fetch_opts","","",27,N],[12,"allow_fetch","","",27,N],[3,"git_writestream","","",N,N],[12,"write","","",28,N],[12,"close","","",28,N],[12,"free","","",28,N],[3,"git_cred","","",N,N],[12,"credtype","","",29,N],[12,"free","","",29,N],[3,"git_push_options","","",N,N],[12,"version","","",30,N],[12,"pb_parallelism","","",30,N],[12,"callbacks","","",30,N],[12,"proxy_opts","","",30,N],[12,"custom_headers","","",30,N],[3,"git_repository_init_options","","",N,N],[12,"version","","",31,N],[12,"flags","","",31,N],[12,"mode","","",31,N],[12,"workdir_path","","",31,N],[12,"description","","",31,N],[12,"template_path","","",31,N],[12,"initial_head","","",31,N],[12,"origin_url","","",31,N],[3,"git_remote_head","","",N,N],[12,"local","","",32,N],[12,"oid","","",32,N],[12,"loid","","",32,N],[12,"name","","",32,N],[12,"symref_target","","",32,N],[3,"git_diff_hunk","","",N,N],[12,"old_start","","",33,N],[12,"old_lines","","",33,N],[12,"new_start","","",33,N],[12,"new_lines","","",33,N],[12,"header_len","","",33,N],[12,"header","","",33,N],[3,"git_diff_line","","",N,N],[12,"origin","","",34,N],[12,"old_lineno","","",34,N],[12,"new_lineno","","",34,N],[12,"num_lines","","",34,N],[12,"content_len","","",34,N],[12,"content_offset","","",34,N],[12,"content","","",34,N],[3,"git_diff_options","","",N,N],[12,"version","","",35,N],[12,"flags","","",35,N],[12,"ignore_submodules","","",35,N],[12,"pathspec","","",35,N],[12,"notify_cb","","",35,N],[12,"progress_cb","","",35,N],[12,"payload","","",35,N],[12,"context_lines","","",35,N],[12,"interhunk_lines","","",35,N],[12,"id_abbrev","","",35,N],[12,"max_size","","",35,N],[12,"old_prefix","","",35,N],[12,"new_prefix","","",35,N],[3,"git_diff_find_options","","",N,N],[12,"version","","",36,N],[12,"flags","","",36,N],[12,"rename_threshold","","",36,N],[12,"rename_from_rewrite_threshold","","",36,N],[12,"copy_threshold","","",36,N],[12,"break_rewrite_threshold","","",36,N],[12,"rename_limit","","",36,N],[12,"metric","","",36,N],[3,"git_diff_similarity_metric","","",N,N],[12,"file_signature","","",37,N],[12,"buffer_signature","","",37,N],[12,"free_signature","","",37,N],[12,"similarity","","",37,N],[12,"payload","","",37,N],[3,"git_diff_binary","","",N,N],[12,"contains_data","","",38,N],[12,"old_file","","",38,N],[12,"new_file","","",38,N],[3,"git_diff_binary_file","","",N,N],[12,"kind","","",39,N],[12,"data","","",39,N],[12,"datalen","","",39,N],[12,"inflatedlen","","",39,N],[3,"git_merge_options","","",N,N],[12,"version","","",40,N],[12,"flags","","",40,N],[12,"rename_threshold","","",40,N],[12,"target_limit","","",40,N],[12,"metric","","",40,N],[12,"recursion_limit","","",40,N],[12,"default_driver","","",40,N],[12,"file_favor","","",40,N],[12,"file_flags","","",40,N],[3,"git_transport","","",N,N],[12,"version","","",41,N],[12,"set_callbacks","","",41,N],[12,"set_custom_headers","","",41,N],[12,"connect","","",41,N],[12,"ls","","",41,N],[12,"push","","",41,N],[12,"negotiate_fetch","","",41,N],[12,"download_pack","","",41,N],[12,"is_connected","","",41,N],[12,"read_flags","","",41,N],[12,"cancel","","",41,N],[12,"close","","",41,N],[12,"free","","",41,N],[3,"git_odb_backend","","",N,N],[12,"version","","",42,N],[12,"odb","","",42,N],[12,"read","","",42,N],[12,"read_prefix","","",42,N],[12,"read_header","","",42,N],[12,"write","","",42,N],[12,"writestream","","",42,N],[12,"readstream","","",42,N],[12,"exists","","",42,N],[12,"exists_prefix","","",42,N],[12,"refresh","","",42,N],[12,"foreach","","",42,N],[12,"writepack","","",42,N],[12,"freshen","","",42,N],[12,"free","","",42,N],[3,"git_refdb_backend","","",N,N],[12,"version","","",43,N],[12,"exists","","",43,N],[12,"lookup","","",43,N],[12,"iterator","","",43,N],[12,"write","","",43,N],[12,"rename","","",43,N],[12,"del","","",43,N],[12,"compress","","",43,N],[12,"has_log","","",43,N],[12,"ensure_log","","",43,N],[12,"free","","",43,N],[12,"reflog_read","","",43,N],[12,"reflog_write","","",43,N],[12,"reflog_rename","","",43,N],[12,"reflog_delete","","",43,N],[12,"lock","","",43,N],[12,"unlock","","",43,N],[3,"git_proxy_options","","",N,N],[12,"version","","",44,N],[12,"kind","","",44,N],[12,"url","","",44,N],[12,"credentials","","",44,N],[12,"certificate_check","","",44,N],[12,"payload","","",44,N],[3,"git_smart_subtransport_stream","","",N,N],[12,"subtransport","","",45,N],[12,"read","","",45,N],[12,"write","","",45,N],[12,"free","","",45,N],[3,"git_smart_subtransport","","",N,N],[12,"action","","",46,N],[12,"close","","",46,N],[12,"free","","",46,N],[3,"git_smart_subtransport_definition","","",N,N],[12,"callback","","",47,N],[12,"rpc","","",47,N],[12,"param","","",47,N],[3,"git_describe_options","","",N,N],[12,"version","","",48,N],[12,"max_candidates_tags","","",48,N],[12,"describe_strategy","","",48,N],[12,"pattern","","",48,N],[12,"only_follow_first_parent","","",48,N],[12,"show_commit_oid_as_fallback","","",48,N],[3,"git_describe_format_options","","",N,N],[12,"version","","",49,N],[12,"abbreviated_size","","",49,N],[12,"always_use_long_format","","",49,N],[12,"dirty_suffix","","",49,N],[3,"git_stash_apply_options","","",N,N],[12,"version","","",50,N],[12,"flags","","",50,N],[12,"checkout_options","","",50,N],[12,"progress_cb","","",50,N],[12,"progress_payload","","",50,N],[3,"git_rebase_options","","",N,N],[12,"version","","",51,N],[12,"quiet","","",51,N],[12,"inmemory","","",51,N],[12,"rewrite_notes_ref","","",51,N],[12,"merge_options","","",51,N],[12,"checkout_options","","",51,N],[3,"git_rebase_operation","","",N,N],[12,"kind","","",52,N],[12,"id","","",52,N],[12,"exec","","",52,N],[4,"git_blob","","",N,N],[4,"git_branch_iterator","","",N,N],[4,"git_blame","","",N,N],[4,"git_commit","","",N,N],[4,"git_config","","",N,N],[4,"git_config_iterator","","",N,N],[4,"git_index","","",N,N],[4,"git_index_conflict_iterator","","",N,N],[4,"git_object","","",N,N],[4,"git_reference","","",N,N],[4,"git_reference_iterator","","",N,N],[4,"git_annotated_commit","","",N,N],[4,"git_refdb","","",N,N],[4,"git_refspec","","",N,N],[4,"git_remote","","",N,N],[4,"git_repository","","",N,N],[4,"git_revwalk","","",N,N],[4,"git_submodule","","",N,N],[4,"git_tag","","",N,N],[4,"git_tree","","",N,N],[4,"git_tree_entry","","",N,N],[4,"git_treebuilder","","",N,N],[4,"git_push","","",N,N],[4,"git_note","","",N,N],[4,"git_note_iterator","","",N,N],[4,"git_status_list","","",N,N],[4,"git_pathspec","","",N,N],[4,"git_pathspec_match_list","","",N,N],[4,"git_diff","","",N,N],[4,"git_diff_stats","","",N,N],[4,"git_patch","","",N,N],[4,"git_rebase","","",N,N],[4,"git_reflog","","",N,N],[4,"git_reflog_entry","","",N,N],[4,"git_describe_result","","",N,N],[4,"git_packbuilder","","",N,N],[4,"git_odb","","",N,N],[4,"git_odb_stream","","",N,N],[4,"git_odb_object","","",N,N],[4,"git_odb_writepack","","",N,N],[4,"git_worktree","","",N,N],[4,"LIBSSH2_SESSION","","",N,N],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT","","",N,N],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","","",N,N],[5,"init","","",N,[[]]],[5,"git_libgit2_init","","",N,N],[5,"git_libgit2_shutdown","","",N,N],[5,"git_repository_new","","",N,N],[5,"git_repository_free","","",N,N],[5,"git_repository_open","","",N,N],[5,"git_repository_open_bare","","",N,N],[5,"git_repository_open_ext","","",N,N],[5,"git_repository_open_from_worktree","","",N,N],[5,"git_repository_wrap_odb","","",N,N],[5,"git_repository_init","","",N,N],[5,"git_repository_init_ext","","",N,N],[5,"git_repository_init_init_options","","",N,N],[5,"git_repository_get_namespace","","",N,N],[5,"git_repository_set_namespace","","",N,N],[5,"git_repository_head","","",N,N],[5,"git_repository_set_head","","",N,N],[5,"git_repository_head_detached","","",N,N],[5,"git_repository_set_head_detached","","",N,N],[5,"git_repository_set_bare","","",N,N],[5,"git_repository_is_worktree","","",N,N],[5,"git_repository_is_bare","","",N,N],[5,"git_repository_is_empty","","",N,N],[5,"git_repository_is_shallow","","",N,N],[5,"git_repository_path","","",N,N],[5,"git_repository_state","","",N,N],[5,"git_repository_workdir","","",N,N],[5,"git_repository_set_workdir","","",N,N],[5,"git_repository_index","","",N,N],[5,"git_repository_set_index","","",N,N],[5,"git_repository_message","","",N,N],[5,"git_repository_message_remove","","",N,N],[5,"git_repository_config","","",N,N],[5,"git_repository_set_config","","",N,N],[5,"git_repository_config_snapshot","","",N,N],[5,"git_repository_discover","","",N,N],[5,"git_repository_set_odb","","",N,N],[5,"git_repository_refdb","","",N,N],[5,"git_repository_set_refdb","","",N,N],[5,"git_repository_reinit_filesystem","","",N,N],[5,"git_ignore_add_rule","","",N,N],[5,"git_ignore_clear_internal_rules","","",N,N],[5,"git_ignore_path_is_ignored","","",N,N],[5,"git_revparse","","",N,N],[5,"git_revparse_single","","",N,N],[5,"git_revparse_ext","","",N,N],[5,"git_object_dup","","",N,N],[5,"git_object_id","","",N,N],[5,"git_object_free","","",N,N],[5,"git_object_lookup","","",N,N],[5,"git_object_type","","",N,N],[5,"git_object_peel","","",N,N],[5,"git_object_short_id","","",N,N],[5,"git_object_type2string","","",N,N],[5,"git_object_string2type","","",N,N],[5,"git_object_typeisloose","","",N,N],[5,"git_oid_fromraw","","",N,N],[5,"git_oid_fromstrn","","",N,N],[5,"git_oid_tostr","","",N,N],[5,"git_oid_cmp","","",N,N],[5,"git_oid_equal","","",N,N],[5,"git_oid_streq","","",N,N],[5,"git_oid_iszero","","",N,N],[5,"giterr_last","","",N,N],[5,"giterr_clear","","",N,N],[5,"giterr_set_str","","",N,N],[5,"git_remote_create","","",N,N],[5,"git_remote_lookup","","",N,N],[5,"git_remote_create_anonymous","","",N,N],[5,"git_remote_delete","","",N,N],[5,"git_remote_free","","",N,N],[5,"git_remote_name","","",N,N],[5,"git_remote_pushurl","","",N,N],[5,"git_remote_refspec_count","","",N,N],[5,"git_remote_url","","",N,N],[5,"git_remote_connect","","",N,N],[5,"git_remote_connected","","",N,N],[5,"git_remote_disconnect","","",N,N],[5,"git_remote_add_fetch","","",N,N],[5,"git_remote_add_push","","",N,N],[5,"git_remote_download","","",N,N],[5,"git_remote_stop","","",N,N],[5,"git_remote_dup","","",N,N],[5,"git_remote_get_fetch_refspecs","","",N,N],[5,"git_remote_get_push_refspecs","","",N,N],[5,"git_remote_get_refspec","","",N,N],[5,"git_remote_is_valid_name","","",N,N],[5,"git_remote_list","","",N,N],[5,"git_remote_rename","","",N,N],[5,"git_remote_fetch","","",N,N],[5,"git_remote_push","","",N,N],[5,"git_remote_update_tips","","",N,N],[5,"git_remote_set_url","","",N,N],[5,"git_remote_set_pushurl","","",N,N],[5,"git_remote_init_callbacks","","",N,N],[5,"git_fetch_init_options","","",N,N],[5,"git_remote_stats","","",N,N],[5,"git_remote_ls","","",N,N],[5,"git_remote_set_autotag","","",N,N],[5,"git_remote_prune","","",N,N],[5,"git_refspec_direction","","",N,N],[5,"git_refspec_dst","","",N,N],[5,"git_refspec_dst_matches","","",N,N],[5,"git_refspec_src","","",N,N],[5,"git_refspec_src_matches","","",N,N],[5,"git_refspec_force","","",N,N],[5,"git_refspec_string","","",N,N],[5,"git_strarray_free","","",N,N],[5,"git_oidarray_free","","",N,N],[5,"git_signature_default","","",N,N],[5,"git_signature_free","","",N,N],[5,"git_signature_new","","",N,N],[5,"git_signature_now","","",N,N],[5,"git_signature_dup","","",N,N],[5,"git_status_list_new","","",N,N],[5,"git_status_list_entrycount","","",N,N],[5,"git_status_byindex","","",N,N],[5,"git_status_list_free","","",N,N],[5,"git_status_init_options","","",N,N],[5,"git_status_file","","",N,N],[5,"git_status_should_ignore","","",N,N],[5,"git_clone","","",N,N],[5,"git_clone_init_options","","",N,N],[5,"git_reset","","",N,N],[5,"git_reset_default","","",N,N],[5,"git_reference_cmp","","",N,N],[5,"git_reference_delete","","",N,N],[5,"git_reference_free","","",N,N],[5,"git_reference_is_branch","","",N,N],[5,"git_reference_is_note","","",N,N],[5,"git_reference_is_remote","","",N,N],[5,"git_reference_is_tag","","",N,N],[5,"git_reference_is_valid_name","","",N,N],[5,"git_reference_lookup","","",N,N],[5,"git_reference_name","","",N,N],[5,"git_reference_name_to_id","","",N,N],[5,"git_reference_peel","","",N,N],[5,"git_reference_rename","","",N,N],[5,"git_reference_resolve","","",N,N],[5,"git_reference_shorthand","","",N,N],[5,"git_reference_symbolic_target","","",N,N],[5,"git_reference_target","","",N,N],[5,"git_reference_target_peel","","",N,N],[5,"git_reference_set_target","","",N,N],[5,"git_reference_type","","",N,N],[5,"git_reference_iterator_new","","",N,N],[5,"git_reference_iterator_glob_new","","",N,N],[5,"git_reference_iterator_free","","",N,N],[5,"git_reference_next","","",N,N],[5,"git_reference_next_name","","",N,N],[5,"git_reference_create","","",N,N],[5,"git_reference_symbolic_create","","",N,N],[5,"git_reference_create_matching","","",N,N],[5,"git_reference_symbolic_create_matching","","",N,N],[5,"git_reference_has_log","","",N,N],[5,"git_reference_ensure_log","","",N,N],[5,"git_stash_save","","",N,N],[5,"git_stash_apply_init_options","","",N,N],[5,"git_stash_apply","","",N,N],[5,"git_stash_foreach","","",N,N],[5,"git_stash_drop","","",N,N],[5,"git_stash_pop","","",N,N],[5,"git_submodule_add_finalize","","",N,N],[5,"git_submodule_add_setup","","",N,N],[5,"git_submodule_add_to_index","","",N,N],[5,"git_submodule_branch","","",N,N],[5,"git_submodule_foreach","","",N,N],[5,"git_submodule_free","","",N,N],[5,"git_submodule_head_id","","",N,N],[5,"git_submodule_index_id","","",N,N],[5,"git_submodule_init","","",N,N],[5,"git_submodule_location","","",N,N],[5,"git_submodule_lookup","","",N,N],[5,"git_submodule_name","","",N,N],[5,"git_submodule_open","","",N,N],[5,"git_submodule_path","","",N,N],[5,"git_submodule_reload","","",N,N],[5,"git_submodule_set_ignore","","",N,N],[5,"git_submodule_set_update","","",N,N],[5,"git_submodule_set_url","","",N,N],[5,"git_submodule_sync","","",N,N],[5,"git_submodule_update_strategy","","",N,N],[5,"git_submodule_update","","",N,N],[5,"git_submodule_update_init_options","","",N,N],[5,"git_submodule_url","","",N,N],[5,"git_submodule_wd_id","","",N,N],[5,"git_submodule_status","","",N,N],[5,"git_submodule_set_branch","","",N,N],[5,"git_blob_free","","",N,N],[5,"git_blob_id","","",N,N],[5,"git_blob_is_binary","","",N,N],[5,"git_blob_lookup","","",N,N],[5,"git_blob_lookup_prefix","","",N,N],[5,"git_blob_rawcontent","","",N,N],[5,"git_blob_rawsize","","",N,N],[5,"git_blob_create_frombuffer","","",N,N],[5,"git_blob_create_fromdisk","","",N,N],[5,"git_blob_create_fromworkdir","","",N,N],[5,"git_blob_create_fromstream","","",N,N],[5,"git_blob_create_fromstream_commit","","",N,N],[5,"git_tree_entry_byid","","",N,N],[5,"git_tree_entry_byindex","","",N,N],[5,"git_tree_entry_byname","","",N,N],[5,"git_tree_entry_bypath","","",N,N],[5,"git_tree_entry_cmp","","",N,N],[5,"git_tree_entry_dup","","",N,N],[5,"git_tree_entry_filemode","","",N,N],[5,"git_tree_entry_filemode_raw","","",N,N],[5,"git_tree_entry_free","","",N,N],[5,"git_tree_entry_id","","",N,N],[5,"git_tree_entry_name","","",N,N],[5,"git_tree_entry_to_object","","",N,N],[5,"git_tree_entry_type","","",N,N],[5,"git_tree_entrycount","","",N,N],[5,"git_tree_free","","",N,N],[5,"git_tree_id","","",N,N],[5,"git_tree_lookup","","",N,N],[5,"git_tree_walk","","",N,N],[5,"git_treebuilder_new","","",N,N],[5,"git_treebuilder_clear","","",N,N],[5,"git_treebuilder_entrycount","","",N,N],[5,"git_treebuilder_free","","",N,N],[5,"git_treebuilder_get","","",N,N],[5,"git_treebuilder_insert","","",N,N],[5,"git_treebuilder_remove","","",N,N],[5,"git_treebuilder_filter","","",N,N],[5,"git_treebuilder_write","","",N,N],[5,"git_buf_free","","",N,N],[5,"git_buf_grow","","",N,N],[5,"git_buf_set","","",N,N],[5,"git_commit_author","","",N,N],[5,"git_commit_committer","","",N,N],[5,"git_commit_free","","",N,N],[5,"git_commit_id","","",N,N],[5,"git_commit_lookup","","",N,N],[5,"git_commit_message","","",N,N],[5,"git_commit_message_encoding","","",N,N],[5,"git_commit_message_raw","","",N,N],[5,"git_commit_nth_gen_ancestor","","",N,N],[5,"git_commit_parent","","",N,N],[5,"git_commit_parent_id","","",N,N],[5,"git_commit_parentcount","","",N,N],[5,"git_commit_raw_header","","",N,N],[5,"git_commit_summary","","",N,N],[5,"git_commit_time","","",N,N],[5,"git_commit_time_offset","","",N,N],[5,"git_commit_tree","","",N,N],[5,"git_commit_tree_id","","",N,N],[5,"git_commit_amend","","",N,N],[5,"git_commit_create","","",N,N],[5,"git_commit_header_field","","",N,N],[5,"git_annotated_commit_lookup","","",N,N],[5,"git_commit_create_with_signature","","",N,N],[5,"git_commit_extract_signature","","",N,N],[5,"git_branch_create","","",N,N],[5,"git_branch_delete","","",N,N],[5,"git_branch_is_head","","",N,N],[5,"git_branch_iterator_free","","",N,N],[5,"git_branch_iterator_new","","",N,N],[5,"git_branch_lookup","","",N,N],[5,"git_branch_move","","",N,N],[5,"git_branch_name","","",N,N],[5,"git_branch_next","","",N,N],[5,"git_branch_set_upstream","","",N,N],[5,"git_branch_upstream","","",N,N],[5,"git_index_add","","",N,N],[5,"git_index_add_all","","",N,N],[5,"git_index_add_bypath","","",N,N],[5,"git_index_add_frombuffer","","",N,N],[5,"git_index_conflict_add","","",N,N],[5,"git_index_conflict_remove","","",N,N],[5,"git_index_conflict_get","","",N,N],[5,"git_index_conflict_iterator_new","","",N,N],[5,"git_index_conflict_next","","",N,N],[5,"git_index_conflict_iterator_free","","",N,N],[5,"git_index_clear","","",N,N],[5,"git_index_entry_stage","","",N,N],[5,"git_index_entrycount","","",N,N],[5,"git_index_find","","",N,N],[5,"git_index_free","","",N,N],[5,"git_index_get_byindex","","",N,N],[5,"git_index_get_bypath","","",N,N],[5,"git_index_has_conflicts","","",N,N],[5,"git_index_new","","",N,N],[5,"git_index_open","","",N,N],[5,"git_index_path","","",N,N],[5,"git_index_read","","",N,N],[5,"git_index_read_tree","","",N,N],[5,"git_index_remove","","",N,N],[5,"git_index_remove_all","","",N,N],[5,"git_index_remove_bypath","","",N,N],[5,"git_index_remove_directory","","",N,N],[5,"git_index_update_all","","",N,N],[5,"git_index_write","","",N,N],[5,"git_index_write_tree","","",N,N],[5,"git_index_write_tree_to","","",N,N],[5,"git_config_add_file_ondisk","","",N,N],[5,"git_config_delete_entry","","",N,N],[5,"git_config_delete_multivar","","",N,N],[5,"git_config_find_programdata","","",N,N],[5,"git_config_find_global","","",N,N],[5,"git_config_find_system","","",N,N],[5,"git_config_find_xdg","","",N,N],[5,"git_config_free","","",N,N],[5,"git_config_get_bool","","",N,N],[5,"git_config_get_entry","","",N,N],[5,"git_config_get_int32","","",N,N],[5,"git_config_get_int64","","",N,N],[5,"git_config_get_string","","",N,N],[5,"git_config_get_string_buf","","",N,N],[5,"git_config_get_path","","",N,N],[5,"git_config_iterator_free","","",N,N],[5,"git_config_iterator_glob_new","","",N,N],[5,"git_config_iterator_new","","",N,N],[5,"git_config_new","","",N,N],[5,"git_config_next","","",N,N],[5,"git_config_open_default","","",N,N],[5,"git_config_open_global","","",N,N],[5,"git_config_open_level","","",N,N],[5,"git_config_open_ondisk","","",N,N],[5,"git_config_parse_bool","","",N,N],[5,"git_config_parse_int32","","",N,N],[5,"git_config_parse_int64","","",N,N],[5,"git_config_set_bool","","",N,N],[5,"git_config_set_int32","","",N,N],[5,"git_config_set_int64","","",N,N],[5,"git_config_set_multivar","","",N,N],[5,"git_config_set_string","","",N,N],[5,"git_config_snapshot","","",N,N],[5,"git_config_entry_free","","",N,N],[5,"git_cred_default_new","","",N,N],[5,"git_cred_has_username","","",N,N],[5,"git_cred_ssh_custom_new","","",N,N],[5,"git_cred_ssh_interactive_new","","",N,N],[5,"git_cred_ssh_key_from_agent","","",N,N],[5,"git_cred_ssh_key_new","","",N,N],[5,"git_cred_ssh_key_memory_new","","",N,N],[5,"git_cred_userpass","","",N,N],[5,"git_cred_userpass_plaintext_new","","",N,N],[5,"git_cred_username_new","","",N,N],[5,"git_tag_annotation_create","","",N,N],[5,"git_tag_create","","",N,N],[5,"git_tag_create_frombuffer","","",N,N],[5,"git_tag_create_lightweight","","",N,N],[5,"git_tag_delete","","",N,N],[5,"git_tag_foreach","","",N,N],[5,"git_tag_free","","",N,N],[5,"git_tag_id","","",N,N],[5,"git_tag_list","","",N,N],[5,"git_tag_list_match","","",N,N],[5,"git_tag_lookup","","",N,N],[5,"git_tag_lookup_prefix","","",N,N],[5,"git_tag_message","","",N,N],[5,"git_tag_name","","",N,N],[5,"git_tag_peel","","",N,N],[5,"git_tag_tagger","","",N,N],[5,"git_tag_target","","",N,N],[5,"git_tag_target_id","","",N,N],[5,"git_tag_target_type","","",N,N],[5,"git_checkout_head","","",N,N],[5,"git_checkout_index","","",N,N],[5,"git_checkout_tree","","",N,N],[5,"git_checkout_init_options","","",N,N],[5,"git_annotated_commit_id","","",N,N],[5,"git_annotated_commit_from_ref","","",N,N],[5,"git_annotated_commit_free","","",N,N],[5,"git_merge_init_options","","",N,N],[5,"git_merge","","",N,N],[5,"git_merge_commits","","",N,N],[5,"git_merge_trees","","",N,N],[5,"git_repository_state_cleanup","","",N,N],[5,"git_merge_analysis","","",N,N],[5,"git_note_author","","",N,N],[5,"git_note_committer","","",N,N],[5,"git_note_create","","",N,N],[5,"git_note_default_ref","","",N,N],[5,"git_note_free","","",N,N],[5,"git_note_id","","",N,N],[5,"git_note_iterator_free","","",N,N],[5,"git_note_iterator_new","","",N,N],[5,"git_note_message","","",N,N],[5,"git_note_next","","",N,N],[5,"git_note_read","","",N,N],[5,"git_note_remove","","",N,N],[5,"git_blame_file","","",N,N],[5,"git_blame_free","","",N,N],[5,"git_blame_init_options","","",N,N],[5,"git_blame_get_hunk_count","","",N,N],[5,"git_blame_get_hunk_byline","","",N,N],[5,"git_blame_get_hunk_byindex","","",N,N],[5,"git_revwalk_new","","",N,N],[5,"git_revwalk_free","","",N,N],[5,"git_revwalk_reset","","",N,N],[5,"git_revwalk_sorting","","",N,N],[5,"git_revwalk_push_head","","",N,N],[5,"git_revwalk_push","","",N,N],[5,"git_revwalk_push_ref","","",N,N],[5,"git_revwalk_push_glob","","",N,N],[5,"git_revwalk_push_range","","",N,N],[5,"git_revwalk_simplify_first_parent","","",N,N],[5,"git_revwalk_hide_head","","",N,N],[5,"git_revwalk_hide","","",N,N],[5,"git_revwalk_hide_ref","","",N,N],[5,"git_revwalk_hide_glob","","",N,N],[5,"git_revwalk_add_hide_cb","","",N,N],[5,"git_revwalk_next","","",N,N],[5,"git_merge_base","","",N,N],[5,"git_merge_bases","","",N,N],[5,"git_pathspec_free","","",N,N],[5,"git_pathspec_match_diff","","",N,N],[5,"git_pathspec_match_index","","",N,N],[5,"git_pathspec_match_list_diff_entry","","",N,N],[5,"git_pathspec_match_list_entry","","",N,N],[5,"git_pathspec_match_list_entrycount","","",N,N],[5,"git_pathspec_match_list_failed_entry","","",N,N],[5,"git_pathspec_match_list_failed_entrycount","","",N,N],[5,"git_pathspec_match_list_free","","",N,N],[5,"git_pathspec_match_tree","","",N,N],[5,"git_pathspec_match_workdir","","",N,N],[5,"git_pathspec_matches_path","","",N,N],[5,"git_pathspec_new","","",N,N],[5,"git_diff_blob_to_buffer","","",N,N],[5,"git_diff_blobs","","",N,N],[5,"git_diff_buffers","","",N,N],[5,"git_diff_find_similar","","",N,N],[5,"git_diff_find_init_options","","",N,N],[5,"git_diff_foreach","","",N,N],[5,"git_diff_free","","",N,N],[5,"git_diff_get_delta","","",N,N],[5,"git_diff_get_stats","","",N,N],[5,"git_diff_index_to_index","","",N,N],[5,"git_diff_index_to_workdir","","",N,N],[5,"git_diff_init_options","","",N,N],[5,"git_diff_is_sorted_icase","","",N,N],[5,"git_diff_merge","","",N,N],[5,"git_diff_num_deltas","","",N,N],[5,"git_diff_num_deltas_of_type","","",N,N],[5,"git_diff_print","","",N,N],[5,"git_diff_stats_deletions","","",N,N],[5,"git_diff_stats_files_changed","","",N,N],[5,"git_diff_stats_free","","",N,N],[5,"git_diff_stats_insertions","","",N,N],[5,"git_diff_stats_to_buf","","",N,N],[5,"git_diff_status_char","","",N,N],[5,"git_diff_tree_to_index","","",N,N],[5,"git_diff_tree_to_tree","","",N,N],[5,"git_diff_tree_to_workdir","","",N,N],[5,"git_diff_tree_to_workdir_with_index","","",N,N],[5,"git_graph_ahead_behind","","",N,N],[5,"git_graph_descendant_of","","",N,N],[5,"git_patch_from_diff","","",N,N],[5,"git_patch_from_blobs","","",N,N],[5,"git_patch_from_blob_and_buffer","","",N,N],[5,"git_patch_from_buffers","","",N,N],[5,"git_patch_free","","",N,N],[5,"git_patch_get_delta","","",N,N],[5,"git_patch_num_hunks","","",N,N],[5,"git_patch_line_stats","","",N,N],[5,"git_patch_get_hunk","","",N,N],[5,"git_patch_num_lines_in_hunk","","",N,N],[5,"git_patch_get_line_in_hunk","","",N,N],[5,"git_patch_size","","",N,N],[5,"git_patch_print","","",N,N],[5,"git_patch_to_buf","","",N,N],[5,"git_reflog_append","","",N,N],[5,"git_reflog_delete","","",N,N],[5,"git_reflog_drop","","",N,N],[5,"git_reflog_entry_byindex","","",N,N],[5,"git_reflog_entry_committer","","",N,N],[5,"git_reflog_entry_id_new","","",N,N],[5,"git_reflog_entry_id_old","","",N,N],[5,"git_reflog_entry_message","","",N,N],[5,"git_reflog_entrycount","","",N,N],[5,"git_reflog_free","","",N,N],[5,"git_reflog_read","","",N,N],[5,"git_reflog_rename","","",N,N],[5,"git_reflog_write","","",N,N],[5,"git_transport_register","","",N,N],[5,"git_transport_unregister","","",N,N],[5,"git_transport_smart","","",N,N],[5,"git_describe_commit","","",N,N],[5,"git_describe_format","","",N,N],[5,"git_describe_result_free","","",N,N],[5,"git_describe_workdir","","",N,N],[5,"git_message_prettify","","",N,N],[5,"git_packbuilder_new","","",N,N],[5,"git_packbuilder_set_threads","","",N,N],[5,"git_packbuilder_insert","","",N,N],[5,"git_packbuilder_insert_tree","","",N,N],[5,"git_packbuilder_insert_commit","","",N,N],[5,"git_packbuilder_insert_walk","","",N,N],[5,"git_packbuilder_insert_recur","","",N,N],[5,"git_packbuilder_write_buf","","",N,N],[5,"git_packbuilder_write","","",N,N],[5,"git_packbuilder_hash","","",N,N],[5,"git_packbuilder_foreach","","",N,N],[5,"git_packbuilder_object_count","","",N,N],[5,"git_packbuilder_written","","",N,N],[5,"git_packbuilder_set_callbacks","","",N,N],[5,"git_packbuilder_free","","",N,N],[5,"git_repository_odb","","",N,N],[5,"git_odb_new","","",N,N],[5,"git_odb_free","","",N,N],[5,"git_odb_open_rstream","","",N,N],[5,"git_odb_stream_read","","",N,N],[5,"git_odb_open_wstream","","",N,N],[5,"git_odb_stream_write","","",N,N],[5,"git_odb_stream_finalize_write","","",N,N],[5,"git_odb_stream_free","","",N,N],[5,"git_odb_foreach","","",N,N],[5,"git_odb_read","","",N,N],[5,"git_odb_read_header","","",N,N],[5,"git_odb_write","","",N,N],[5,"git_odb_hash","","",N,N],[5,"git_odb_hashfile","","",N,N],[5,"git_odb_exists_prefix","","",N,N],[5,"git_odb_exists","","",N,N],[5,"git_odb_refresh","","",N,N],[5,"git_odb_object_id","","",N,N],[5,"git_odb_object_size","","",N,N],[5,"git_odb_object_type","","",N,N],[5,"git_odb_object_data","","",N,N],[5,"git_odb_object_dup","","",N,N],[5,"git_odb_object_free","","",N,N],[5,"git_odb_init_backend","","",N,N],[5,"git_odb_add_backend","","",N,N],[5,"git_odb_backend_pack","","",N,N],[5,"git_odb_backend_one_pack","","",N,N],[5,"git_odb_add_disk_alternate","","",N,N],[5,"git_odb_backend_loose","","",N,N],[5,"git_odb_add_alternate","","",N,N],[5,"git_odb_backend_malloc","","",N,N],[5,"git_odb_num_backends","","",N,N],[5,"git_odb_get_backend","","",N,N],[5,"git_mempack_new","","",N,N],[5,"git_mempack_reset","","",N,N],[5,"git_mempack_dump","","",N,N],[5,"git_refdb_new","","",N,N],[5,"git_refdb_open","","",N,N],[5,"git_refdb_backend_fs","","",N,N],[5,"git_refdb_init_backend","","",N,N],[5,"git_refdb_set_backend","","",N,N],[5,"git_refdb_compress","","",N,N],[5,"git_refdb_free","","",N,N],[5,"git_rebase_init_options","","",N,N],[5,"git_rebase_init","","",N,N],[5,"git_rebase_open","","",N,N],[5,"git_rebase_operation_entrycount","","",N,N],[5,"git_rebase_operation_current","","",N,N],[5,"git_rebase_operation_byindex","","",N,N],[5,"git_rebase_next","","",N,N],[5,"git_rebase_inmemory_index","","",N,N],[5,"git_rebase_commit","","",N,N],[5,"git_rebase_abort","","",N,N],[5,"git_rebase_finish","","",N,N],[5,"git_rebase_free","","",N,N],[6,"git_off_t","","",N,N],[6,"git_time_t","","",N,N],[6,"git_revparse_mode_t","","",N,N],[6,"git_error_code","","",N,N],[6,"git_error_t","","",N,N],[6,"git_repository_state_t","","",N,N],[6,"git_direction","","",N,N],[6,"git_clone_local_t","","",N,N],[6,"git_checkout_notify_cb","","",N,N],[6,"git_checkout_progress_cb","","",N,N],[6,"git_checkout_perfdata_cb","","",N,N],[6,"git_remote_autotag_option_t","","",N,N],[6,"git_fetch_prune_t","","",N,N],[6,"git_remote_completion_type","","",N,N],[6,"git_transport_message_cb","","",N,N],[6,"git_cred_acquire_cb","","",N,N],[6,"git_transfer_progress_cb","","",N,N],[6,"git_packbuilder_progress","","",N,N],[6,"git_push_transfer_progress","","",N,N],[6,"git_transport_certificate_check_cb","","",N,N],[6,"git_push_negotiation","","",N,N],[6,"git_push_update_reference_cb","","",N,N],[6,"git_cert_t","","",N,N],[6,"git_cert_ssh_t","","",N,N],[6,"git_repository_create_cb","","",N,N],[6,"git_remote_create_cb","","",N,N],[6,"git_checkout_notify_t","","",N,N],[6,"git_status_t","","",N,N],[6,"git_status_opt_t","","",N,N],[6,"git_status_show_t","","",N,N],[6,"git_delta_t","","",N,N],[6,"git_checkout_strategy_t","","",N,N],[6,"git_reset_t","","",N,N],[6,"git_otype","","",N,N],[6,"git_ref_t","","",N,N],[6,"git_filemode_t","","",N,N],[6,"git_treewalk_mode","","",N,N],[6,"git_treewalk_cb","","",N,N],[6,"git_treebuilder_filter_cb","","",N,N],[6,"git_revwalk_hide_cb","","",N,N],[6,"git_branch_t","","",N,N],[6,"git_index_matched_path_cb","","",N,N],[6,"git_idxentry_extended_flag_t","","",N,N],[6,"git_indxentry_flag_t","","",N,N],[6,"git_config_level_t","","",N,N],[6,"git_submodule_update_t","","",N,N],[6,"git_submodule_ignore_t","","",N,N],[6,"git_submodule_cb","","",N,N],[6,"git_credtype_t","","",N,N],[6,"git_cred_ssh_interactive_callback","","",N,N],[6,"git_cred_sign_callback","","",N,N],[6,"git_tag_foreach_cb","","",N,N],[6,"git_index_add_option_t","","",N,N],[6,"git_repository_open_flag_t","","",N,N],[6,"git_repository_init_flag_t","","",N,N],[6,"git_repository_init_mode_t","","",N,N],[6,"git_sort_t","","",N,N],[6,"git_submodule_status_t","","",N,N],[6,"git_pathspec_flag_t","","",N,N],[6,"git_diff_file_cb","","",N,N],[6,"git_diff_hunk_cb","","",N,N],[6,"git_diff_line_cb","","",N,N],[6,"git_diff_binary_cb","","",N,N],[6,"git_diff_line_t","","",N,N],[6,"git_diff_format_t","","",N,N],[6,"git_diff_stats_format_t","","",N,N],[6,"git_diff_notify_cb","","",N,N],[6,"git_diff_progress_cb","","",N,N],[6,"git_diff_option_t","","",N,N],[6,"git_diff_binary_t","","",N,N],[6,"git_merge_flag_t","","",N,N],[6,"git_merge_file_favor_t","","",N,N],[6,"git_merge_file_flag_t","","",N,N],[6,"git_merge_analysis_t","","",N,N],[6,"git_merge_preference_t","","",N,N],[6,"git_transport_cb","","",N,N],[6,"git_proxy_t","","",N,N],[6,"git_smart_service_t","","",N,N],[6,"git_smart_subtransport_cb","","",N,N],[6,"git_describe_strategy_t","","",N,N],[6,"git_packbuilder_stage_t","","",N,N],[6,"git_stash_flags","","",N,N],[6,"git_stash_apply_flags","","",N,N],[6,"git_stash_apply_progress_t","","",N,N],[6,"git_stash_apply_progress_cb","","",N,N],[6,"git_stash_cb","","",N,N],[6,"git_packbuilder_foreach_cb","","",N,N],[6,"git_odb_foreach_cb","","",N,N],[6,"git_rebase_operation_t","","",N,N],[17,"GIT_OID_RAWSZ","","",N,N],[17,"GIT_OID_HEXSZ","","",N,N],[17,"GIT_CLONE_OPTIONS_VERSION","","",N,N],[17,"GIT_STASH_APPLY_OPTIONS_VERSION","","",N,N],[17,"GIT_CHECKOUT_OPTIONS_VERSION","","",N,N],[17,"GIT_MERGE_OPTIONS_VERSION","","",N,N],[17,"GIT_REMOTE_CALLBACKS_VERSION","","",N,N],[17,"GIT_STATUS_OPTIONS_VERSION","","",N,N],[17,"GIT_BLAME_OPTIONS_VERSION","","",N,N],[17,"GIT_PROXY_OPTIONS_VERSION","","",N,N],[17,"GIT_SUBMODULE_UPDATE_OPTIONS_VERSION","","",N,N],[17,"GIT_ODB_BACKEND_VERSION","","",N,N],[17,"GIT_REFDB_BACKEND_VERSION","","",N,N],[17,"GIT_REVPARSE_SINGLE","","",N,N],[17,"GIT_REVPARSE_RANGE","","",N,N],[17,"GIT_REVPARSE_MERGE_BASE","","",N,N],[17,"GIT_OK","","",N,N],[17,"GIT_ERROR","","",N,N],[17,"GIT_ENOTFOUND","","",N,N],[17,"GIT_EEXISTS","","",N,N],[17,"GIT_EAMBIGUOUS","","",N,N],[17,"GIT_EBUFS","","",N,N],[17,"GIT_EUSER","","",N,N],[17,"GIT_EBAREREPO","","",N,N],[17,"GIT_EUNBORNBRANCH","","",N,N],[17,"GIT_EUNMERGED","","",N,N],[17,"GIT_ENONFASTFORWARD","","",N,N],[17,"GIT_EINVALIDSPEC","","",N,N],[17,"GIT_ECONFLICT","","",N,N],[17,"GIT_ELOCKED","","",N,N],[17,"GIT_EMODIFIED","","",N,N],[17,"GIT_EAUTH","","",N,N],[17,"GIT_ECERTIFICATE","","",N,N],[17,"GIT_EAPPLIED","","",N,N],[17,"GIT_EPEEL","","",N,N],[17,"GIT_EEOF","","",N,N],[17,"GIT_EINVALID","","",N,N],[17,"GIT_EUNCOMMITTED","","",N,N],[17,"GIT_EDIRECTORY","","",N,N],[17,"GIT_EMERGECONFLICT","","",N,N],[17,"GIT_PASSTHROUGH","","",N,N],[17,"GIT_ITEROVER","","",N,N],[17,"GITERR_NONE","","",N,N],[17,"GITERR_NOMEMORY","","",N,N],[17,"GITERR_OS","","",N,N],[17,"GITERR_INVALID","","",N,N],[17,"GITERR_REFERENCE","","",N,N],[17,"GITERR_ZLIB","","",N,N],[17,"GITERR_REPOSITORY","","",N,N],[17,"GITERR_CONFIG","","",N,N],[17,"GITERR_REGEX","","",N,N],[17,"GITERR_ODB","","",N,N],[17,"GITERR_INDEX","","",N,N],[17,"GITERR_OBJECT","","",N,N],[17,"GITERR_NET","","",N,N],[17,"GITERR_TAG","","",N,N],[17,"GITERR_TREE","","",N,N],[17,"GITERR_INDEXER","","",N,N],[17,"GITERR_SSL","","",N,N],[17,"GITERR_SUBMODULE","","",N,N],[17,"GITERR_THREAD","","",N,N],[17,"GITERR_STASH","","",N,N],[17,"GITERR_CHECKOUT","","",N,N],[17,"GITERR_FETCHHEAD","","",N,N],[17,"GITERR_MERGE","","",N,N],[17,"GITERR_SSH","","",N,N],[17,"GITERR_FILTER","","",N,N],[17,"GITERR_REVERT","","",N,N],[17,"GITERR_CALLBACK","","",N,N],[17,"GITERR_CHERRYPICK","","",N,N],[17,"GITERR_DESCRIBE","","",N,N],[17,"GITERR_REBASE","","",N,N],[17,"GITERR_FILESYSTEM","","",N,N],[17,"GIT_REPOSITORY_STATE_NONE","","",N,N],[17,"GIT_REPOSITORY_STATE_MERGE","","",N,N],[17,"GIT_REPOSITORY_STATE_REVERT","","",N,N],[17,"GIT_REPOSITORY_STATE_REVERT_SEQUENCE","","",N,N],[17,"GIT_REPOSITORY_STATE_CHERRYPICK","","",N,N],[17,"GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE","","",N,N],[17,"GIT_REPOSITORY_STATE_BISECT","","",N,N],[17,"GIT_REPOSITORY_STATE_REBASE","","",N,N],[17,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",N,N],[17,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",N,N],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",N,N],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",N,N],[17,"GIT_DIRECTION_FETCH","","",N,N],[17,"GIT_DIRECTION_PUSH","","",N,N],[17,"GIT_CLONE_LOCAL_AUTO","","",N,N],[17,"GIT_CLONE_LOCAL","","",N,N],[17,"GIT_CLONE_NO_LOCAL","","",N,N],[17,"GIT_CLONE_LOCAL_NO_LINKS","","",N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED","","",N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_AUTO","","",N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_NONE","","",N,N],[17,"GIT_REMOTE_DOWNLOAD_TAGS_ALL","","",N,N],[17,"GIT_FETCH_PRUNE_UNSPECIFIED","","",N,N],[17,"GIT_FETCH_PRUNE","","",N,N],[17,"GIT_FETCH_NO_PRUNE","","",N,N],[17,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",N,N],[17,"GIT_REMOTE_COMPLETION_INDEXING","","",N,N],[17,"GIT_REMOTE_COMPLETION_ERROR","","",N,N],[17,"GIT_CERT_NONE","","",N,N],[17,"GIT_CERT_X509","","",N,N],[17,"GIT_CERT_HOSTKEY_LIBSSH2","","",N,N],[17,"GIT_CERT_SSH_MD5","","",N,N],[17,"GIT_CERT_SSH_SHA1","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_NONE","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_DIRTY","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_UPDATED","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_IGNORED","","",N,N],[17,"GIT_CHECKOUT_NOTIFY_ALL","","",N,N],[17,"GIT_STATUS_CURRENT","","",N,N],[17,"GIT_STATUS_INDEX_NEW","","",N,N],[17,"GIT_STATUS_INDEX_MODIFIED","","",N,N],[17,"GIT_STATUS_INDEX_DELETED","","",N,N],[17,"GIT_STATUS_INDEX_RENAMED","","",N,N],[17,"GIT_STATUS_INDEX_TYPECHANGE","","",N,N],[17,"GIT_STATUS_WT_NEW","","",N,N],[17,"GIT_STATUS_WT_MODIFIED","","",N,N],[17,"GIT_STATUS_WT_DELETED","","",N,N],[17,"GIT_STATUS_WT_TYPECHANGE","","",N,N],[17,"GIT_STATUS_WT_RENAMED","","",N,N],[17,"GIT_STATUS_WT_UNREADABLE","","",N,N],[17,"GIT_STATUS_IGNORED","","",N,N],[17,"GIT_STATUS_CONFLICTED","","",N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNTRACKED","","",N,N],[17,"GIT_STATUS_OPT_INCLUDE_IGNORED","","",N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNMODIFIED","","",N,N],[17,"GIT_STATUS_OPT_EXCLUDE_SUBMODULES","","",N,N],[17,"GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS","","",N,N],[17,"GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH","","",N,N],[17,"GIT_STATUS_OPT_RECURSE_IGNORED_DIRS","","",N,N],[17,"GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX","","",N,N],[17,"GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR","","",N,N],[17,"GIT_STATUS_OPT_SORT_CASE_SENSITIVELY","","",N,N],[17,"GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY","","",N,N],[17,"GIT_STATUS_OPT_RENAMES_FROM_REWRITES","","",N,N],[17,"GIT_STATUS_OPT_NO_REFRESH","","",N,N],[17,"GIT_STATUS_OPT_UPDATE_INDEX","","",N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE","","",N,N],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED","","",N,N],[17,"GIT_STATUS_SHOW_INDEX_AND_WORKDIR","","",N,N],[17,"GIT_STATUS_SHOW_INDEX_ONLY","","",N,N],[17,"GIT_STATUS_SHOW_WORKDIR_ONLY","","",N,N],[17,"GIT_DELTA_UNMODIFIED","","",N,N],[17,"GIT_DELTA_ADDED","","",N,N],[17,"GIT_DELTA_DELETED","","",N,N],[17,"GIT_DELTA_MODIFIED","","",N,N],[17,"GIT_DELTA_RENAMED","","",N,N],[17,"GIT_DELTA_COPIED","","",N,N],[17,"GIT_DELTA_IGNORED","","",N,N],[17,"GIT_DELTA_UNTRACKED","","",N,N],[17,"GIT_DELTA_TYPECHANGE","","",N,N],[17,"GIT_DELTA_UNREADABLE","","",N,N],[17,"GIT_DELTA_CONFLICTED","","",N,N],[17,"GIT_CHECKOUT_NONE","","",N,N],[17,"GIT_CHECKOUT_SAFE","","",N,N],[17,"GIT_CHECKOUT_FORCE","","",N,N],[17,"GIT_CHECKOUT_RECREATE_MISSING","","",N,N],[17,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",N,N],[17,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",N,N],[17,"GIT_CHECKOUT_REMOVE_IGNORED","","",N,N],[17,"GIT_CHECKOUT_UPDATE_ONLY","","",N,N],[17,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",N,N],[17,"GIT_CHECKOUT_NO_REFRESH","","",N,N],[17,"GIT_CHECKOUT_SKIP_UNMERGED","","",N,N],[17,"GIT_CHECKOUT_USE_OURS","","",N,N],[17,"GIT_CHECKOUT_USE_THEIRS","","",N,N],[17,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",N,N],[17,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",N,N],[17,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",N,N],[17,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",N,N],[17,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",N,N],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",N,N],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",N,N],[17,"GIT_RESET_SOFT","","",N,N],[17,"GIT_RESET_MIXED","","",N,N],[17,"GIT_RESET_HARD","","",N,N],[17,"GIT_OBJ_ANY","","",N,N],[17,"GIT_OBJ_BAD","","",N,N],[17,"GIT_OBJ__EXT1","","",N,N],[17,"GIT_OBJ_COMMIT","","",N,N],[17,"GIT_OBJ_TREE","","",N,N],[17,"GIT_OBJ_BLOB","","",N,N],[17,"GIT_OBJ_TAG","","",N,N],[17,"GIT_OBJ__EXT2","","",N,N],[17,"GIT_OBJ_OFS_DELTA","","",N,N],[17,"GIT_OBJ_REF_DELTA","","",N,N],[17,"GIT_REF_INVALID","","",N,N],[17,"GIT_REF_OID","","",N,N],[17,"GIT_REF_SYMBOLIC","","",N,N],[17,"GIT_REF_LISTALL","","",N,N],[17,"GIT_FILEMODE_UNREADABLE","","",N,N],[17,"GIT_FILEMODE_TREE","","",N,N],[17,"GIT_FILEMODE_BLOB","","",N,N],[17,"GIT_FILEMODE_BLOB_EXECUTABLE","","",N,N],[17,"GIT_FILEMODE_LINK","","",N,N],[17,"GIT_FILEMODE_COMMIT","","",N,N],[17,"GIT_TREEWALK_PRE","","",N,N],[17,"GIT_TREEWALK_POST","","",N,N],[17,"GIT_BRANCH_LOCAL","","",N,N],[17,"GIT_BRANCH_REMOTE","","",N,N],[17,"GIT_BRANCH_ALL","","",N,N],[17,"GIT_BLAME_NORMAL","","",N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_FILE","","",N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES","","",N,N],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES","","",N,N],[17,"GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES","","",N,N],[17,"GIT_BLAME_FIRST_PARENT","","",N,N],[17,"GIT_IDXENTRY_INTENT_TO_ADD","","",N,N],[17,"GIT_IDXENTRY_SKIP_WORKTREE","","",N,N],[17,"GIT_IDXENTRY_EXTENDED2","","",N,N],[17,"GIT_IDXENTRY_UPDATE","","",N,N],[17,"GIT_IDXENTRY_REMOVE","","",N,N],[17,"GIT_IDXENTRY_UPTODATE","","",N,N],[17,"GIT_IDXENTRY_ADDED","","",N,N],[17,"GIT_IDXENTRY_HASHED","","",N,N],[17,"GIT_IDXENTRY_UNHASHED","","",N,N],[17,"GIT_IDXENTRY_WT_REMOVE","","",N,N],[17,"GIT_IDXENTRY_CONFLICTED","","",N,N],[17,"GIT_IDXENTRY_UNPACKED","","",N,N],[17,"GIT_IDXENTRY_NEW_SKIP_WORKTREE","","",N,N],[17,"GIT_IDXENTRY_EXTENDED","","",N,N],[17,"GIT_IDXENTRY_VALID","","",N,N],[17,"GIT_IDXENTRY_NAMEMASK","","",N,N],[17,"GIT_IDXENTRY_STAGEMASK","","",N,N],[17,"GIT_IDXENTRY_STAGESHIFT","","",N,N],[17,"GIT_CONFIG_LEVEL_PROGRAMDATA","","",N,N],[17,"GIT_CONFIG_LEVEL_SYSTEM","","",N,N],[17,"GIT_CONFIG_LEVEL_XDG","","",N,N],[17,"GIT_CONFIG_LEVEL_GLOBAL","","",N,N],[17,"GIT_CONFIG_LEVEL_LOCAL","","",N,N],[17,"GIT_CONFIG_LEVEL_APP","","",N,N],[17,"GIT_CONFIG_HIGHEST_LEVEL","","",N,N],[17,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",N,N],[17,"GIT_SUBMODULE_UPDATE_REBASE","","",N,N],[17,"GIT_SUBMODULE_UPDATE_MERGE","","",N,N],[17,"GIT_SUBMODULE_UPDATE_NONE","","",N,N],[17,"GIT_SUBMODULE_UPDATE_DEFAULT","","",N,N],[17,"GIT_SUBMODULE_IGNORE_UNSPECIFIED","","",N,N],[17,"GIT_SUBMODULE_IGNORE_NONE","","",N,N],[17,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",N,N],[17,"GIT_SUBMODULE_IGNORE_DIRTY","","",N,N],[17,"GIT_SUBMODULE_IGNORE_ALL","","",N,N],[17,"GIT_CREDTYPE_USERPASS_PLAINTEXT","","",N,N],[17,"GIT_CREDTYPE_SSH_KEY","","",N,N],[17,"GIT_CREDTYPE_SSH_CUSTOM","","",N,N],[17,"GIT_CREDTYPE_DEFAULT","","",N,N],[17,"GIT_CREDTYPE_SSH_INTERACTIVE","","",N,N],[17,"GIT_CREDTYPE_USERNAME","","",N,N],[17,"GIT_CREDTYPE_SSH_MEMORY","","",N,N],[17,"GIT_INDEX_ADD_DEFAULT","","",N,N],[17,"GIT_INDEX_ADD_FORCE","","",N,N],[17,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH","","",N,N],[17,"GIT_INDEX_ADD_CHECK_PATHSPEC","","",N,N],[17,"GIT_REPOSITORY_OPEN_NO_SEARCH","","",N,N],[17,"GIT_REPOSITORY_OPEN_CROSS_FS","","",N,N],[17,"GIT_REPOSITORY_OPEN_BARE","","",N,N],[17,"GIT_REPOSITORY_OPEN_NO_DOTGIT","","",N,N],[17,"GIT_REPOSITORY_OPEN_FROM_ENV","","",N,N],[17,"GIT_REPOSITORY_INIT_OPTIONS_VERSION","","",N,N],[17,"GIT_REPOSITORY_INIT_BARE","","",N,N],[17,"GIT_REPOSITORY_INIT_NO_REINIT","","",N,N],[17,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR","","",N,N],[17,"GIT_REPOSITORY_INIT_MKDIR","","",N,N],[17,"GIT_REPOSITORY_INIT_MKPATH","","",N,N],[17,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE","","",N,N],[17,"GIT_REPOSITORY_INIT_SHARED_UMASK","","",N,N],[17,"GIT_REPOSITORY_INIT_SHARED_GROUP","","",N,N],[17,"GIT_REPOSITORY_INIT_SHARED_ALL","","",N,N],[17,"GIT_SORT_NONE","","",N,N],[17,"GIT_SORT_TOPOLOGICAL","","",N,N],[17,"GIT_SORT_TIME","","",N,N],[17,"GIT_SORT_REVERSE","","",N,N],[17,"GIT_SUBMODULE_STATUS_IN_HEAD","","",N,N],[17,"GIT_SUBMODULE_STATUS_IN_INDEX","","",N,N],[17,"GIT_SUBMODULE_STATUS_IN_CONFIG","","",N,N],[17,"GIT_SUBMODULE_STATUS_IN_WD","","",N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_ADDED","","",N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_DELETED","","",N,N],[17,"GIT_SUBMODULE_STATUS_INDEX_MODIFIED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_UNINITIALIZED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_ADDED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_DELETED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_MODIFIED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_WD_MODIFIED","","",N,N],[17,"GIT_SUBMODULE_STATUS_WD_UNTRACKED","","",N,N],[17,"GIT_PATHSPEC_DEFAULT","","",N,N],[17,"GIT_PATHSPEC_IGNORE_CASE","","",N,N],[17,"GIT_PATHSPEC_USE_CASE","","",N,N],[17,"GIT_PATHSPEC_NO_GLOB","","",N,N],[17,"GIT_PATHSPEC_NO_MATCH_ERROR","","",N,N],[17,"GIT_PATHSPEC_FIND_FAILURES","","",N,N],[17,"GIT_PATHSPEC_FAILURES_ONLY","","",N,N],[17,"GIT_DIFF_LINE_CONTEXT","","",N,N],[17,"GIT_DIFF_LINE_ADDITION","","",N,N],[17,"GIT_DIFF_LINE_DELETION","","",N,N],[17,"GIT_DIFF_LINE_CONTEXT_EOFNL","","",N,N],[17,"GIT_DIFF_LINE_ADD_EOFNL","","",N,N],[17,"GIT_DIFF_LINE_DEL_EOFNL","","",N,N],[17,"GIT_DIFF_LINE_FILE_HDR","","",N,N],[17,"GIT_DIFF_LINE_HUNK_HDR","","",N,N],[17,"GIT_DIFF_LINE_BINARY","","",N,N],[17,"GIT_DIFF_FORMAT_PATCH","","",N,N],[17,"GIT_DIFF_FORMAT_PATCH_HEADER","","",N,N],[17,"GIT_DIFF_FORMAT_RAW","","",N,N],[17,"GIT_DIFF_FORMAT_NAME_ONLY","","",N,N],[17,"GIT_DIFF_FORMAT_NAME_STATUS","","",N,N],[17,"GIT_DIFF_STATS_NONE","","",N,N],[17,"GIT_DIFF_STATS_FULL","","",N,N],[17,"GIT_DIFF_STATS_SHORT","","",N,N],[17,"GIT_DIFF_STATS_NUMBER","","",N,N],[17,"GIT_DIFF_STATS_INCLUDE_SUMMARY","","",N,N],[17,"GIT_DIFF_NORMAL","","",N,N],[17,"GIT_DIFF_REVERSE","","",N,N],[17,"GIT_DIFF_INCLUDE_IGNORED","","",N,N],[17,"GIT_DIFF_RECURSE_IGNORED_DIRS","","",N,N],[17,"GIT_DIFF_INCLUDE_UNTRACKED","","",N,N],[17,"GIT_DIFF_RECURSE_UNTRACKED_DIRS","","",N,N],[17,"GIT_DIFF_INCLUDE_UNMODIFIED","","",N,N],[17,"GIT_DIFF_INCLUDE_TYPECHANGE","","",N,N],[17,"GIT_DIFF_INCLUDE_TYPECHANGE_TREES","","",N,N],[17,"GIT_DIFF_IGNORE_FILEMODE","","",N,N],[17,"GIT_DIFF_IGNORE_SUBMODULES","","",N,N],[17,"GIT_DIFF_IGNORE_CASE","","",N,N],[17,"GIT_DIFF_DISABLE_PATHSPEC_MATCH","","",N,N],[17,"GIT_DIFF_SKIP_BINARY_CHECK","","",N,N],[17,"GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS","","",N,N],[17,"GIT_DIFF_UPDATE_INDEX","","",N,N],[17,"GIT_DIFF_INCLUDE_UNREADABLE","","",N,N],[17,"GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED","","",N,N],[17,"GIT_DIFF_FORCE_TEXT","","",N,N],[17,"GIT_DIFF_FORCE_BINARY","","",N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE","","",N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE_CHANGE","","",N,N],[17,"GIT_DIFF_IGNORE_WHITESPACE_EOL","","",N,N],[17,"GIT_DIFF_SHOW_UNTRACKED_CONTENT","","",N,N],[17,"GIT_DIFF_SHOW_UNMODIFIED","","",N,N],[17,"GIT_DIFF_PATIENCE","","",N,N],[17,"GIT_DIFF_MINIMAL","","",N,N],[17,"GIT_DIFF_SHOW_BINARY","","",N,N],[17,"GIT_DIFF_INDENT_HEURISTIC","","",N,N],[17,"GIT_DIFF_FIND_OPTIONS_VERSION","","",N,N],[17,"GIT_DIFF_FIND_BY_CONFIG","","",N,N],[17,"GIT_DIFF_FIND_RENAMES","","",N,N],[17,"GIT_DIFF_FIND_RENAMES_FROM_REWRITES","","",N,N],[17,"GIT_DIFF_FIND_COPIES","","",N,N],[17,"GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED","","",N,N],[17,"GIT_DIFF_FIND_REWRITES","","",N,N],[17,"GIT_DIFF_BREAK_REWRITES","","",N,N],[17,"GIT_DIFF_FIND_AND_BREAK_REWRITES","","",N,N],[17,"GIT_DIFF_FIND_FOR_UNTRACKED","","",N,N],[17,"GIT_DIFF_FIND_ALL","","",N,N],[17,"GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE","","",N,N],[17,"GIT_DIFF_FIND_IGNORE_WHITESPACE","","",N,N],[17,"GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE","","",N,N],[17,"GIT_DIFF_FIND_EXACT_MATCH_ONLY","","",N,N],[17,"GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY","","",N,N],[17,"GIT_DIFF_FIND_REMOVE_UNMODIFIED","","",N,N],[17,"GIT_DIFF_BINARY_NONE","","",N,N],[17,"GIT_DIFF_BINARY_LITERAL","","",N,N],[17,"GIT_DIFF_BINARY_DELTA","","",N,N],[17,"GIT_MERGE_FIND_RENAMES","","",N,N],[17,"GIT_MERGE_FAIL_ON_CONFLICT","","",N,N],[17,"GIT_MERGE_SKIP_REUC","","",N,N],[17,"GIT_MERGE_NO_RECURSIVE","","",N,N],[17,"GIT_MERGE_FILE_FAVOR_NORMAL","","",N,N],[17,"GIT_MERGE_FILE_FAVOR_OURS","","",N,N],[17,"GIT_MERGE_FILE_FAVOR_THEIRS","","",N,N],[17,"GIT_MERGE_FILE_FAVOR_UNION","","",N,N],[17,"GIT_MERGE_FILE_DEFAULT","","",N,N],[17,"GIT_MERGE_FILE_STYLE_MERGE","","",N,N],[17,"GIT_MERGE_FILE_STYLE_DIFF3","","",N,N],[17,"GIT_MERGE_FILE_SIMPLIFY_ALNUM","","",N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE","","",N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE","","",N,N],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL","","",N,N],[17,"GIT_MERGE_FILE_DIFF_PATIENCE","","",N,N],[17,"GIT_MERGE_FILE_DIFF_MINIMAL","","",N,N],[17,"GIT_MERGE_ANALYSIS_NONE","","",N,N],[17,"GIT_MERGE_ANALYSIS_NORMAL","","",N,N],[17,"GIT_MERGE_ANALYSIS_UP_TO_DATE","","",N,N],[17,"GIT_MERGE_ANALYSIS_FASTFORWARD","","",N,N],[17,"GIT_MERGE_ANALYSIS_UNBORN","","",N,N],[17,"GIT_MERGE_PREFERENCE_NONE","","",N,N],[17,"GIT_MERGE_PREFERENCE_NO_FASTFORWARD","","",N,N],[17,"GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY","","",N,N],[17,"GIT_PROXY_NONE","","",N,N],[17,"GIT_PROXY_AUTO","","",N,N],[17,"GIT_PROXY_SPECIFIED","","",N,N],[17,"GIT_SERVICE_UPLOADPACK_LS","","",N,N],[17,"GIT_SERVICE_UPLOADPACK","","",N,N],[17,"GIT_SERVICE_RECEIVEPACK_LS","","",N,N],[17,"GIT_SERVICE_RECEIVEPACK","","",N,N],[17,"GIT_DESCRIBE_DEFAULT","","",N,N],[17,"GIT_DESCRIBE_TAGS","","",N,N],[17,"GIT_DESCRIBE_ALL","","",N,N],[17,"GIT_PACKBUILDER_ADDING_OBJECTS","","",N,N],[17,"GIT_PACKBUILDER_DELTAFICATION","","",N,N],[17,"GIT_STASH_DEFAULT","","",N,N],[17,"GIT_STASH_KEEP_INDEX","","",N,N],[17,"GIT_STASH_INCLUDE_UNTRACKED","","",N,N],[17,"GIT_STASH_INCLUDE_IGNORED","","",N,N],[17,"GIT_STASH_APPLY_DEFAULT","","",N,N],[17,"GIT_STASH_APPLY_REINSTATE_INDEX","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_NONE","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_LOADING_STASH","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED","","",N,N],[17,"GIT_STASH_APPLY_PROGRESS_DONE","","",N,N],[17,"GIT_REBASE_NO_OPERATION","","",N,N],[17,"GIT_REBASE_OPERATION_PICK","","",N,N],[17,"GIT_REBASE_OPERATION_REWORD","","",N,N],[17,"GIT_REBASE_OPERATION_EDIT","","",N,N],[17,"GIT_REBASE_OPERATION_SQUASH","","",N,N],[17,"GIT_REBASE_OPERATION_FIXUP","","",N,N],[17,"GIT_REBASE_OPERATION_EXEC","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"eq","","",6,[[["self"],["git_time"]],["bool"]]],[11,"ne","","",6,[[["self"],["git_time"]],["bool"]]],[11,"eq","","",25,[[["self"],["git_index_time"]],["bool"]]],[11,"ne","","",25,[[["self"],["git_index_time"]],["bool"]]],[11,"clone","","",2,[[["self"]],["git_oid"]]],[11,"clone","","",3,[[["self"]],["git_strarray"]]],[11,"clone","","",4,[[["self"]],["git_oidarray"]]],[11,"clone","","",6,[[["self"]],["git_time"]]],[11,"clone","","",16,[[["self"]],["git_transfer_progress"]]],[11,"clone","","",21,[[["self"]],["git_buf"]]],[11,"clone","","",22,[[["self"]],["git_blame_options"]]],[11,"clone","","",23,[[["self"]],["git_blame_hunk"]]],[11,"clone","","",24,[[["self"]],["git_index_entry"]]],[11,"clone","","",25,[[["self"]],["git_index_time"]]]],"paths":[[3,"git_revspec"],[3,"git_error"],[3,"git_oid"],[3,"git_strarray"],[3,"git_oidarray"],[3,"git_signature"],[3,"git_time"],[3,"git_clone_options"],[3,"git_checkout_options"],[3,"git_checkout_perfdata"],[3,"git_remote_callbacks"],[3,"git_fetch_options"],[3,"git_push_update"],[3,"git_cert"],[3,"git_cert_hostkey"],[3,"git_cert_x509"],[3,"git_transfer_progress"],[3,"git_diff_file"],[3,"git_status_options"],[3,"git_diff_delta"],[3,"git_status_entry"],[3,"git_buf"],[3,"git_blame_options"],[3,"git_blame_hunk"],[3,"git_index_entry"],[3,"git_index_time"],[3,"git_config_entry"],[3,"git_submodule_update_options"],[3,"git_writestream"],[3,"git_cred"],[3,"git_push_options"],[3,"git_repository_init_options"],[3,"git_remote_head"],[3,"git_diff_hunk"],[3,"git_diff_line"],[3,"git_diff_options"],[3,"git_diff_find_options"],[3,"git_diff_similarity_metric"],[3,"git_diff_binary"],[3,"git_diff_binary_file"],[3,"git_merge_options"],[3,"git_transport"],[3,"git_odb_backend"],[3,"git_refdb_backend"],[3,"git_proxy_options"],[3,"git_smart_subtransport_stream"],[3,"git_smart_subtransport"],[3,"git_smart_subtransport_definition"],[3,"git_describe_options"],[3,"git_describe_format_options"],[3,"git_stash_apply_options"],[3,"git_rebase_options"],[3,"git_rebase_operation"],[4,"git_blob"],[4,"git_branch_iterator"],[4,"git_blame"],[4,"git_commit"],[4,"git_config"],[4,"git_config_iterator"],[4,"git_index"],[4,"git_index_conflict_iterator"],[4,"git_object"],[4,"git_reference"],[4,"git_reference_iterator"],[4,"git_annotated_commit"],[4,"git_refdb"],[4,"git_refspec"],[4,"git_remote"],[4,"git_repository"],[4,"git_revwalk"],[4,"git_submodule"],[4,"git_tag"],[4,"git_tree"],[4,"git_tree_entry"],[4,"git_treebuilder"],[4,"git_push"],[4,"git_note"],[4,"git_note_iterator"],[4,"git_status_list"],[4,"git_pathspec"],[4,"git_pathspec_match_list"],[4,"git_diff"],[4,"git_diff_stats"],[4,"git_patch"],[4,"git_rebase"],[4,"git_reflog"],[4,"git_reflog_entry"],[4,"git_describe_result"],[4,"git_packbuilder"],[4,"git_odb"],[4,"git_odb_stream"],[4,"git_odb_object"],[4,"git_odb_writepack"],[4,"git_worktree"],[4,"LIBSSH2_SESSION"],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT"],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
